{
  "openapi": "3.0.0",
  "info": {
    "title": "Data Services Cloud Console API",
    "description": "Data Services Cloud Console API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://{{baseurl}}"
    }
  ],
  "components": {
    "securitySchemes": {
      "oauth2Auth": {
        "type": "http",
        "scheme": "oauth2"
      }
    }
  },
  "security": [
    {
      "oauth2Auth": []
    }
  ],
  "tags": [
    {
      "name": "api"
    },
    {
      "name": "api > Backup Recovery"
    },
    {
      "name": "api > Backup Recovery > Protection Store Gateways"
    },
    {
      "name": "api > Backup Recovery > Protection Stores"
    },
    {
      "name": "api > Backup Recovery > Data Orchestrator"
    },
    {
      "name": "api > Backup Recovery > VM Backups"
    },
    {
      "name": "api > Backup Recovery > Backup Recovery Reports"
    },
    {
      "name": "api > Backup Recovery > Protection Policies"
    },
    {
      "name": "api > Backup Recovery > Protection Jobs Report"
    },
    {
      "name": "api > Backup Recovery > Protection Groups"
    },
    {
      "name": "api > Backup Recovery > vCenter Managers"
    },
    {
      "name": "api > Backup Recovery > VMware Objects Folder"
    },
    {
      "name": "api > Backup Recovery > VMware Clusters"
    },
    {
      "name": "api > Backup Recovery > Hosts"
    },
    {
      "name": "api > Backup Recovery > Snapshots"
    },
    {
      "name": "api > Backup Recovery > Datastore"
    },
    {
      "name": "api > Backup Recovery > v1beta1"
    },
    {
      "name": "api > Backup Recovery > Virtual Machine Protection Groups"
    },
    {
      "name": "api > Backup Recovery > Dashboard Items"
    },
    {
      "name": "api > Storage API"
    },
    {
      "name": "api > Storage API > volumes"
    },
    {
      "name": "api > Storage API > volumes > {id}"
    },
    {
      "name": "api > Storage API > volume-sets"
    },
    {
      "name": "api > Storage API > volume-sets > {id}"
    },
    {
      "name": "api > Storage API > volume-sets > {id} > volumes"
    },
    {
      "name": "api > Storage API > tasks"
    },
    {
      "name": "api > Storage API > tasks > {id}"
    },
    {
      "name": "api > Storage API > storage-systems"
    },
    {
      "name": "api > Storage API > storage-systems > {systemId}"
    },
    {
      "name": "api > Storage API > storage-systems > {systemId} > volumes"
    },
    {
      "name": "api > Storage API > storage-systems > {systemId} > volume-sets"
    },
    {
      "name": "api > Storage API > storage-systems > {systemId} > volume-sets > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > {systemId} > storage-pools"
    },
    {
      "name": "api > Storage API > storage-systems > {systemId} > storage-pools > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > {systemId} > storage-pools > {id} > volumes"
    },
    {
      "name": "api > Storage API > storage-systems > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > storage-types"
    },
    {
      "name": "api > Storage API > storage-systems > provisioning-recommendations"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > un-export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId} > un-export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId} > export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > performance-statistics"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > performance-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > clone"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > capacity-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > actions > restore"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > actions > move"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections > {snapshotCollectionId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections > update"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections > remove"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > remove-volumes"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > promote"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > handover"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > demote"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > add-volumes"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > abort-handover"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > uninitialized-arrays"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > uninitialized-arrays > {uninitializedArrayId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses > {witnessId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses > {witnessId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses > {witnessId} > actions > test"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > {replicationpartnerId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > remove"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > actions > test"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > actions > resume"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > actions > pause"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > performance-statistics"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > performance-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > capacity-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > actions > merge"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > snapshots"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > snapshots > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > snapshots > actions > update"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > snapshot-collections"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > snapshot-collections > {snapshotCollectionId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > snapshot-collections > {snapshotCollectionId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > snapshot-collections > {snapshotCollectionId} > actions > clone"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > shelves"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > shelves > {shelfId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > shelves > {shelfId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > shelves > {shelfId} > actions > locate"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > shelves > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > shelves > actions > activate"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > provisioning-review"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > provisioning"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > protection-templates"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > protection-templates > {protectionTemplateId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > protection-templates > remove"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > ports"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > ports > {portId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > performance-policies"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > performance-policies > {performancePolicyId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > performance-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > network-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > network-settings > {networkSettingId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > network-interfaces"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > network-interfaces > {networkInterfaceId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > mail-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > host-initiators"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > host-initiators > {hostInitiatorId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > host-groups"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > host-groups > {hostInitiatorGroupId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > health-status"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > health-status > {healthStatusId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > folders"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > folders > {folderId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > fibre-channel-sessions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > fibre-channel-sessions > {fcSessionId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > fibre-channel-configs"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > fibre-channel-configs > {fcConfigId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > events"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > events > {eventId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > disks"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > disks > {diskId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > controllers"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > controllers > {controllerId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > controllers > {controllerId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > controllers > {controllerId} > actions > halt"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > capacity-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > autosupport"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > autosupport > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > autosupport > actions > send"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > arrays"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > arrays > {arrayId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > arrays > {arrayId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > arrays > {arrayId} > actions > failover"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > applications"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > applications > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > applications > {id} > capacity-stats"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > applications > capacity-stats"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > application-servers"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > application-servers > {applicationServerId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > alarms"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > alarms > {alarmId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > actions > merge"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > access-control-records"
    },
    {
      "name": "api > Storage API > storage-systems > device-type2 > {systemId} > access-control-records > {accessControlRecordId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > vluns"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > vluns > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > snapshots"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > clones"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > clones > {cloneId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > clones > {cloneId} > resync"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > clones > {cloneId} > promote"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > vluns"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > un-export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > snapshots"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > performance-statistics"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > performance-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > clone"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > capacity-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > vm-manager-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > vm-manager-settings > {vcenterSettingId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > trust-certificates"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > trust-certificates > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > trust-certificates > remove"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > telemetry"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > targets"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > targets > {targetName}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > targets > {targetName} > performance-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > replication-partners"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > replication-partners > {replicationPartnerId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > replication-partners > remove"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > quorum-witness"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > quorum-witness > {replicationPartnerId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > support-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > storage-pools"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > storage-pools > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > storage-pools > {id} > volumes"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > snapshots"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > snapshots > {snapshotId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > snapshots > {snapshotId} > un-export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > snapshots > {snapshotId} > export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > snapshots > {snapshotId} > clone"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > recommendations"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > qos-policy"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > ping-rcip"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > ping-iscsi"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > initialize"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > fc"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > edit-rcip"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > edit-iscsi"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > clear"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > performance-statistics"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > performance-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > service-ports"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > nodes-batteries"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > nodes-batteries > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-powers"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-powers > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-mems"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-mems > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-mcus"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-mcus > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-drives"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-drives > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-cpus"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-cpus > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-cards"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-cards > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > component-performance-statistics"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > service-ports"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > network-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > network-services"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > vasa"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > vasa > {vasaId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > snmp-mgr"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > snmp-mgr > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > cim"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > mail-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > hosts"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > hosts > {hostId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > host-sets"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > host-sets > {hostSetId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > host-paths"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > host-paths > {hostPathId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-sleds"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-sleds > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-powers"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-powers > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-fans"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-fans > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-expanders"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-expanders > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-disks"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-disks > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-cards"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-cards > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-card-ports"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-card-ports > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {cageId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {cageId} > disks"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {cageId} > disks > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > component-performance-statistics"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > collect-support-data"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > certificates"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > certificates > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > certificates > remove"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > capacity-summary"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > capacity-history"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > snapsets"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > remote-protection"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > remote-protection > actions"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > proximity-settings"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > capacity-statistics"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > volumes"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > un-export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > snapsets"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > snapsets > {snapsetId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > replication-partners"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > replication-partners > {replicationPartnerId}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > replication-partners > {replicationPartnerId} > volumes"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > export"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > application-summary"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > alert-contacts"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {systemId} > alert-contacts > {id}"
    },
    {
      "name": "api > Storage API > storage-systems > device-type1 > {id}"
    },
    {
      "name": "api > Storage API > resource-types"
    },
    {
      "name": "api > Storage API > issues"
    },
    {
      "name": "api > Storage API > issues > {id}"
    },
    {
      "name": "api > Storage API > initiators"
    },
    {
      "name": "api > Storage API > initiators > {initiatorId}"
    },
    {
      "name": "api > Storage API > host-initiators"
    },
    {
      "name": "api > Storage API > host-initiators > {hostId}"
    },
    {
      "name": "api > Storage API > host-initiators > {hostId} > volumes"
    },
    {
      "name": "api > Storage API > host-initiators > {hostId} > storage-performance-history"
    },
    {
      "name": "api > Storage API > host-initiator-groups"
    },
    {
      "name": "api > Storage API > host-initiator-groups > {hostGroupId}"
    },
    {
      "name": "api > Storage API > audit-events"
    },
    {
      "name": "api > Storage API > access-controls"
    }
  ],
  "paths": {
    "/api/v1/protection-store-gateways": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Store Gateways"
        ],
        "summary": "Protection Store Gateways",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultOffset}}"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultLimit}}"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,hostname,serialNumber,name,type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-store-gateways/{protectionStoreGatewayID}": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Store Gateways"
        ],
        "summary": "Protection Store Gateways Detail",
        "parameters": [
          {
            "name": "protectionStoreGatewayID",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "41f34390-90ba-47d1-be6b-386320ecd8bc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-store-gateways/{protectionStoreGatewayID}/consoleUser": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Store Gateways"
        ],
        "summary": "Show credentials of a Protection Store Gateway console user",
        "parameters": [
          {
            "name": "protectionStoreGatewayID",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "41f34390-90ba-47d1-be6b-386320ecd8bc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-store-gateway-sizer": {
      "post": {
        "tags": [
          "api > Backup Recovery > Protection Store Gateways"
        ],
        "summary": "Display resource requirements for Protection Storage Gateway",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "maxInCloudDailyProtectedDataTiB": 2,
                  "maxInCloudRetentionDays": 2,
                  "maxOnPremDailyProtectedDataTiB": 2,
                  "maxOnPremRetentionDays": 2
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-stores": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Stores"
        ],
        "summary": "Display Protection Stores",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-stores/{protectionStoreId}": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Stores"
        ],
        "summary": "Display Protection Stores Detail Copy",
        "parameters": [
          {
            "name": "protectionStoreId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "1d0875a9-10c9-4746-8f55-a585e2457962"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/protection-stores": {
      "post": {
        "tags": [
          "api > Backup Recovery > Protection Stores"
        ],
        "summary": "Create Protection Store",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "Ron RD Test Create Protection Store",
                  "protectionStoreType": "CLOUD",
                  "region": "USA, North Virginia",
                  "storageSystemId": "2dc06f5d-e175-4957-a460-b6cf909a6138"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/data-orchestrators": {
      "get": {
        "tags": [
          "api > Backup Recovery > Data Orchestrator"
        ],
        "summary": "Data Orchestrator",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/data-orchestrators/{dataOrchestratorId}": {
      "get": {
        "tags": [
          "api > Backup Recovery > Data Orchestrator"
        ],
        "summary": "Data Orchestrator Detail",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,name,customerId,connectionState,serialNumber,status,state,softwareVersion,upTimeInSeconds,dateTime"
          },
          {
            "name": "dataOrchestratorId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "d36122b2-ab2d-4474-ba97-15d2521926f0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/data-orchestrators/{DoId}/set-remote-support": {
      "post": {
        "tags": [
          "api > Backup Recovery > Data Orchestrator"
        ],
        "summary": "Enable Remote Support for Data Orchestrator",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "remoteAccessEnabled": {
                    "type": "boolean",
                    "example": "true"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "DoId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/data-orchestrators/{DoId}/restart-guest-os": {
      "post": {
        "tags": [
          "api > Backup Recovery > Data Orchestrator"
        ],
        "summary": "Restart a Data Orchestrator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "force": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "DoId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/data-orchestrators/{DoId}/generate-support-bundle": {
      "post": {
        "tags": [
          "api > Backup Recovery > Data Orchestrator"
        ],
        "summary": "Generate Support Bundles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "description": "This is a support bundle generated through API for validation"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "DoId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/backup-recovery/v1beta1/indexed-files": {
      "get": {
        "tags": [
          "api > Backup Recovery > VM Backups"
        ],
        "summary": "Display Indexed Files from an asset",
        "parameters": [
          {
            "name": "virtual-machine",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "44986dda-aeff-5b68-a6af-4d942616ec9d"
          },
          {
            "name": "backup",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "7ab439fc-7f2e-4823-9c8d-0492f76349f2"
          },
          {
            "name": "root-path",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "/Hard disk 1/volume 2/"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines": {
      "get": {
        "tags": [
          "api > Backup Recovery > VM Backups"
        ],
        "summary": "Display list of the virtual machines across registered HV managers",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,displayName"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "name eq 0-RRD-VVOL-VM-Test01"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}": {
      "get": {
        "tags": [
          "api > Backup Recovery > VM Backups"
        ],
        "summary": "Get Detail VM",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "e5ffa3bf-9df4-55a7-a88e-efde8dfa69f3"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "content-type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 25 May 2023 04:04:39 GMT"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "100"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "istio-envoy"
                }
              },
              "transfer-encoding": {
                "schema": {
                  "type": "string",
                  "example": "chunked"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "allowedOperations": [
                    "VIRTUAL_MACHINE_BACKUP_CREATE",
                    "VIRTUAL_MACHINE_BACKUP_UPDATE",
                    "VIRTUAL_MACHINE_BACKUP_DELETE",
                    "VIRTUAL_MACHINE_SNAPSHOT_CREATE",
                    "VIRTUAL_MACHINE_SNAPSHOT_UPDATE",
                    "VIRTUAL_MACHINE_SNAPSHOT_DELETE",
                    "VIRTUAL_MACHINE_RESTORE",
                    "VIRTUAL_MACHINE_DISKS_RESTORE"
                  ],
                  "appInfo": {
                    "vmware": {
                      "datacenterInfo": {
                        "id": "c4054a24-6929-5540-92c1-b5cbef88df21",
                        "moref": "datacenter-3",
                        "name": "CDS-TME-DC"
                      },
                      "datastoresInfo": [
                        {
                          "displayName": "0-BRS-VMFS-Test4",
                          "id": "5708f692-146c-5943-8722-a82288618d80",
                          "name": "0-BRS-VMFS-Test4",
                          "resourceUri": "/api/v1/datastores/5708f692-146c-5943-8722-a82288618d80",
                          "type": "DATASTORE"
                        }
                      ],
                      "moref": "vm-372675",
                      "resourcePoolInfo": {
                        "displayName": "Resources",
                        "id": "31467e84-23e1-5132-8a39-f89ea4e1011c",
                        "moref": "resgroup-9",
                        "name": "Resources",
                        "resourceUri": "/api/v1/hypervisor-managers/0c9acaa0-fe6e-4037-bc43-eaa239798f6d/resource-pools/31467e84-23e1-5132-8a39-f89ea4e1011c",
                        "type": "HYPERVISOR_RESOURCE_POOL"
                      },
                      "toolsInfo": {
                        "status": "OK",
                        "type": "guestToolsTypeMSI",
                        "version": "11334"
                      },
                      "type": "VMFS"
                    }
                  },
                  "appType": "VMWARE",
                  "capacityInBytes": 155692564480,
                  "clusterInfo": {
                    "displayName": "CDS-TME-Cluster",
                    "id": "d6c952be-80f4-5c86-9a69-a23504dc3f6b",
                    "name": "CDS-TME-Cluster",
                    "resourceUri": "/api/v1/hypervisor-clusters/d6c952be-80f4-5c86-9a69-a23504dc3f6b",
                    "type": "HYPERVISOR_CLUSTER"
                  },
                  "computeInfo": {
                    "memorySizeInMib": "8192",
                    "numCpuCores": 2,
                    "numCpuThreads": 4
                  },
                  "createdAt": "2023-05-23T00:51:03.156Z",
                  "customerId": "eb988b5e2dcb11ec840712b3b5263ef4",
                  "displayName": "0-VM-RRD-VMFS-VM01-physical-RDM",
                  "folderInfo": {
                    "displayName": "",
                    "id": "",
                    "name": "",
                    "resourceUri": "",
                    "type": ""
                  },
                  "generation": 144,
                  "guestInfo": {
                    "buildVersion": "",
                    "name": "Microsoft Windows Server 2016 or later (64-bit)",
                    "releaseVersion": "",
                    "type": "WINDOWS"
                  },
                  "hciClusterUuid": "",
                  "hostInfo": {
                    "displayName": "rtp-hpe-cds04.rtplab.nimblestorage.com",
                    "id": "b75287f5-0fb6-5c9b-b671-7e9f2632e929",
                    "name": "rtp-hpe-cds04.rtplab.nimblestorage.com",
                    "resourceUri": "/api/v1/hypervisor-hosts/b75287f5-0fb6-5c9b-b671-7e9f2632e929",
                    "type": "HYPERVISOR_HOST"
                  },
                  "hypervisorManagerInfo": {
                    "displayName": "CDS-TPM-VCENTER",
                    "id": "0c9acaa0-fe6e-4037-bc43-eaa239798f6d",
                    "name": "cds-tme-vcenter.rtplab.nimblestorage.com",
                    "resourceUri": "/api/v1/hypervisor-managers/0c9acaa0-fe6e-4037-bc43-eaa239798f6d",
                    "type": "HYPERVISOR_MANAGER"
                  },
                  "id": "34738538-6f8a-5326-a102-676a20b91b5e",
                  "name": "0-VM-RRD-VMFS-VM01-physical-RDM",
                  "networkAdapters": [
                    {
                      "macAddress": "00:50:56:b7:29:2e",
                      "macAddressType": "AUTOMATIC",
                      "name": "Network adapter 2",
                      "networkDetails": {
                        "connectAtPowerOn": true,
                        "displayName": "Mgmt-DPortGroup",
                        "id": "dvportgroup-1003",
                        "name": "Mgmt-DPortGroup",
                        "resourceUri": "",
                        "state": "",
                        "type": "Vmxnet3"
                      }
                    }
                  ],
                  "networkAddress": "10.234.36.225",
                  "powerState": "POWERED_ON",
                  "protected": true,
                  "protectionJobInfo": {
                    "id": "97f41fc1-b308-40ed-9934-eff462c87310",
                    "protectionPolicyInfo": {
                      "id": "9a401e5e-09a7-4996-8008-f43a8ed1c116",
                      "name": "Snapshot, Local, & Cloud Backup",
                      "resourceUri": "/api/v1/protection-policies/9a401e5e-09a7-4996-8008-f43a8ed1c116",
                      "type": "PROTECTION_POLICY"
                    },
                    "resourceUri": "/api/v1/protection-jobs/97f41fc1-b308-40ed-9934-eff462c87310",
                    "type": "PROTECTION_JOB"
                  },
                  "protectionPolicyAppliedAtInfo": {
                    "id": "",
                    "name": "",
                    "resourceUri": "",
                    "type": ""
                  },
                  "protectionStatus": "PARTIAL",
                  "recoveryPointsExist": true,
                  "resourceUri": "/api/v1/virtual-machines/34738538-6f8a-5326-a102-676a20b91b5e",
                  "services": [
                    "backup-and-recovery"
                  ],
                  "state": "OK",
                  "stateReason": "OK",
                  "status": "OK",
                  "type": "VIRTUAL_MACHINE",
                  "uid": "4237ca59-abeb-481c-9c3e-17aa2a80617e",
                  "updatedAt": "2023-05-25T04:01:15.696Z",
                  "vclsVm": false,
                  "virtualDisks": [
                    {
                      "appInfo": {
                        "vmware": {
                          "datastoreInfo": {
                            "displayName": "0-BRS-VMFS-Test4",
                            "id": "5708f692-146c-5943-8722-a82288618d80",
                            "name": "0-BRS-VMFS-Test4",
                            "resourceUri": "/api/v1/datastores/5708f692-146c-5943-8722-a82288618d80",
                            "type": "DATASTORE"
                          },
                          "diskUuidEnabled": true,
                          "type": "VMFS"
                        }
                      },
                      "capacityInBytes": 42949672960,
                      "filePath": "[0-BRS-VMFS-Test4] 0-VM-RRD-VMFS-VM01-physical-RDM/0-VM-RRD-VMFS-VM01-physical-RDM.vmdk",
                      "id": "a6f8c930-eadc-5e0f-aef6-66bac0b3280a",
                      "name": "Hard disk 1",
                      "uid": "6000C298-8225-b663-46e4-67ef686f0d97"
                    },
                    {
                      "appInfo": {
                        "vmware": {
                          "datastoreInfo": {
                            "displayName": "0-BRS-VMFS-Test4",
                            "id": "5708f692-146c-5943-8722-a82288618d80",
                            "name": "0-BRS-VMFS-Test4",
                            "resourceUri": "/api/v1/datastores/5708f692-146c-5943-8722-a82288618d80",
                            "type": "DATASTORE"
                          },
                          "diskUuidEnabled": false,
                          "type": "VMFS"
                        }
                      },
                      "capacityInBytes": 5368709120,
                      "filePath": "[0-BRS-VMFS-Test4] 0-VM-RRD-VMFS-VM01-physical-RDM/0-VM-RRD-VMFS-VM01-physical-RDM_1.vmdk",
                      "id": "787d7a5d-a12f-593a-a741-66f931ab377f",
                      "name": "Hard disk 2",
                      "uid": "6000C294-9653-6aaf-18ac-d3919e9817b2"
                    },
                    {
                      "appInfo": {
                        "vmware": {
                          "datastoreInfo": {
                            "displayName": "0-BRS-VMFS-Test4",
                            "id": "5708f692-146c-5943-8722-a82288618d80",
                            "name": "0-BRS-VMFS-Test4",
                            "resourceUri": "/api/v1/datastores/5708f692-146c-5943-8722-a82288618d80",
                            "type": "DATASTORE"
                          },
                          "diskUuidEnabled": false,
                          "type": "PRDM"
                        }
                      },
                      "capacityInBytes": 107374182400,
                      "filePath": "[0-BRS-VMFS-Test4] 0-VM-RRD-VMFS-VM01-physical-RDM/0-VM-RRD-VMFS-VM01-physical-RDM_2.vmdk",
                      "id": "b416ad29-9212-5a0e-8998-990d21974637",
                      "name": "Hard disk 3",
                      "uid": "01001e00003838363630316330383961373762303536633963653930303430396362326336536572766572"
                    }
                  ],
                  "vmClassification": "",
                  "vmConfigPath": "[0-BRS-VMFS-Test4] 0-VM-RRD-VMFS-VM01-physical-RDM/0-VM-RRD-VMFS-VM01-physical-RDM.vmx",
                  "vmPerfMetricInfo": {
                    "averageReadLatency": 0,
                    "averageWriteLatency": 0,
                    "cpuAllocatedInMhz": 0,
                    "cpuUsedInMhz": 0,
                    "memoryAllocatedInMb": 0,
                    "memoryUsedInMb": 0,
                    "storageAllocatedInKb": 0,
                    "storageUsedInBytes": 0,
                    "totalReadIops": 0,
                    "totalWriteIops": 0
                  },
                  "vmProtectionGroupsInfo": null,
                  "volumesInfo": [
                    {
                      "displayName": "",
                      "id": "",
                      "name": "",
                      "resourceUri": "",
                      "scsiIdentifier": "",
                      "sizeInBytes": 0,
                      "storageFolderInfo": {
                        "displayName": "",
                        "id": "",
                        "name": "",
                        "resourceUri": "",
                        "type": ""
                      },
                      "storagePoolInfo": {
                        "displayName": "",
                        "id": "",
                        "name": "",
                        "resourceUri": "",
                        "type": ""
                      },
                      "storageSystemInfo": {
                        "displayName": "group-rtp-array369",
                        "id": "409cb2c6",
                        "managed": true,
                        "name": "group-rtp-array369",
                        "resourceUri": "",
                        "serialNumber": "",
                        "type": "NIMBLE",
                        "vendorName": ""
                      },
                      "type": "",
                      "volumeSetInfo": {
                        "displayName": "",
                        "id": "",
                        "name": "",
                        "resourceUri": "",
                        "type": ""
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}/backups": {
      "post": {
        "tags": [
          "api > Backup Recovery > VM Backups"
        ],
        "summary": "Create a backup of a VM (not implemented yet)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "backupGranularity": "VMWARE_CBT",
                  "backupMode": "FULL",
                  "backupType": "BACKUP",
                  "description": "Test API for cloud backup",
                  "expireAfter": {
                    "unit": "DAYS",
                    "value": 2
                  },
                  "lockFor": {
                    "unit": "HOURS",
                    "value": 1
                  },
                  "name": "Test-API-Cloud",
                  "protectionStoreId": "501a99e7-fb79-4fd7-89d5-a5dfb3441859",
                  "sourceCopyInfo": {
                    "id": "90ad82bd-fa67-5bc0-9e37-728c19d08fd9",
                    "resourceUri": "/api/v1/virtual-machines/90ad82bd-fa67-5bc0-9e37-728c19d08fd9",
                    "type": "SNAPSHOT"
                  },
                  "verify": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "e5ffa3bf-9df4-55a7-a88e-efde8dfa69f3"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Backup Recovery > VM Backups"
        ],
        "summary": "Display Backups of a VM",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,backupType,consistency,expiresAt,name,pointInTime"
          },
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "34738538-6f8a-5326-a102-676a20b91b5e"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "content-type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 25 May 2023 04:09:26 GMT"
                }
              },
              "content-length": {
                "schema": {
                  "type": "integer",
                  "example": "1977"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "527"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "istio-envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "backupType": "BACKUP",
                      "consistency": "CRASH",
                      "expiresAt": "2023-05-25T16:57:56.251Z",
                      "id": "49f10d8d-2cbe-45af-9d09-ab2e0f17ead1",
                      "indexed": "NOT_INDEXED",
                      "name": "0-VM-RRD-VMFS-VM01-physical-RDM-2023-05-23-12:42:07",
                      "partialBackup": false,
                      "pointInTime": "2023-05-23T16:18:05.000Z"
                    },
                    {
                      "backupType": "CLOUD_BACKUP",
                      "consistency": "CRASH",
                      "expiresAt": "2023-06-06T16:36:55.108Z",
                      "id": "c1b59d18-b245-4c92-8cc4-9888f43597fa",
                      "indexed": "NOT_INDEXED",
                      "name": "HPE_Cloud_Protection_Store_2023-05-23-12:26:33",
                      "partialBackup": false,
                      "pointInTime": "2023-05-23T16:18:05.000Z"
                    },
                    {
                      "backupType": "BACKUP",
                      "consistency": "CRASH",
                      "expiresAt": "2023-05-28T16:24:56.608Z",
                      "id": "0fb97fe4-43ab-4b6c-b148-ea9029d151f2",
                      "indexed": "NOT_INDEXED",
                      "name": "On-Premises_Protection_Store_2023-05-23-12:18:11",
                      "partialBackup": false,
                      "pointInTime": "2023-05-23T16:18:05.000Z"
                    },
                    {
                      "backupType": "BACKUP",
                      "consistency": "CRASH",
                      "expiresAt": "2023-05-28T16:36:58.359Z",
                      "id": "2e43ac81-355a-4776-bce9-01205b2c0ffa",
                      "indexed": "NOT_INDEXED",
                      "name": "On-Premises_Protection_Store_2023-05-23-12:30:14",
                      "partialBackup": false,
                      "pointInTime": "2023-05-23T16:30:08.000Z"
                    },
                    {
                      "backupType": "BACKUP",
                      "consistency": "CRASH",
                      "expiresAt": "2023-05-29T03:05:50.062Z",
                      "id": "92ce90b4-b19f-4796-938f-34e896094f5b",
                      "indexed": "NOT_INDEXED",
                      "name": "On-Premises_Protection_Store_2023-05-23-23:00:00",
                      "partialBackup": false,
                      "pointInTime": "2023-05-24T02:17:36.000Z"
                    },
                    {
                      "backupType": "BACKUP",
                      "consistency": "CRASH",
                      "expiresAt": "2023-05-29T22:17:37.694Z",
                      "id": "960c43ab-d946-4bdf-8127-0148b22506d2",
                      "indexed": "NOT_INDEXED",
                      "name": "On-Premises_Protection_Store_2023-05-24-18:11:33",
                      "partialBackup": false,
                      "pointInTime": "2023-05-24T22:11:27.000Z"
                    },
                    {
                      "backupType": "BACKUP",
                      "consistency": "CRASH",
                      "expiresAt": "2023-05-30T03:02:33.853Z",
                      "id": "7f31ed11-20f1-4905-941d-11ee98b3ba55",
                      "indexed": "NOT_INDEXED",
                      "name": "On-Premises_Protection_Store_2023-05-24-23:00:00",
                      "partialBackup": false,
                      "pointInTime": "2023-05-25T02:17:35.000Z"
                    }
                  ],
                  "pageLimit": 100,
                  "pageOffset": 0,
                  "total": 7
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}/backups/{backupId}/index-files": {
      "post": {
        "tags": [
          "api > Backup Recovery > VM Backups"
        ],
        "summary": "Create Index of VM Files",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": ""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "8502b867-dfb1-5aa5-9b78-27f5826238e2"
          },
          {
            "name": "backupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "acb9969f-6373-4a55-945f-99145113ee52"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}/backups/{backupId}/indexed-files": {
      "get": {
        "tags": [
          "api > Backup Recovery > VM Backups"
        ],
        "summary": "Display files & folders from a backup of a VM",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "rootPath",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "/"
          },
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "8502b867-dfb1-5aa5-9b78-27f5826238e2"
          },
          {
            "name": "backupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "acb9969f-6373-4a55-945f-99145113ee52"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}/backups/{backupId}": {
      "delete": {
        "tags": [
          "api > Backup Recovery > VM Backups"
        ],
        "summary": "Delete a backup of a VM",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "90ad82bd-fa67-5bc0-9e37-728c19d08fd9"
          },
          {
            "name": "backupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "ca259665-2ca1-449a-994c-60a586d064e9"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/backup-recovery-reports/protection-jobs": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Jobs Report"
        ],
        "summary": "Report all protection jobs",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-policies": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Policies"
        ],
        "summary": "Get All Protection Policies",
        "parameters": [
          {
            "name": "filter ",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "protectionJobsInfo.assetInfo,displayName eq \"0-VM-RRD-VMFS-VM01-physical-RDM\""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Backup Recovery > Protection Policies"
        ],
        "summary": "Create a new protection policy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "description": "Protection Policy protecting Finance department's Virtual Machines or datastores.",
                  "name": "Gold-Protection-Policy",
                  "protections": [
                    {
                      "applicationType": "VMWARE",
                      "protectionStoreId": "2a1172be-4281-44f9-848b-9c3f86378b13",
                      "schedules": [
                        {
                          "expireAfter": {
                            "unit": "HOURS",
                            "value": 0
                          },
                          "id": 0,
                          "lockFor": {
                            "unit": "HOURS",
                            "value": 0
                          },
                          "name": "Hourly snapshot schedule",
                          "namePattern": {
                            "format": "Test_{SourceAssetName}_Copy_{DateFormat}"
                          },
                          "schedule": {
                            "activeTime": {
                              "activeFromTime": "16:15",
                              "activeUntilTime": "20:15"
                            },
                            "recurrence": "BY_MINUTES",
                            "repeatInterval": {
                              "every": 0,
                              "on": [
                                0
                              ]
                            },
                            "startTime": "16:35"
                          },
                          "sourceProtectionScheduleId": 0,
                          "verify": false
                        }
                      ],
                      "type": "SNAPSHOT"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-policies/{policyId}": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Policies"
        ],
        "summary": "Get detailed info from a protection policy",
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-jobs/{protectionJobsId}/run": {
      "post": {
        "tags": [
          "api > Backup Recovery > Protection Policies"
        ],
        "summary": "Run a protection job immediately",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "scheduleIds": [
                    3
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "protectionJobsId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "97f41fc1-b308-40ed-9934-eff462c87310"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/protection-jobs/{protectionJobId}": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Policies"
        ],
        "summary": "Show detailed existing protection Job",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id"
          },
          {
            "name": "protectionJobId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "97f41fc1-b308-40ed-9934-eff462c87310"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "date": {
                "schema": {
                  "type": "string",
                  "example": "Wed, 24 May 2023 22:10:11 GMT"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "istio-envoy"
                }
              },
              "content-length": {
                "schema": {
                  "type": "integer",
                  "example": "2519"
                }
              },
              "content-type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "33"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "assetInfo": {
                    "id": "34738538-6f8a-5326-a102-676a20b91b5e",
                    "displayName": "0-VM-RRD-VMFS-VM01-physical-RDM",
                    "type": "VIRTUAL_MACHINE",
                    "resourceUri": "/api/v1/virtual-machines/34738538-6f8a-5326-a102-676a20b91b5e"
                  },
                  "protectionPolicyInfo": {
                    "id": "9a401e5e-09a7-4996-8008-f43a8ed1c116",
                    "name": "Snapshot, Local, & Cloud Backup",
                    "resourceUri": "/api/v1/protection-policies/9a401e5e-09a7-4996-8008-f43a8ed1c116",
                    "type": "PROTECTION_POLICY"
                  },
                  "id": "97f41fc1-b308-40ed-9934-eff462c87310",
                  "operational": "ACTIVE",
                  "generation": 33,
                  "protections": [
                    {
                      "id": "f47854b5-6f0d-4794-86c8-763017f0b3d7",
                      "schedules": [
                        {
                          "executionStatuses": [
                            {
                              "status": "OK",
                              "timestamp": "2023-05-24T03:07:25.454Z"
                            }
                          ],
                          "id": 2,
                          "sourceProtectionScheduleId": 1,
                          "nextRunTime": "2023-05-25T03:00:00.000Z",
                          "operational": "ACTIVE",
                          "schedule": {
                            "recurrence": "DAILY",
                            "repeatInterval": {
                              "every": 1
                            },
                            "startTime": "23:00"
                          },
                          "overrides": {
                            "schedule": {
                              "recurrence": "DAILY",
                              "repeatInterval": {
                                "every": 1
                              },
                              "startTime": "23:00"
                            },
                            "backupGranularity": "VOLUME",
                            "consistency": "CRASH"
                          },
                          "prevRunTime": "2023-05-24T03:00:00.000Z",
                          "prevSuccessfulRunTime": "2023-05-24T03:07:25.454Z"
                        }
                      ],
                      "type": "BACKUP",
                      "applicationType": "VMWARE"
                    },
                    {
                      "id": "88730122-1c26-4dd0-bce7-e575c34b5065",
                      "schedules": [
                        {
                          "executionStatuses": [
                            {
                              "status": "OK",
                              "timestamp": "2023-05-24T12:17:41.075Z"
                            },
                            {
                              "status": "OK",
                              "timestamp": "2023-05-24T14:17:40.768Z"
                            },
                            {
                              "status": "OK",
                              "timestamp": "2023-05-24T16:17:41.032Z"
                            },
                            {
                              "status": "OK",
                              "timestamp": "2023-05-24T18:17:41.135Z"
                            },
                            {
                              "status": "OK",
                              "timestamp": "2023-05-24T20:17:40.988Z"
                            }
                          ],
                          "id": 1,
                          "nextRunTime": "2023-05-24T22:17:23.000Z",
                          "operational": "ACTIVE",
                          "schedule": {
                            "recurrence": "HOURLY",
                            "repeatInterval": {
                              "every": 2
                            }
                          },
                          "overrides": {
                            "schedule": {
                              "recurrence": "HOURLY",
                              "repeatInterval": {
                                "every": 2
                              }
                            },
                            "backupGranularity": "VOLUME",
                            "consistency": "CRASH"
                          },
                          "prevRunTime": "2023-05-24T20:17:23.000Z",
                          "prevSuccessfulRunTime": "2023-05-24T20:17:40.988Z"
                        }
                      ],
                      "type": "SNAPSHOT",
                      "applicationType": "VMWARE"
                    },
                    {
                      "id": "996f95a8-976b-43f4-bf34-3a30d84e5dca",
                      "schedules": [
                        {
                          "id": 3,
                          "sourceProtectionScheduleId": 2,
                          "nextRunTime": "2023-05-28T06:00:00.000Z",
                          "operational": "ACTIVE",
                          "schedule": {
                            "recurrence": "WEEKLY",
                            "repeatInterval": {
                              "on": [
                                6
                              ],
                              "every": 1
                            },
                            "startTime": "02:00"
                          },
                          "overrides": {
                            "schedule": {
                              "recurrence": "WEEKLY",
                              "repeatInterval": {
                                "on": [
                                  6
                                ],
                                "every": 1
                              },
                              "startTime": "02:00"
                            },
                            "backupGranularity": "VOLUME",
                            "consistency": "CRASH"
                          }
                        }
                      ],
                      "type": "CLOUD_BACKUP",
                      "applicationType": "VMWARE"
                    }
                  ],
                  "resourceUri": "/api/v1/protection-jobs/97f41fc1-b308-40ed-9934-eff462c87310",
                  "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                  "type": "PROTECTION_JOB"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/protection-jobs": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Policies"
        ],
        "summary": "Show all existing protection jobs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "assetInfo.id eq 34738538-6f8a-5326-a102-676a20b91b5e"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 25 May 2023 08:14:40 GMT"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "istio-envoy"
                }
              },
              "content-length": {
                "schema": {
                  "type": "integer",
                  "example": "24332"
                }
              },
              "content-type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "147"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "assetInfo": {
                        "id": "5f47a26a-8f94-5f2f-8ab0-e5e9edbbdff0",
                        "displayName": "0-SVT-DEMO-VM03",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/5f47a26a-8f94-5f2f-8ab0-e5e9edbbdff0"
                      },
                      "protectionPolicyInfo": {
                        "id": "45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "name": "VVOL protection 3 tier",
                        "resourceUri": "/api/v1/protection-policies/45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "50c15fc7-00d5-4c17-8291-d4ac8c94d8e0",
                      "operational": "ACTIVE",
                      "generation": 182,
                      "protections": [
                        {
                          "id": "4160af63-1131-48ef-8b50-a25fc366ad9f",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T15:03:02.388Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T19:03:02.101Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T23:03:03.632Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T03:03:03.236Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T07:03:01.727Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T11:00:57.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "HOURLY",
                                "repeatInterval": {
                                  "every": 4
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "HOURLY",
                                  "repeatInterval": {
                                    "every": 4
                                  }
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH_CONSISTENT_ON_FAILURE"
                              },
                              "prevRunTime": "2023-05-25T07:00:57.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T07:03:01.727Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "36aa62c4-ddf7-4599-b40f-c40762626491",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-19T04:48:10.145Z"
                                }
                              ],
                              "id": 3,
                              "sourceProtectionScheduleId": 2,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "WEEKLY",
                                "repeatInterval": {
                                  "on": [
                                    4
                                  ],
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "WEEKLY",
                                  "repeatInterval": {
                                    "on": [
                                      4
                                    ],
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH_CONSISTENT_ON_FAILURE"
                              },
                              "prevRunTime": "2023-05-19T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-19T04:48:10.145Z"
                            }
                          ],
                          "type": "CLOUD_BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "39406920-e4f6-4a7a-aad0-3dcc3b970407",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-21T04:20:11.291Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-22T04:17:53.630Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-23T04:16:50.702Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T04:14:44.222Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T04:15:01.651Z"
                                }
                              ],
                              "id": 2,
                              "sourceProtectionScheduleId": 1,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH_CONSISTENT_ON_FAILURE"
                              },
                              "prevRunTime": "2023-05-25T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T04:15:01.651Z"
                            }
                          ],
                          "type": "BACKUP",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/50c15fc7-00d5-4c17-8291-d4ac8c94d8e0",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    },
                    {
                      "assetInfo": {
                        "id": "8502b867-dfb1-5aa5-9b78-27f5826238e2",
                        "displayName": "0-SVT-VVOL-Demo-VM07",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/8502b867-dfb1-5aa5-9b78-27f5826238e2"
                      },
                      "protectionPolicyInfo": {
                        "id": "45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "name": "VVOL protection 3 tier",
                        "resourceUri": "/api/v1/protection-policies/45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "b0469053-4432-46e6-9f71-82ce40f57714",
                      "operational": "ACTIVE",
                      "generation": 178,
                      "protections": [
                        {
                          "id": "39406920-e4f6-4a7a-aad0-3dcc3b970407",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-21T04:05:23.030Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-22T04:05:11.279Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-23T04:04:57.305Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T04:04:59.454Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T04:05:00.743Z"
                                }
                              ],
                              "id": 2,
                              "sourceProtectionScheduleId": 1,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T04:05:00.743Z"
                            }
                          ],
                          "type": "BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "36aa62c4-ddf7-4599-b40f-c40762626491",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-19T04:08:53.003Z"
                                }
                              ],
                              "id": 3,
                              "sourceProtectionScheduleId": 2,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "WEEKLY",
                                "repeatInterval": {
                                  "on": [
                                    4
                                  ],
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "WEEKLY",
                                  "repeatInterval": {
                                    "on": [
                                      4
                                    ],
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-19T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-19T04:08:53.003Z"
                            }
                          ],
                          "type": "CLOUD_BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "4160af63-1131-48ef-8b50-a25fc366ad9f",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T13:51:22.457Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T17:51:21.600Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T21:51:21.428Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T01:51:21.686Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T05:51:21.321Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T09:50:59.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "HOURLY",
                                "repeatInterval": {
                                  "every": 4
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "HOURLY",
                                  "repeatInterval": {
                                    "every": 4
                                  }
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T05:50:59.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T05:51:21.321Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/b0469053-4432-46e6-9f71-82ce40f57714",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    },
                    {
                      "assetInfo": {
                        "id": "f6aee6a8-7300-56d1-8313-4bc6efda3b4f",
                        "displayName": "0-Linux0Demo-VM03",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/f6aee6a8-7300-56d1-8313-4bc6efda3b4f"
                      },
                      "protectionPolicyInfo": {
                        "id": "1727fe8e-336d-4850-9fe1-6ca4975f3771",
                        "name": "STOREONCE",
                        "resourceUri": "/api/v1/protection-policies/1727fe8e-336d-4850-9fe1-6ca4975f3771",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "4ecea7cf-96a4-4a90-9c84-99d5083c9d30",
                      "operational": "ACTIVE",
                      "generation": 849,
                      "protections": [
                        {
                          "id": "ba99d097-0a04-4a05-adb6-3288a884cf35",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "IN_PROGRESS"
                                },
                                {
                                  "status": "IN_PROGRESS"
                                },
                                {
                                  "status": "IN_PROGRESS"
                                },
                                {
                                  "status": "IN_PROGRESS"
                                },
                                {
                                  "status": "IN_PROGRESS"
                                }
                              ],
                              "id": 3,
                              "sourceProtectionScheduleId": 2,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T04:00:00.000Z"
                            }
                          ],
                          "type": "CLOUD_BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "87aaa7bd-3603-4fed-88a0-eb34723b585c",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T06:03:03.543Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T06:33:03.521Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T07:02:59.418Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T07:33:03.395Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T08:03:04.109Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T08:32:47.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "BY_MINUTES",
                                "repeatInterval": {
                                  "every": 30
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "BY_MINUTES",
                                  "repeatInterval": {
                                    "every": 30
                                  }
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T08:02:47.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T08:03:04.109Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "d4e11165-96d4-49a9-8796-34104f368843",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "IN_PROGRESS"
                                },
                                {
                                  "status": "IN_PROGRESS"
                                },
                                {
                                  "status": "IN_PROGRESS"
                                },
                                {
                                  "status": "IN_PROGRESS"
                                },
                                {
                                  "status": "IN_PROGRESS"
                                }
                              ],
                              "id": 2,
                              "sourceProtectionScheduleId": 1,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T04:00:00.000Z"
                            }
                          ],
                          "type": "BACKUP",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/4ecea7cf-96a4-4a90-9c84-99d5083c9d30",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    },
                    {
                      "assetInfo": {
                        "id": "e5ffa3bf-9df4-55a7-a88e-efde8dfa69f3",
                        "displayName": "0-RRD-VVOL-VM-Test01",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/e5ffa3bf-9df4-55a7-a88e-efde8dfa69f3"
                      },
                      "protectionPolicyInfo": {
                        "id": "45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "name": "VVOL protection 3 tier",
                        "resourceUri": "/api/v1/protection-policies/45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "d47cd749-59c8-4c70-bbb4-46ea10428505",
                      "operational": "ACTIVE",
                      "generation": 182,
                      "protections": [
                        {
                          "id": "36aa62c4-ddf7-4599-b40f-c40762626491",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-19T04:02:27.726Z"
                                }
                              ],
                              "id": 3,
                              "sourceProtectionScheduleId": 2,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "WEEKLY",
                                "repeatInterval": {
                                  "on": [
                                    4
                                  ],
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "WEEKLY",
                                  "repeatInterval": {
                                    "on": [
                                      4
                                    ],
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-19T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-19T04:02:27.726Z"
                            }
                          ],
                          "type": "CLOUD_BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "39406920-e4f6-4a7a-aad0-3dcc3b970407",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-21T04:01:10.624Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-22T04:06:19.880Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-23T04:01:09.758Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T04:01:09.186Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T04:01:42.930Z"
                                }
                              ],
                              "id": 2,
                              "sourceProtectionScheduleId": 1,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T04:01:42.930Z"
                            }
                          ],
                          "type": "BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "4160af63-1131-48ef-8b50-a25fc366ad9f",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T15:46:58.216Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T19:46:58.540Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T23:46:58.522Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T03:46:58.319Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T07:46:58.255Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T11:46:39.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "HOURLY",
                                "repeatInterval": {
                                  "every": 4
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "HOURLY",
                                  "repeatInterval": {
                                    "every": 4
                                  }
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T07:46:39.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T07:46:58.255Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/d47cd749-59c8-4c70-bbb4-46ea10428505",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    },
                    {
                      "assetInfo": {
                        "id": "44986dda-aeff-5b68-a6af-4d942616ec9d",
                        "displayName": "0-Linux-Demo-VM02",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/44986dda-aeff-5b68-a6af-4d942616ec9d"
                      },
                      "protectionPolicyInfo": {
                        "id": "136d43de-d95c-4bf0-842d-cd342c309c29",
                        "name": "VVOL Snapshots",
                        "resourceUri": "/api/v1/protection-policies/136d43de-d95c-4bf0-842d-cd342c309c29",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "70453295-762b-440c-bc45-7661bb10df64",
                      "operational": "ACTIVE",
                      "generation": 154,
                      "protections": [
                        {
                          "id": "41f342d1-6e46-4168-9dad-fff95353995f",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T14:46:36.554Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T18:46:36.267Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T22:46:36.522Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T02:46:36.606Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T06:46:35.427Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T10:46:07.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "HOURLY",
                                "repeatInterval": {
                                  "every": 4
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "HOURLY",
                                  "repeatInterval": {
                                    "every": 4
                                  }
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH_CONSISTENT_ON_FAILURE"
                              },
                              "prevRunTime": "2023-05-25T06:46:07.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T06:46:35.427Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/70453295-762b-440c-bc45-7661bb10df64",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    },
                    {
                      "assetInfo": {
                        "id": "56a795dd-ee49-5b62-aa82-6e1442821d7d",
                        "displayName": "0-SVT-Demo-VM02",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/56a795dd-ee49-5b62-aa82-6e1442821d7d"
                      },
                      "protectionPolicyInfo": {
                        "id": "45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "name": "VVOL protection 3 tier",
                        "resourceUri": "/api/v1/protection-policies/45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "17da4054-f029-4577-a08e-6dea4f62b50a",
                      "operational": "ACTIVE",
                      "generation": 178,
                      "protections": [
                        {
                          "id": "36aa62c4-ddf7-4599-b40f-c40762626491",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-19T04:56:18.358Z"
                                }
                              ],
                              "id": 3,
                              "sourceProtectionScheduleId": 2,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "WEEKLY",
                                "repeatInterval": {
                                  "on": [
                                    4
                                  ],
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "WEEKLY",
                                  "repeatInterval": {
                                    "on": [
                                      4
                                    ],
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VMWARE_CBT",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-19T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-19T04:56:18.358Z"
                            }
                          ],
                          "type": "CLOUD_BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "4160af63-1131-48ef-8b50-a25fc366ad9f",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T13:39:16.619Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T17:39:16.862Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T21:39:16.801Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T01:39:16.720Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T05:39:16.624Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T09:38:54.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "HOURLY",
                                "repeatInterval": {
                                  "every": 4
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "HOURLY",
                                  "repeatInterval": {
                                    "every": 4
                                  }
                                },
                                "backupGranularity": "VMWARE_CBT",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T05:38:54.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T05:39:16.624Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "39406920-e4f6-4a7a-aad0-3dcc3b970407",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-21T04:09:59.176Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-22T04:09:53.039Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-23T04:11:13.598Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T04:11:05.042Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T04:10:43.195Z"
                                }
                              ],
                              "id": 2,
                              "sourceProtectionScheduleId": 1,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VMWARE_CBT",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T04:10:43.195Z"
                            }
                          ],
                          "type": "BACKUP",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/17da4054-f029-4577-a08e-6dea4f62b50a",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    },
                    {
                      "assetInfo": {
                        "id": "d83e0485-4bef-52ab-a991-ae62832eae68",
                        "displayName": "0-VM-01-VVOL-DS",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/d83e0485-4bef-52ab-a991-ae62832eae68"
                      },
                      "protectionPolicyInfo": {
                        "id": "45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "name": "VVOL protection 3 tier",
                        "resourceUri": "/api/v1/protection-policies/45582918-aa2f-4d72-9f55-8d6a13f07729",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "dc112dca-c1e9-4694-b882-e0fbf7c11d5c",
                      "operational": "ACTIVE",
                      "generation": 123,
                      "protections": [
                        {
                          "id": "36aa62c4-ddf7-4599-b40f-c40762626491",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-19T04:06:51.414Z"
                                }
                              ],
                              "id": 3,
                              "sourceProtectionScheduleId": 2,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "WEEKLY",
                                "repeatInterval": {
                                  "on": [
                                    4
                                  ],
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "WEEKLY",
                                  "repeatInterval": {
                                    "on": [
                                      4
                                    ],
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-19T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-19T04:06:51.414Z"
                            }
                          ],
                          "type": "CLOUD_BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "4160af63-1131-48ef-8b50-a25fc366ad9f",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T14:05:31.953Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T18:05:31.331Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T22:05:31.280Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T02:05:32.153Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T06:05:32.108Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T10:05:12.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "HOURLY",
                                "repeatInterval": {
                                  "every": 4
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "HOURLY",
                                  "repeatInterval": {
                                    "every": 4
                                  }
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T06:05:12.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T06:05:32.108Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "39406920-e4f6-4a7a-aad0-3dcc3b970407",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-21T04:03:29.739Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-22T04:03:38.426Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-23T04:03:12.815Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T04:03:28.449Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T04:03:29.246Z"
                                }
                              ],
                              "id": 2,
                              "sourceProtectionScheduleId": 1,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T04:03:29.246Z"
                            }
                          ],
                          "type": "BACKUP",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/dc112dca-c1e9-4694-b882-e0fbf7c11d5c",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    },
                    {
                      "assetInfo": {
                        "id": "09fd25da-f75c-53ff-ae19-16e0af4bed17",
                        "displayName": "NT-Win2019-SQL-Demo",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/09fd25da-f75c-53ff-ae19-16e0af4bed17"
                      },
                      "protectionPolicyInfo": {
                        "id": "4ae981f5-2878-4870-b7f0-502571f9fcb0",
                        "name": "NT-Local-Cloud",
                        "resourceUri": "/api/v1/protection-policies/4ae981f5-2878-4870-b7f0-502571f9fcb0",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "7456a7eb-1ce9-4d4d-bc8d-a072fb03cfae",
                      "operational": "ACTIVE",
                      "generation": 199,
                      "protections": [
                        {
                          "id": "30c8f0d1-53f0-47dc-b6f2-79d84a17259b",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-07T07:06:43.224Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-14T07:03:40.263Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-21T07:05:20.175Z"
                                }
                              ],
                              "id": 3,
                              "sourceProtectionScheduleId": 2,
                              "nextRunTime": "2023-05-28T07:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "WEEKLY",
                                "repeatInterval": {
                                  "on": [
                                    6
                                  ],
                                  "every": 1
                                },
                                "startTime": "03:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "WEEKLY",
                                  "repeatInterval": {
                                    "on": [
                                      6
                                    ],
                                    "every": 1
                                  },
                                  "startTime": "03:00"
                                },
                                "backupGranularity": "VMWARE_CBT",
                                "consistency": "CRASH_CONSISTENT_ON_FAILURE"
                              },
                              "prevRunTime": "2023-05-21T07:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-21T07:05:20.175Z"
                            }
                          ],
                          "type": "CLOUD_BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "314bdee1-325b-4315-acc8-dea699a270ec",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-21T04:12:33.401Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-22T04:14:35.659Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-23T04:09:39.878Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T04:11:24.409Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T04:11:00.388Z"
                                }
                              ],
                              "id": 2,
                              "sourceProtectionScheduleId": 1,
                              "nextRunTime": "2023-05-26T04:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "00:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "00:00"
                                },
                                "backupGranularity": "VMWARE_CBT",
                                "consistency": "CRASH_CONSISTENT_ON_FAILURE"
                              },
                              "prevRunTime": "2023-05-25T04:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T04:11:00.388Z"
                            }
                          ],
                          "type": "BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "c1fb5bac-c7aa-4831-9ef4-0f82e1282973",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T02:29:14.752Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T14:29:13.324Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T18:29:08.981Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T22:29:10.978Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T02:29:15.082Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T14:28:35.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "HOURLY",
                                "repeatInterval": {
                                  "every": 4
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "HOURLY",
                                  "repeatInterval": {
                                    "every": 4
                                  }
                                },
                                "backupGranularity": "VMWARE_CBT",
                                "consistency": "CRASH_CONSISTENT_ON_FAILURE"
                              },
                              "prevRunTime": "2023-05-25T02:28:35.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T02:29:15.082Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/7456a7eb-1ce9-4d4d-bc8d-a072fb03cfae",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    },
                    {
                      "assetInfo": {
                        "id": "34738538-6f8a-5326-a102-676a20b91b5e",
                        "displayName": "0-VM-RRD-VMFS-VM01-physical-RDM",
                        "type": "VIRTUAL_MACHINE",
                        "resourceUri": "/api/v1/virtual-machines/34738538-6f8a-5326-a102-676a20b91b5e"
                      },
                      "protectionPolicyInfo": {
                        "id": "9a401e5e-09a7-4996-8008-f43a8ed1c116",
                        "name": "Snapshot, Local, & Cloud Backup",
                        "resourceUri": "/api/v1/protection-policies/9a401e5e-09a7-4996-8008-f43a8ed1c116",
                        "type": "PROTECTION_POLICY"
                      },
                      "id": "97f41fc1-b308-40ed-9934-eff462c87310",
                      "operational": "ACTIVE",
                      "generation": 45,
                      "protections": [
                        {
                          "id": "f47854b5-6f0d-4794-86c8-763017f0b3d7",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T03:07:25.454Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T03:04:11.734Z"
                                }
                              ],
                              "id": 2,
                              "sourceProtectionScheduleId": 1,
                              "nextRunTime": "2023-05-26T03:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "DAILY",
                                "repeatInterval": {
                                  "every": 1
                                },
                                "startTime": "23:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "DAILY",
                                  "repeatInterval": {
                                    "every": 1
                                  },
                                  "startTime": "23:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T03:00:00.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T03:04:11.734Z"
                            }
                          ],
                          "type": "BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "996f95a8-976b-43f4-bf34-3a30d84e5dca",
                          "schedules": [
                            {
                              "id": 3,
                              "sourceProtectionScheduleId": 2,
                              "nextRunTime": "2023-05-28T06:00:00.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "WEEKLY",
                                "repeatInterval": {
                                  "on": [
                                    6
                                  ],
                                  "every": 1
                                },
                                "startTime": "02:00"
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "WEEKLY",
                                  "repeatInterval": {
                                    "on": [
                                      6
                                    ],
                                    "every": 1
                                  },
                                  "startTime": "02:00"
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              }
                            }
                          ],
                          "type": "CLOUD_BACKUP",
                          "applicationType": "VMWARE"
                        },
                        {
                          "id": "88730122-1c26-4dd0-bce7-e575c34b5065",
                          "schedules": [
                            {
                              "executionStatuses": [
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-24T22:17:41.442Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T00:17:41.300Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T02:17:40.718Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T04:17:41.293Z"
                                },
                                {
                                  "status": "OK",
                                  "timestamp": "2023-05-25T06:17:40.935Z"
                                }
                              ],
                              "id": 1,
                              "nextRunTime": "2023-05-25T08:17:23.000Z",
                              "operational": "ACTIVE",
                              "schedule": {
                                "recurrence": "HOURLY",
                                "repeatInterval": {
                                  "every": 2
                                }
                              },
                              "overrides": {
                                "schedule": {
                                  "recurrence": "HOURLY",
                                  "repeatInterval": {
                                    "every": 2
                                  }
                                },
                                "backupGranularity": "VOLUME",
                                "consistency": "CRASH"
                              },
                              "prevRunTime": "2023-05-25T06:17:23.000Z",
                              "prevSuccessfulRunTime": "2023-05-25T06:17:40.935Z"
                            }
                          ],
                          "type": "SNAPSHOT",
                          "applicationType": "VMWARE"
                        }
                      ],
                      "resourceUri": "/api/v1/protection-jobs/97f41fc1-b308-40ed-9934-eff462c87310",
                      "dataOrchestratorId": "d36122b2-ab2d-4474-ba97-15d2521926f0",
                      "type": "PROTECTION_JOB"
                    }
                  ],
                  "pageLimit": 100,
                  "pageOffset": 0,
                  "total": 9
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backup-recovery-reports/protection-status": {
      "get": {
        "tags": [
          "api > Backup Recovery > Protection Jobs Report"
        ],
        "summary": "Report all protection status",
        "parameters": [
          {
            "name": "reportType",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "SUMMARY"
          },
          {
            "name": "appType",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "ALL"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machine-protection-groups": {
      "get": {
        "tags": [
          "api > Backup Recovery > Virtual Machine Protection Groups"
        ],
        "summary": "Show all protection-groups",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultOffset}}"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultLimit}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/hypervisor-managers": {
      "get": {
        "tags": [
          "api > Backup Recovery > vCenter Managers"
        ],
        "summary": "List the registered vCenters",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/hypervisor-managers/{hypervisorId}": {
      "get": {
        "tags": [
          "api > Backup Recovery > vCenter Managers"
        ],
        "summary": "Detail information of a vCenter",
        "parameters": [
          {
            "name": "hypervisorId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "800e9684-1ca6-44c1-86c0-d73d56e0eadd"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/hypervisor-managers/{hyperVisorId}/folders": {
      "get": {
        "tags": [
          "api > Backup Recovery > VMware Objects Folder"
        ],
        "summary": "Display Folders",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "folderType in VM"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,name,displayName,appInfo,hypervisorManagerInfo,type,folderType"
          },
          {
            "name": "hyperVisorId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/hypervisor-clusters": {
      "get": {
        "tags": [
          "api > Backup Recovery > VMware Clusters"
        ],
        "summary": "Display Hypervisor Clusters",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "example": "hypervisorManagerInfo.name eq 10.30.156.70"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,name,appInfo,clusterType,hypervisorManagerInfo,resourceName,state,status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/hypervisor-hosts": {
      "get": {
        "tags": [
          "api > Backup Recovery > Hosts"
        ],
        "summary": "Display Hosts across registered Hypervisors",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,name,appInfo,hypervisorManagerInfo,hostType,networkAddress,hostType,parentInfo"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{VmId}/snapshots": {
      "get": {
        "tags": [
          "api > Backup Recovery > Snapshots"
        ],
        "summary": "Display list of Snapshots of VM",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultOffset}}"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultLimit}}"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "status eq OK"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "name,pointInTime,expiresAt,id"
          },
          {
            "name": "VmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "e5ffa3bf-9df4-55a7-a88e-efde8dfa69f3"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Backup Recovery > Snapshots"
        ],
        "summary": "Create a Snapshot of VM",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "consistency": "CRASH",
                  "description": "RRD API triggered",
                  "expireAfter": {
                    "unit": "HOURS",
                    "value": 2
                  },
                  "lockFor": {
                    "unit": "HOURS",
                    "value": 1
                  },
                  "name": "Primera Snapshot for testing",
                  "snapshotType": "SNAPSHOT"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "VmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "44986dda-aeff-5b68-a6af-4d942616ec9d"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}/snapshots/{snapshotId}": {
      "get": {
        "tags": [
          "api > Backup Recovery > Snapshots"
        ],
        "summary": "Show VM snapshot detail",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "44986dda-aeff-5b68-a6af-4d942616ec9d"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "51e82c58-0d59-49d1-af91-8d058f849cb8"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > Backup Recovery > Snapshots"
        ],
        "summary": "Delete a snapshot from a VM",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "44986dda-aeff-5b68-a6af-4d942616ec9d"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "a20262b5-faf2-4d3c-8277-1afe2534d1a3"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}/snapshots/{snapshotId}/index-files": {
      "post": {
        "tags": [
          "api > Backup Recovery > Snapshots"
        ],
        "summary": "Initiate files indexing from snapshot of a VM (VVOL only)",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "8502b867-dfb1-5aa5-9b78-27f5826238e2"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "cc1e9d01-e6ac-4e36-9a33-66eff01e44ab"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}/snapshots/{snapshotId}/indexed-files": {
      "get": {
        "tags": [
          "api > Backup Recovery > Snapshots"
        ],
        "summary": "Display files & folders from snapshot of a VM Copy",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "8502b867-dfb1-5aa5-9b78-27f5826238e2"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "cc1e9d01-e6ac-4e36-9a33-66eff01e44ab"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/virtual-machines/{vmId}/snapshots/{snapshotId}/indexed-filesystems": {
      "get": {
        "tags": [
          "api > Backup Recovery > Snapshots"
        ],
        "summary": "Display FS information from snapshot of a VM",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "44986dda-aeff-5b68-a6af-4d942616ec9d"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "51e82c58-0d59-49d1-af91-8d058f849cb8"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/datastores": {
      "get": {
        "tags": [
          "api > Backup Recovery > Datastore"
        ],
        "summary": "Display Datastore",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultOffset}}"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultLimit}}"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "name in Primera-RRD-VV01"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id,name"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/datastores/{datastoreId}": {
      "get": {
        "tags": [
          "api > Backup Recovery > Datastore"
        ],
        "summary": "Display Datastore Detail",
        "parameters": [
          {
            "name": "datastoreId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "b5bda245-2dab-59cd-adc9-e65937b9ea30"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/datastores/{datastoreId}/restore": {
      "post": {
        "tags": [
          "api > Backup Recovery > Datastore"
        ],
        "summary": "Restore Datastore from a protection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "backupId": "9b4c14a6-3cd5-4907-97c4-cf44c5b641e4",
                  "restoreType": "ALTERNATE",
                  "snapshotId": "9b4c14a6-3cd5-4907-97c4-cf44c5b641e4",
                  "targetDatastoreInfo": {
                    "appInfo": {
                      "vmware": {
                        "datacenterId": "string"
                      }
                    },
                    "clusterId": "string",
                    "description": "string",
                    "folderId": "string",
                    "hostId": "string",
                    "hypervisorManagerId": "string",
                    "name": "snap-ae36",
                    "powerOnVMsAfterRestore": false,
                    "storageInfo": {
                      "storageSystemId": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datastoreId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "b5bda245-2dab-59cd-adc9-e65937b9ea30"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/app-data-management/v1/dashboard/protections-summary": {
      "get": {
        "tags": [
          "api > Backup Recovery > Dashboard Items"
        ],
        "summary": "Show Protection Summary",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{DefaultLimit}}"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "VMWARE"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/app-data-management/v1/dashboard/inventory-summary": {
      "get": {
        "tags": [
          "api > Backup Recovery > Dashboard Items"
        ],
        "summary": "Show Inventory Summary",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/volumes/{id}": {
      "get": {
        "tags": [
          "api > Storage API > volumes > {id}"
        ],
        "summary": "Get details of Volume identified by {id}",
        "description": "Get details of Volume identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "healthState": "<string>",
                  "hostWrittenCapacityMiB": "<number>",
                  "id": "<string>",
                  "initiators": [
                    {
                      "deviceDiscoveredName": "<string>",
                      "id": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "deviceDiscoveredName": "<string>",
                      "id": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "isInternal": "<boolean>",
                  "isSystemVolume": "<boolean>",
                  "name": "<string>",
                  "productFamily": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "sizeMiB": "<number>",
                  "spaceWarning": "<number>",
                  "subType": "<string>",
                  "systemId": "<string>",
                  "thinSavings": "<string>",
                  "type": "<string>",
                  "usedCapacityPercent": "<number>",
                  "usedSizeMiB": "<number>",
                  "volumeSetId": "<string>",
                  "volumeType": "<string>",
                  "wwn": "<string>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/volumes": {
      "get": {
        "tags": [
          "api > Storage API > volumes"
        ],
        "summary": "Get all volumes",
        "description": "Get all volumes",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "healthState": "<string>",
                      "hostWrittenCapacityMiB": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "isInternal": "<boolean>",
                      "isSystemVolume": "<boolean>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "sizeMiB": "<number>",
                      "spaceWarning": "<number>",
                      "subType": "<string>",
                      "systemId": "<string>",
                      "thinSavings": "<string>",
                      "type": "<string>",
                      "usedCapacityPercent": "<number>",
                      "usedSizeMiB": "<number>",
                      "volumeSetId": "<string>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "healthState": "<string>",
                      "hostWrittenCapacityMiB": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "isInternal": "<boolean>",
                      "isSystemVolume": "<boolean>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "sizeMiB": "<number>",
                      "spaceWarning": "<number>",
                      "subType": "<string>",
                      "systemId": "<string>",
                      "thinSavings": "<string>",
                      "type": "<string>",
                      "usedCapacityPercent": "<number>",
                      "usedSizeMiB": "<number>",
                      "volumeSetId": "<string>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/volume-sets/{id}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > volume-sets > {id} > volumes"
        ],
        "summary": "Get volumes identified by volume set id",
        "description": "Get volumes  identified by volume set id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "appType": "<string>",
                  "application": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "members": [
                    "<string>",
                    "<string>"
                  ],
                  "name": "<string>",
                  "productFamily": "<string>",
                  "resourceUri": "<string>",
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/volume-sets/{id}": {
      "get": {
        "tags": [
          "api > Storage API > volume-sets > {id}"
        ],
        "summary": "Get volume-set identified by id",
        "description": "Get volume-set identified by id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "appType": "<string>",
                  "application": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "name": "<string>",
                  "productFamily": "<string>",
                  "resourceUri": "<string>",
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/volume-sets": {
      "get": {
        "tags": [
          "api > Storage API > volume-sets"
        ],
        "summary": "Get all volume-sets",
        "description": "Get all volume sets",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "appType": "<string>",
                      "application": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "appType": "<string>",
                      "application": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{id}": {
      "get": {
        "tags": [
          "api > Storage API > tasks > {id}"
        ],
        "summary": "Returns details of a specific task",
        "description": "Returns the task with the given id.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "20e4d0cc-d4d0-4507-9fd6-deb6c1bca2e6"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "customerId": "<string>",
                  "generation": "<long>",
                  "id": "<string>",
                  "name": "<string>",
                  "resourceUri": "<string>",
                  "type": "<string>",
                  "additionalDetails": {
                    "consoleUri": "<string>"
                  },
                  "associatedResources": [
                    {
                      "type": "<string>",
                      "resourceUri": "<string>",
                      "name": "<string>"
                    },
                    {
                      "type": "<string>",
                      "resourceUri": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "childTasks": [
                    {
                      "type": "<string>",
                      "resourceUri": "<string>",
                      "name": "<string>"
                    },
                    {
                      "type": "<string>",
                      "resourceUri": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "createdAt": "<dateTime>",
                  "displayName": "<string>",
                  "endedAt": "<dateTime>",
                  "error": {
                    "error": "<string>",
                    "errorCode": "<string>",
                    "traceId": "<string>"
                  },
                  "estimatedRunningDurationMinutes": "<integer>",
                  "healthStatus": "<string>",
                  "logMessages": [
                    {
                      "timestampAt": "<dateTime>",
                      "message": "<string>"
                    },
                    {
                      "timestampAt": "<dateTime>",
                      "message": "<string>"
                    }
                  ],
                  "parentTask": {
                    "type": "<string>",
                    "resourceUri": "<string>",
                    "name": "<string>"
                  },
                  "progressPercent": "<integer>",
                  "recommendations": [
                    {
                      "message": "<string>"
                    },
                    {
                      "message": "<string>"
                    }
                  ],
                  "sourceResource": {
                    "type": "<string>",
                    "resourceUri": "<string>",
                    "name": "<string>"
                  },
                  "startedAt": "<dateTime>",
                  "state": "<string>",
                  "suggestedPollingIntervalSeconds": "<integer>",
                  "updatedAt": "<dateTime>",
                  "userId": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks": {
      "get": {
        "tags": [
          "api > Storage API > tasks"
        ],
        "summary": "Returns a list of tasks accessible by the user",
        "description": "Returns a list of tasks that are visible to the user. The response can\nbe paged by using the limit\nand offset query parameters and filtered, sorted and ordered by using\nthe filter, sortby and orderby query parameters.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset query parameter should be used in conjunction with limit\nfor paging, e.g.: offset=30&&limit=10. The offset is the number of\nitems from the beginning of the result set to the first item\nincluded in the response.\n",
            "example": "<integer>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The limit query parameter should be used in conjunction with offset\nfor paging, e.g.: offset=30&&limit=10. The limit is the maximum\nnumber of items to include in the response.\n",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The expression to filter responses.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "customerId": "<string>",
                      "generation": "<long>",
                      "id": "<string>",
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>",
                      "additionalDetails": {
                        "consoleUri": "<string>"
                      },
                      "associatedResources": [
                        {
                          "type": "<string>",
                          "resourceUri": "<string>",
                          "name": "<string>"
                        },
                        {
                          "type": "<string>",
                          "resourceUri": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "childTasks": [
                        {
                          "type": "<string>",
                          "resourceUri": "<string>",
                          "name": "<string>"
                        },
                        {
                          "type": "<string>",
                          "resourceUri": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "createdAt": "<dateTime>",
                      "displayName": "<string>",
                      "endedAt": "<dateTime>",
                      "error": {
                        "error": "<string>",
                        "errorCode": "<string>",
                        "traceId": "<string>"
                      },
                      "estimatedRunningDurationMinutes": "<integer>",
                      "healthStatus": "<string>",
                      "logMessages": [
                        {
                          "timestampAt": "<dateTime>",
                          "message": "<string>"
                        },
                        {
                          "timestampAt": "<dateTime>",
                          "message": "<string>"
                        }
                      ],
                      "parentTask": {
                        "type": "<string>",
                        "resourceUri": "<string>",
                        "name": "<string>"
                      },
                      "progressPercent": "<integer>",
                      "recommendations": [
                        {
                          "message": "<string>"
                        },
                        {
                          "message": "<string>"
                        }
                      ],
                      "sourceResource": {
                        "type": "<string>",
                        "resourceUri": "<string>",
                        "name": "<string>"
                      },
                      "startedAt": "<dateTime>",
                      "state": "<string>",
                      "suggestedPollingIntervalSeconds": "<integer>",
                      "updatedAt": "<dateTime>",
                      "userId": "<string>"
                    },
                    {
                      "customerId": "<string>",
                      "generation": "<long>",
                      "id": "<string>",
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>",
                      "additionalDetails": {
                        "consoleUri": "<string>"
                      },
                      "associatedResources": [
                        {
                          "type": "<string>",
                          "resourceUri": "<string>",
                          "name": "<string>"
                        },
                        {
                          "type": "<string>",
                          "resourceUri": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "childTasks": [
                        {
                          "type": "<string>",
                          "resourceUri": "<string>",
                          "name": "<string>"
                        },
                        {
                          "type": "<string>",
                          "resourceUri": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "createdAt": "<dateTime>",
                      "displayName": "<string>",
                      "endedAt": "<dateTime>",
                      "error": {
                        "error": "<string>",
                        "errorCode": "<string>",
                        "traceId": "<string>"
                      },
                      "estimatedRunningDurationMinutes": "<integer>",
                      "healthStatus": "<string>",
                      "logMessages": [
                        {
                          "timestampAt": "<dateTime>",
                          "message": "<string>"
                        },
                        {
                          "timestampAt": "<dateTime>",
                          "message": "<string>"
                        }
                      ],
                      "parentTask": {
                        "type": "<string>",
                        "resourceUri": "<string>",
                        "name": "<string>"
                      },
                      "progressPercent": "<integer>",
                      "recommendations": [
                        {
                          "message": "<string>"
                        },
                        {
                          "message": "<string>"
                        }
                      ],
                      "sourceResource": {
                        "type": "<string>",
                        "resourceUri": "<string>",
                        "name": "<string>"
                      },
                      "startedAt": "<dateTime>",
                      "state": "<string>",
                      "suggestedPollingIntervalSeconds": "<integer>",
                      "updatedAt": "<dateTime>",
                      "userId": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/{systemId}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > {systemId} > volumes"
        ],
        "summary": "Get details of volumes identified with {systemId}",
        "description": "Get details of volumes identified with {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "healthState": "<string>",
                      "hostWrittenCapacityMiB": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "isInternal": "<boolean>",
                      "isSystemVolume": "<boolean>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "sizeMiB": "<number>",
                      "spaceWarning": "<number>",
                      "subType": "<string>",
                      "systemId": "<string>",
                      "thinSavings": "<string>",
                      "type": "<string>",
                      "usedCapacityPercent": "<number>",
                      "usedSizeMiB": "<number>",
                      "volumeSetId": "<string>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "healthState": "<string>",
                      "hostWrittenCapacityMiB": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "isInternal": "<boolean>",
                      "isSystemVolume": "<boolean>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "sizeMiB": "<number>",
                      "spaceWarning": "<number>",
                      "subType": "<string>",
                      "systemId": "<string>",
                      "thinSavings": "<string>",
                      "type": "<string>",
                      "usedCapacityPercent": "<number>",
                      "usedSizeMiB": "<number>",
                      "volumeSetId": "<string>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/{systemId}/volume-sets/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > {systemId} > volume-sets > {id}"
        ],
        "summary": "Get volume-set identified by id",
        "description": "Get volume-set identified by id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "appType": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "name": "<string>",
                  "productFamily": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "systemId": "<string>",
                  "type": "<string>",
                  "volumesCount": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/{systemId}/volume-sets": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > {systemId} > volume-sets"
        ],
        "summary": "Get all volume-sets for a systemId",
        "description": "Get all volume sets for a systemId",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "appType": "<string>",
                      "application": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "appType": "<string>",
                      "application": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/{systemId}/storage-pools/{id}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > {systemId} > storage-pools > {id} > volumes"
        ],
        "summary": "Get all volumes for storage-pool identified by {id}",
        "description": "Get all volumes for storage-pool identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "healthState": "<string>",
                      "hostWrittenCapacityMiB": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "isInternal": "<boolean>",
                      "isSystemVolume": "<boolean>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "sizeMiB": "<number>",
                      "spaceWarning": "<number>",
                      "subType": "<string>",
                      "systemId": "<string>",
                      "thinSavings": "<string>",
                      "type": "<string>",
                      "usedCapacityPercent": "<number>",
                      "usedSizeMiB": "<number>",
                      "volumeSetId": "<string>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "healthState": "<string>",
                      "hostWrittenCapacityMiB": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "isInternal": "<boolean>",
                      "isSystemVolume": "<boolean>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "sizeMiB": "<number>",
                      "spaceWarning": "<number>",
                      "subType": "<string>",
                      "systemId": "<string>",
                      "thinSavings": "<string>",
                      "type": "<string>",
                      "usedCapacityPercent": "<number>",
                      "usedSizeMiB": "<number>",
                      "volumeSetId": "<string>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/{systemId}/storage-pools/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > {systemId} > storage-pools > {id}"
        ],
        "summary": "Get details of storage pools identified by {id}",
        "description": "Get details of storage pools identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "capacityUsed": "<integer>",
                  "customerId": "<string>",
                  "generation": "<long>",
                  "id": "<string>",
                  "name": "<string>",
                  "resourceUri": "<string>",
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/{systemId}/storage-pools": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > {systemId} > storage-pools"
        ],
        "summary": "Get all storage pools for a device {systemId}",
        "description": "Get all storage pools for a device {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter pools by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort pools by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "capacityUsed": "<integer>",
                      "customerId": "<string>",
                      "generation": "<long>",
                      "id": "<string>",
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "capacityUsed": "<integer>",
                      "customerId": "<string>",
                      "generation": "<long>",
                      "id": "<string>",
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > {id}"
        ],
        "summary": "Get storage system object identified by {id}",
        "description": "Get storage system object identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "arrayList": [
                    {
                      "model": "<string>",
                      "name": "<string>"
                    },
                    {
                      "model": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "callhomeStatus": "DISABLED",
                  "collectionStatus": {
                    "configStatus": {
                      "status": "UNKNOWN"
                    },
                    "metricStatus": {
                      "status": "UNKNOWN"
                    },
                    "overAllStatus": "DEGRADED"
                  },
                  "connectionStatus": "UNKNOWN",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "fqdn": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "lastConnectedTime": "<integer>",
                  "mgmtIp": "<ipv4>",
                  "model": "<string>",
                  "name": "<string>",
                  "productFamily": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "softwareVersion": "<string>",
                  "state": "DEGRADED",
                  "systemWWN": "<string>",
                  "tierType": "STORAGE_TIER_NIMBLE_AFA",
                  "type": "<string>",
                  "upSince": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/storage-types": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > storage-types"
        ],
        "summary": "Get all device types",
        "description": "Get all device types",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "description": "<string>",
                      "deviceType": "<string>"
                    },
                    {
                      "description": "<string>",
                      "deviceType": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/provisioning-recommendations": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > provisioning-recommendations"
        ],
        "summary": "provisioning recommendations",
        "description": "provisioning recommendations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "sizeMib": "<integer>",
                  "hostGroupId": "<string>",
                  "productFamily": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "capacityInfo": {
                        "capacitySummary": {
                          "free": "<long>",
                          "total": "<long>"
                        }
                      },
                      "id": "<string>",
                      "mgmtIp": "<string>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "state": null,
                      "systemWWN": "<string>"
                    },
                    {
                      "capacityInfo": {
                        "capacitySummary": {
                          "free": "<long>",
                          "total": "<long>"
                        }
                      },
                      "id": "<string>",
                      "mgmtIp": "<string>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "state": "NORMAL",
                      "systemWWN": "<string>"
                    }
                  ],
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/un-export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > un-export"
        ],
        "summary": "Delete access for volume identified by {volumeId} from Nimble / Alletra 6K identified by {systemId}",
        "description": "Delete access for volume identified by {volumeId} from Nimble / Alletra 6K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroups": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/snapshots/{snapshotId}/un-export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId} > un-export"
        ],
        "summary": "Delete access for snapshot identified by {snapshotId} from Nimble / Alletra 6K identified by {systemId}",
        "description": "Delete access for snapshot identified by {snapshotId} from Nimble / Alletra 6K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroups": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/snapshots/{snapshotId}/export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId} > export"
        ],
        "summary": "Configure access for snapshot identified by {snapshotId} from Nimble / Alletra 6K identified by {systemId}",
        "description": "Configure access for snapshot identified by {snapshotId} from Nimble / Alletra 6K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroups": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/snapshots/{snapshotId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId}"
        ],
        "summary": "Remove Nimble / Alletra 6K snapshot in system identified by {snapshotId}",
        "description": "Remove Nimble / Alletra 6K snapshot in system identified by {snapshotId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Make snapshot offline and remove.",
            "example": "<boolean>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId}"
        ],
        "summary": "Get details of snapshot of Nimble / Alletra 6K Volume identified by {volumeId} by {snapshotId}",
        "description": "Get details of snapshot of Nimble / Alletra 6K Volume identified by {volumeId} by {snapshotId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "dolor consectetur adipisicing Lorem",
                  "id": "<string>",
                  "name": "<string>",
                  "online": "<boolean>",
                  "pool_name": "<string>",
                  "replication_status": "<string>",
                  "schedule_id": "<string>",
                  "schedule_name": "<string>",
                  "serial_number": "<string>",
                  "size": "<long>",
                  "snap_collection_id": "<string>",
                  "snap_collection_name": "<string>",
                  "target_name": "<string>",
                  "writable": "<boolean>",
                  "access_control_records": [
                    {
                      "access_protocol": "<string>",
                      "acl_id": "<string>",
                      "apply_to": "<string>",
                      "chap_user_id": "<string>",
                      "chap_user_name": "<string>",
                      "id": "<string>",
                      "initiator_group_id": "<string>",
                      "initiator_group_name": "<string>",
                      "lun": "<long>",
                      "pe_id": "<string>",
                      "pe_lun": "<long>",
                      "pe_name": "<string>",
                      "snap_id": "<string>",
                      "snap_name": "<string>",
                      "snapluns": [
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        }
                      ],
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "access_protocol": "<string>",
                      "acl_id": "<string>",
                      "apply_to": "<string>",
                      "chap_user_id": "<string>",
                      "chap_user_name": "<string>",
                      "id": "<string>",
                      "initiator_group_id": "<string>",
                      "initiator_group_name": "<string>",
                      "lun": "<long>",
                      "pe_id": "<string>",
                      "pe_lun": "<long>",
                      "pe_name": "<string>",
                      "snap_id": "<string>",
                      "snap_name": "<string>",
                      "snapluns": [
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        }
                      ],
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ],
                  "agent_type": "<string>",
                  "app_uuid": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "creation_time": "<long>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "expiry_after": "<long>",
                  "expiry_time": "<long>",
                  "generation": "<integer>",
                  "is_manually_managed": "<boolean>",
                  "is_replica": "<boolean>",
                  "is_unmanaged": "<boolean>",
                  "last_modified": "<long>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "new_data_compressed_bytes": "<long>",
                  "new_data_uncompressed_bytes": "<long>",
                  "new_data_valid": "<boolean>",
                  "offline_reason": "<string>",
                  "origin_name": "<string>",
                  "resourceUri": "<string>",
                  "type": "<string>",
                  "vol_id": "<string>",
                  "vol_name": "<string>",
                  "vpd_ieee0": "<string>",
                  "vpd_ieee1": "<string>",
                  "vpd_t10": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/snapshots": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots"
        ],
        "summary": "Get all snapshots' details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "description": "Get all snapshots' details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter snapshots by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort snapshots resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "online": "<boolean>",
                      "pool_name": "<string>",
                      "replication_status": "<string>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "serial_number": "<string>",
                      "size": "<long>",
                      "snap_collection_id": "<string>",
                      "snap_collection_name": "<string>",
                      "target_name": "<string>",
                      "writable": "<boolean>",
                      "access_control_records": [
                        {
                          "access_protocol": "<string>",
                          "acl_id": "<string>",
                          "apply_to": "<string>",
                          "chap_user_id": "<string>",
                          "chap_user_name": "<string>",
                          "id": "<string>",
                          "initiator_group_id": "<string>",
                          "initiator_group_name": "<string>",
                          "lun": "<long>",
                          "pe_id": "<string>",
                          "pe_lun": "<long>",
                          "pe_name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>",
                          "snapluns": [
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            },
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            }
                          ],
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "access_protocol": "<string>",
                          "acl_id": "<string>",
                          "apply_to": "<string>",
                          "chap_user_id": "<string>",
                          "chap_user_name": "<string>",
                          "id": "<string>",
                          "initiator_group_id": "<string>",
                          "initiator_group_name": "<string>",
                          "lun": "<long>",
                          "pe_id": "<string>",
                          "pe_lun": "<long>",
                          "pe_name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>",
                          "snapluns": [
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            },
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            }
                          ],
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "agent_type": "<string>",
                      "app_uuid": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "expiry_after": "<long>",
                      "expiry_time": "<long>",
                      "generation": "<integer>",
                      "is_manually_managed": "<boolean>",
                      "is_replica": "<boolean>",
                      "is_unmanaged": "<boolean>",
                      "last_modified": "<long>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "new_data_compressed_bytes": "<long>",
                      "new_data_uncompressed_bytes": "<long>",
                      "new_data_valid": "<boolean>",
                      "offline_reason": "<string>",
                      "origin_name": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>",
                      "vpd_ieee0": "<string>",
                      "vpd_ieee1": "<string>",
                      "vpd_t10": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "online": "<boolean>",
                      "pool_name": "<string>",
                      "replication_status": "<string>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "serial_number": "<string>",
                      "size": "<long>",
                      "snap_collection_id": "<string>",
                      "snap_collection_name": "<string>",
                      "target_name": "<string>",
                      "writable": "<boolean>",
                      "access_control_records": [
                        {
                          "access_protocol": "<string>",
                          "acl_id": "<string>",
                          "apply_to": "<string>",
                          "chap_user_id": "<string>",
                          "chap_user_name": "<string>",
                          "id": "<string>",
                          "initiator_group_id": "<string>",
                          "initiator_group_name": "<string>",
                          "lun": "<long>",
                          "pe_id": "<string>",
                          "pe_lun": "<long>",
                          "pe_name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>",
                          "snapluns": [
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            },
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            }
                          ],
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "access_protocol": "<string>",
                          "acl_id": "<string>",
                          "apply_to": "<string>",
                          "chap_user_id": "<string>",
                          "chap_user_name": "<string>",
                          "id": "<string>",
                          "initiator_group_id": "<string>",
                          "initiator_group_name": "<string>",
                          "lun": "<long>",
                          "pe_id": "<string>",
                          "pe_lun": "<long>",
                          "pe_name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>",
                          "snapluns": [
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            },
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            }
                          ],
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "agent_type": "<string>",
                      "app_uuid": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "expiry_after": "<long>",
                      "expiry_time": "<long>",
                      "generation": "<integer>",
                      "is_manually_managed": "<boolean>",
                      "is_replica": "<boolean>",
                      "is_unmanaged": "<boolean>",
                      "last_modified": "<long>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "new_data_compressed_bytes": "<long>",
                      "new_data_uncompressed_bytes": "<long>",
                      "new_data_valid": "<boolean>",
                      "offline_reason": "<string>",
                      "origin_name": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>",
                      "vpd_ieee0": "<string>",
                      "vpd_ieee1": "<string>",
                      "vpd_t10": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > snapshots"
        ],
        "summary": "Create Nimble / Alletra 6K snapshot in system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K snapshot in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "app_uuid": "<string>",
                  "description": "<string>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "online": "<boolean>",
                  "writable": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/performance-statistics": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > performance-statistics"
        ],
        "summary": "Get performance statistics of Nimble / Alletra 6K Volume identified by {volumeId}",
        "description": "Get performance statistics of Nimble / Alletra 6K Volume identified by {volumeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "iops": {
                    "read": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    },
                    "total": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    },
                    "write": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    }
                  },
                  "latency": {
                    "read": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    },
                    "total": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    },
                    "write": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    }
                  },
                  "requestURI": "<string>",
                  "resourceUri": "<string>",
                  "throughput": {
                    "read": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    },
                    "total": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    },
                    "write": {
                      "avg_1day": "<number>",
                      "avg_1hour": "<number>",
                      "avg_8hours": "<number>",
                      "avg_latest": "<number>"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/performance-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > performance-history"
        ],
        "summary": "Get performance trend data of Nimble / Alletra 6K Volume identified by {id}",
        "description": "Get performance trend data of Nimble / Alletra 6K Volume identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "iops_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  },
                  "latency_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  },
                  "requestURI": "<string>",
                  "throughput_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > export"
        ],
        "summary": "Configure access for volume identified by {volumeId} from Nimble / Alletra 6K identified by {systemId}",
        "description": "Configure access for volume identified by {volumeId} from Nimble / Alletra 6K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroups": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/clone": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > clone"
        ],
        "summary": "Create Nimble / Alletra 6K clone volume identified by {volumeId}.",
        "description": "Create Nimble / Alletra 6K clone volume identified by {volumeId}.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "clone_volume_name": "<string>",
                  "host_group_id": "<string>",
                  "lun": "<long>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/capacity-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > capacity-history"
        ],
        "summary": "Get volume capacity trend data of Nimble / Alletra 6K Volume identified by {volumeId}",
        "description": "Get volume capacity trend data of Nimble / Alletra 6K Volume identified by {volumeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>",
                  "requestURI": "<string>",
                  "series_data": [
                    {
                      "snapshot_usage": "<number>",
                      "timestamp": "<long>",
                      "volume_usage": "<number>"
                    },
                    {
                      "snapshot_usage": "<number>",
                      "timestamp": "<long>",
                      "volume_usage": "<number>"
                    }
                  ]
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/actions/restore": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > actions > restore"
        ],
        "summary": "Restore Nimble / Alletra 6K volume identified by {volumeId} from a previous snapshot.",
        "description": "Restore Nimble / Alletra 6K volume identified by {volumeId} from a previous snapshot.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "base_snap_id": "<string>",
                  "enable_vol_offline": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}/actions/move": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId} > actions > move"
        ],
        "summary": "Move Nimble / Alletra 6K volume identified by {volumeId} to another pool.",
        "description": "Move Nimble / Alletra 6K volume identified by {volumeId} to another pool.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "dest_pool_id": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes/{volumeId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId}"
        ],
        "summary": "Remove volume identified by {volumeId} from Nimble / Alletra 6K",
        "description": "Remove volume identified by {volumeId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "offline",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Make volume offline and delete. Deprecated - Use force instead of offline.",
            "example": "<boolean>"
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Make volume and associated snapshots offline, stop protection and delete.",
            "example": "<boolean>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "description": "Get details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "culpa consequat",
                  "base_snap_id": "<string>",
                  "base_snap_name": "<string>",
                  "clone": "<boolean>",
                  "dest_pool_id": "<string>",
                  "dest_pool_name": "<string>",
                  "folder_id": "<string>",
                  "folder_name": "<string>",
                  "id": "<string>",
                  "name": "<string>",
                  "online": "<boolean>",
                  "owned_by_group": "<string>",
                  "owned_by_group_id": "<string>",
                  "parent_vol_id": "<string>",
                  "parent_vol_name": "<string>",
                  "perfpolicy_id": "<string>",
                  "perfpolicy_name": "<string>",
                  "pool_id": "<string>",
                  "pool_name": "<string>",
                  "read_only": "<boolean>",
                  "replication_role": "<string>",
                  "secondary_serial_number": "<string>",
                  "serial_number": "<string>",
                  "size": "<long>",
                  "target_name": "<string>",
                  "volcoll_id": "<string>",
                  "volcoll_name": "<string>",
                  "access_control_records": [
                    {
                      "access_protocol": "<string>",
                      "acl_id": "<string>",
                      "apply_to": "<string>",
                      "chap_user_id": "<string>",
                      "chap_user_name": "<string>",
                      "id": "<string>",
                      "initiator_group_id": "<string>",
                      "initiator_group_name": "<string>",
                      "lun": "<long>",
                      "pe_id": "<string>",
                      "pe_lun": "<long>",
                      "pe_name": "<string>",
                      "snap_id": "<string>",
                      "snap_name": "<string>",
                      "snapluns": [
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        }
                      ],
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "access_protocol": "<string>",
                      "acl_id": "<string>",
                      "apply_to": "<string>",
                      "chap_user_id": "<string>",
                      "chap_user_name": "<string>",
                      "id": "<string>",
                      "initiator_group_id": "<string>",
                      "initiator_group_name": "<string>",
                      "lun": "<long>",
                      "pe_id": "<string>",
                      "pe_lun": "<long>",
                      "pe_name": "<string>",
                      "snap_id": "<string>",
                      "snap_name": "<string>",
                      "snapluns": [
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        }
                      ],
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ],
                  "agent_type": "<string>",
                  "app_category": "<string>",
                  "app_uuid": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "block_size": "<long>",
                  "cache_needed_for_pin": "<long>",
                  "cache_pinned": "<boolean>",
                  "cache_policy": "<string>",
                  "caching_enabled": "<boolean>",
                  "cksum_last_verified": "<long>",
                  "consoleUri": "<string>",
                  "content_repl_errors_found": "<boolean>",
                  "creation_time": "<long>",
                  "customerId": "<string>",
                  "dedupe_enabled": "<boolean>",
                  "description": "<string>",
                  "encryption_cipher": "<string>",
                  "force": "<boolean>",
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "inherit_acl": "<boolean>",
                  "iscsi_target_scope": "<string>",
                  "last_content_snap_br_cg_uid": "<long>",
                  "last_content_snap_br_gid": "<long>",
                  "last_content_snap_id": "<long>",
                  "last_modified": "<long>",
                  "last_snap": {
                    "snap_creation_time": "<long>",
                    "snap_id": "<string>",
                    "snap_name": "<string>"
                  },
                  "limit": "<long>",
                  "limit_iops": "<long>",
                  "limit_mbps": "<long>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "move_aborting": "<boolean>",
                  "move_bytes_migrated": "<long>",
                  "move_bytes_remaining": "<long>",
                  "move_est_compl_time": "<long>",
                  "move_start_time": "<long>",
                  "multi_initiator": "<boolean>",
                  "needs_content_repl": "<boolean>",
                  "num_snaps": "<long>",
                  "offline_reason": "<string>",
                  "online_snaps": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "snap_id": "<string>",
                      "snap_name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "snap_id": "<string>",
                      "snap_name": "<string>"
                    }
                  ],
                  "pinned_cache_size": "<long>",
                  "pre_filter": "<string>",
                  "previously_deduped": "<boolean>",
                  "projected_num_snaps": "<long>",
                  "protection_type": "<string>",
                  "reserve": "<long>",
                  "resourceUri": "<string>",
                  "search_name": "<string>",
                  "snap_reserve": "<long>",
                  "snap_usage_compressed_bytes": "<long>",
                  "snap_usage_populated_bytes": "<long>",
                  "snap_usage_uncompressed_bytes": "<long>",
                  "snap_warn_level": "<long>",
                  "space_usage_level": "<string>",
                  "srep_last_sync": "<long>",
                  "srep_resync_sync": "<long>",
                  "thinly_provisioned": "<boolean>",
                  "total_usage_bytes": "<long>",
                  "type": "<string>",
                  "upstream_cache_pinned": "<boolean>",
                  "usage_valid": "<boolean>",
                  "vol_state": "<string>",
                  "vol_usage_compressed_bytes": "<long>",
                  "vol_usage_uncompressed_bytes": "<long>",
                  "vpd_ieee0": "<string>",
                  "vpd_ieee1": "<string>",
                  "vpd_t10": "<string>",
                  "warn_level": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes > {volumeId}"
        ],
        "summary": "Edit  details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "description": "Edit  details of Nimble / Alletra 6K Volume identified by {volumeId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "app_uuid": "<string>",
                  "caching_enabled": "<boolean>",
                  "dedupe_enabled": "<boolean>",
                  "description": "<string>",
                  "folder_id": "<string>",
                  "force": "<boolean>",
                  "limit": "<long>",
                  "limit_iops": "<long>",
                  "limit_mbps": "<long>",
                  "name": "<string>",
                  "online": "<boolean>",
                  "owned_by_group_id": "<string>",
                  "perfpolicy_id": "<string>",
                  "size": "<long>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes"
        ],
        "summary": "Get all volumes details for Nimble / Alletra 6K",
        "description": "Get all volumes details for Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter volumes by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort volumes resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "base_snap_id": "<string>",
                      "base_snap_name": "<string>",
                      "clone": "<boolean>",
                      "dest_pool_id": "<string>",
                      "dest_pool_name": "<string>",
                      "folder_id": "<string>",
                      "folder_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "online": "<boolean>",
                      "owned_by_group": "<string>",
                      "owned_by_group_id": "<string>",
                      "parent_vol_id": "<string>",
                      "parent_vol_name": "<string>",
                      "perfpolicy_id": "<string>",
                      "perfpolicy_name": "<string>",
                      "pool_id": "<string>",
                      "pool_name": "<string>",
                      "read_only": "<boolean>",
                      "replication_role": "<string>",
                      "secondary_serial_number": "<string>",
                      "serial_number": "<string>",
                      "size": "<long>",
                      "target_name": "<string>",
                      "volcoll_id": "<string>",
                      "volcoll_name": "<string>",
                      "access_control_records": [
                        {
                          "access_protocol": "<string>",
                          "acl_id": "<string>",
                          "apply_to": "<string>",
                          "chap_user_id": "<string>",
                          "chap_user_name": "<string>",
                          "id": "<string>",
                          "initiator_group_id": "<string>",
                          "initiator_group_name": "<string>",
                          "lun": "<long>",
                          "pe_id": "<string>",
                          "pe_lun": "<long>",
                          "pe_name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>",
                          "snapluns": [
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            },
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            }
                          ],
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "access_protocol": "<string>",
                          "acl_id": "<string>",
                          "apply_to": "<string>",
                          "chap_user_id": "<string>",
                          "chap_user_name": "<string>",
                          "id": "<string>",
                          "initiator_group_id": "<string>",
                          "initiator_group_name": "<string>",
                          "lun": "<long>",
                          "pe_id": "<string>",
                          "pe_lun": "<long>",
                          "pe_name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>",
                          "snapluns": [
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            },
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            }
                          ],
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "agent_type": "<string>",
                      "app_category": "<string>",
                      "app_uuid": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "block_size": "<long>",
                      "cache_needed_for_pin": "<long>",
                      "cache_pinned": "<boolean>",
                      "cache_policy": "<string>",
                      "caching_enabled": "<boolean>",
                      "cksum_last_verified": "<long>",
                      "consoleUri": "<string>",
                      "content_repl_errors_found": "<boolean>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "dedupe_enabled": "<boolean>",
                      "description": "<string>",
                      "encryption_cipher": "<string>",
                      "force": "<boolean>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "inherit_acl": "<boolean>",
                      "iscsi_target_scope": "<string>",
                      "last_content_snap_br_cg_uid": "<long>",
                      "last_content_snap_br_gid": "<long>",
                      "last_content_snap_id": "<long>",
                      "last_modified": "<long>",
                      "last_snap": {
                        "snap_creation_time": "<long>",
                        "snap_id": "<string>",
                        "snap_name": "<string>"
                      },
                      "limit": "<long>",
                      "limit_iops": "<long>",
                      "limit_mbps": "<long>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "move_aborting": "<boolean>",
                      "move_bytes_migrated": "<long>",
                      "move_bytes_remaining": "<long>",
                      "move_est_compl_time": "<long>",
                      "move_start_time": "<long>",
                      "multi_initiator": "<boolean>",
                      "needs_content_repl": "<boolean>",
                      "num_snaps": "<long>",
                      "offline_reason": "<string>",
                      "online_snaps": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>"
                        }
                      ],
                      "pinned_cache_size": "<long>",
                      "pre_filter": "<string>",
                      "previously_deduped": "<boolean>",
                      "projected_num_snaps": "<long>",
                      "protection_type": "<string>",
                      "reserve": "<long>",
                      "resourceUri": "<string>",
                      "search_name": "<string>",
                      "snap_reserve": "<long>",
                      "snap_usage_compressed_bytes": "<long>",
                      "snap_usage_populated_bytes": "<long>",
                      "snap_usage_uncompressed_bytes": "<long>",
                      "snap_warn_level": "<long>",
                      "space_usage_level": "<string>",
                      "srep_last_sync": "<long>",
                      "srep_resync_sync": "<long>",
                      "thinly_provisioned": "<boolean>",
                      "total_usage_bytes": "<long>",
                      "type": "<string>",
                      "upstream_cache_pinned": "<boolean>",
                      "usage_valid": "<boolean>",
                      "vol_state": "<string>",
                      "vol_usage_compressed_bytes": "<long>",
                      "vol_usage_uncompressed_bytes": "<long>",
                      "vpd_ieee0": "<string>",
                      "vpd_ieee1": "<string>",
                      "vpd_t10": "<string>",
                      "warn_level": "<long>"
                    },
                    {
                      "base_snap_id": "<string>",
                      "base_snap_name": "<string>",
                      "clone": "<boolean>",
                      "dest_pool_id": "<string>",
                      "dest_pool_name": "<string>",
                      "folder_id": "<string>",
                      "folder_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "online": "<boolean>",
                      "owned_by_group": "<string>",
                      "owned_by_group_id": "<string>",
                      "parent_vol_id": "<string>",
                      "parent_vol_name": "<string>",
                      "perfpolicy_id": "<string>",
                      "perfpolicy_name": "<string>",
                      "pool_id": "<string>",
                      "pool_name": "<string>",
                      "read_only": "<boolean>",
                      "replication_role": "<string>",
                      "secondary_serial_number": "<string>",
                      "serial_number": "<string>",
                      "size": "<long>",
                      "target_name": "<string>",
                      "volcoll_id": "<string>",
                      "volcoll_name": "<string>",
                      "access_control_records": [
                        {
                          "access_protocol": "<string>",
                          "acl_id": "<string>",
                          "apply_to": "<string>",
                          "chap_user_id": "<string>",
                          "chap_user_name": "<string>",
                          "id": "<string>",
                          "initiator_group_id": "<string>",
                          "initiator_group_name": "<string>",
                          "lun": "<long>",
                          "pe_id": "<string>",
                          "pe_lun": "<long>",
                          "pe_name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>",
                          "snapluns": [
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            },
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            }
                          ],
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "access_protocol": "<string>",
                          "acl_id": "<string>",
                          "apply_to": "<string>",
                          "chap_user_id": "<string>",
                          "chap_user_name": "<string>",
                          "id": "<string>",
                          "initiator_group_id": "<string>",
                          "initiator_group_name": "<string>",
                          "lun": "<long>",
                          "pe_id": "<string>",
                          "pe_lun": "<long>",
                          "pe_name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>",
                          "snapluns": [
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            },
                            {
                              "id": "<string>",
                              "lun": "<long>",
                              "name": "<string>"
                            }
                          ],
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "agent_type": "<string>",
                      "app_category": "<string>",
                      "app_uuid": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "block_size": "<long>",
                      "cache_needed_for_pin": "<long>",
                      "cache_pinned": "<boolean>",
                      "cache_policy": "<string>",
                      "caching_enabled": "<boolean>",
                      "cksum_last_verified": "<long>",
                      "consoleUri": "<string>",
                      "content_repl_errors_found": "<boolean>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "dedupe_enabled": "<boolean>",
                      "description": "<string>",
                      "encryption_cipher": "<string>",
                      "force": "<boolean>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "inherit_acl": "<boolean>",
                      "iscsi_target_scope": "<string>",
                      "last_content_snap_br_cg_uid": "<long>",
                      "last_content_snap_br_gid": "<long>",
                      "last_content_snap_id": "<long>",
                      "last_modified": "<long>",
                      "last_snap": {
                        "snap_creation_time": "<long>",
                        "snap_id": "<string>",
                        "snap_name": "<string>"
                      },
                      "limit": "<long>",
                      "limit_iops": "<long>",
                      "limit_mbps": "<long>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "move_aborting": "<boolean>",
                      "move_bytes_migrated": "<long>",
                      "move_bytes_remaining": "<long>",
                      "move_est_compl_time": "<long>",
                      "move_start_time": "<long>",
                      "multi_initiator": "<boolean>",
                      "needs_content_repl": "<boolean>",
                      "num_snaps": "<long>",
                      "offline_reason": "<string>",
                      "online_snaps": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "snap_id": "<string>",
                          "snap_name": "<string>"
                        }
                      ],
                      "pinned_cache_size": "<long>",
                      "pre_filter": "<string>",
                      "previously_deduped": "<boolean>",
                      "projected_num_snaps": "<long>",
                      "protection_type": "<string>",
                      "reserve": "<long>",
                      "resourceUri": "<string>",
                      "search_name": "<string>",
                      "snap_reserve": "<long>",
                      "snap_usage_compressed_bytes": "<long>",
                      "snap_usage_populated_bytes": "<long>",
                      "snap_usage_uncompressed_bytes": "<long>",
                      "snap_warn_level": "<long>",
                      "space_usage_level": "<string>",
                      "srep_last_sync": "<long>",
                      "srep_resync_sync": "<long>",
                      "thinly_provisioned": "<boolean>",
                      "total_usage_bytes": "<long>",
                      "type": "<string>",
                      "upstream_cache_pinned": "<boolean>",
                      "usage_valid": "<boolean>",
                      "vol_state": "<string>",
                      "vol_usage_compressed_bytes": "<long>",
                      "vol_usage_uncompressed_bytes": "<long>",
                      "vpd_ieee0": "<string>",
                      "vpd_ieee1": "<string>",
                      "vpd_t10": "<string>",
                      "warn_level": "<long>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volumes"
        ],
        "summary": "Create Nimble / Alletra 6K volume in system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K volume in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "agent_type": "<string>",
                  "app_uuid": "<string>",
                  "base_snap_id": "<string>",
                  "block_size": "<long>",
                  "cache_pinned": "<boolean>",
                  "clone": "<boolean>",
                  "dedupe_enabled": "<boolean>",
                  "description": "<string>",
                  "dest_pool_id": "<string>",
                  "encryption_cipher": "<string>",
                  "folder_id": "<string>",
                  "limit": "<long>",
                  "limit_iops": "<long>",
                  "limit_mbps": "<long>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "multi_initiator": "<boolean>",
                  "online": "<boolean>",
                  "owned_by_group_id": "<string>",
                  "perfpolicy_id": "<string>",
                  "pool_id": "<string>",
                  "read_only": "<boolean>",
                  "reserve": "<long>",
                  "size": "<long>",
                  "snap_reserve": "<long>",
                  "snap_warn_level": "<long>",
                  "suffix": "<integer>",
                  "warn_level": "<long>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/snapshot-collections/{snapshotCollectionId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections > {snapshotCollectionId}"
        ],
        "summary": "Get details of snapshot collection of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId} by {snapshotId}",
        "description": "Get details of snapshot collection of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId} by {snapshotId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "fugiat tempor magna",
                  "id": "<string>",
                  "name": "<string>",
                  "online_status": "<string>",
                  "schedule_id": "<string>",
                  "srep_owner_id": "<string>",
                  "volcoll_id": "<string>",
                  "allow_writes": "<boolean>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "creation_time": "<long>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "generation": "<integer>",
                  "is_complete": "<boolean>",
                  "is_external_trigger": "<boolean>",
                  "is_manual": "<boolean>",
                  "is_manually_managed": "<boolean>",
                  "is_replica": "<boolean>",
                  "is_unmanaged": "<boolean>",
                  "last_modified": "<long>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "origin_name": "<string>",
                  "peer_snapcoll_id": "<string>",
                  "replicate_to": "<string>",
                  "resourceUri": "<string>",
                  "snapshots_list": [
                    {
                      "expiry_time": "<long>",
                      "id": "<string>",
                      "name": "<string>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "snap_collection_id": "<string>",
                      "snap_collection_name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "expiry_time": "<long>",
                      "id": "<string>",
                      "name": "<string>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "snap_collection_id": "<string>",
                      "snap_collection_name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ],
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/snapshot-collections/update": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections > update"
        ],
        "summary": "Perform offline/online action on  snapshot collections of Nimble / Alletra 6K and associated with volume collection {volumeCollectionId}  in the system identified by {systemId}",
        "description": "Perform offline/online action on  snapshot collections of Nimble / Alletra 6K and associated with volume collection {volumeCollectionId}  in the system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "snapshot_collection_ids": [
                    "<string>",
                    "<string>"
                  ],
                  "online": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/snapshot-collections/remove": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections > remove"
        ],
        "summary": "Remove multiple snapshot collections identified by {volumeCollectionId} from Nimble / Alletra 6K",
        "description": "Remove multiple snapshot collections identified by {volumeCollectionId} from Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "snapshot_collections": [
                    {
                      "id": "<string>"
                    },
                    {
                      "id": "<string>"
                    }
                  ],
                  "force": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/snapshot-collections": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections"
        ],
        "summary": "Get all snapshot collections' details of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId}",
        "description": "Get all snapshot collections' details of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter snapshot collections by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort snapshot collections resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "online_status": "<string>",
                      "schedule_id": "<string>",
                      "srep_owner_id": "<string>",
                      "volcoll_id": "<string>",
                      "allow_writes": "<boolean>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "generation": "<integer>",
                      "is_complete": "<boolean>",
                      "is_external_trigger": "<boolean>",
                      "is_manual": "<boolean>",
                      "is_manually_managed": "<boolean>",
                      "is_replica": "<boolean>",
                      "is_unmanaged": "<boolean>",
                      "last_modified": "<long>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "origin_name": "<string>",
                      "peer_snapcoll_id": "<string>",
                      "replicate_to": "<string>",
                      "resourceUri": "<string>",
                      "snapshots_list": [
                        {
                          "expiry_time": "<long>",
                          "id": "<string>",
                          "name": "<string>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "snap_collection_id": "<string>",
                          "snap_collection_name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "expiry_time": "<long>",
                          "id": "<string>",
                          "name": "<string>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "snap_collection_id": "<string>",
                          "snap_collection_name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "type": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "online_status": "<string>",
                      "schedule_id": "<string>",
                      "srep_owner_id": "<string>",
                      "volcoll_id": "<string>",
                      "allow_writes": "<boolean>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "generation": "<integer>",
                      "is_complete": "<boolean>",
                      "is_external_trigger": "<boolean>",
                      "is_manual": "<boolean>",
                      "is_manually_managed": "<boolean>",
                      "is_replica": "<boolean>",
                      "is_unmanaged": "<boolean>",
                      "last_modified": "<long>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "origin_name": "<string>",
                      "peer_snapcoll_id": "<string>",
                      "replicate_to": "<string>",
                      "resourceUri": "<string>",
                      "snapshots_list": [
                        {
                          "expiry_time": "<long>",
                          "id": "<string>",
                          "name": "<string>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "snap_collection_id": "<string>",
                          "snap_collection_name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "expiry_time": "<long>",
                          "id": "<string>",
                          "name": "<string>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "snap_collection_id": "<string>",
                          "snap_collection_name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > snapshot-collections"
        ],
        "summary": "Create Nimble / Alletra 6K snapshot collection in system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K snapshot collection in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "agent_type": "<string>",
                  "allow_writes": "<boolean>",
                  "description": "<string>",
                  "disable_appsync": "<boolean>",
                  "invoke_on_upstream_partner": "<boolean>",
                  "is_external_trigger": "<boolean>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "replicate": "<boolean>",
                  "replicate_to": "<string>",
                  "skip_db_consistency_check": "<boolean>",
                  "snap_verify": "<boolean>",
                  "start_online": "<boolean>",
                  "vol_snap_attr_list": [
                    {
                      "app_uuid": "<string>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "vol_id": "<string>"
                    },
                    {
                      "app_uuid": "<string>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "vol_id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/remove-volumes": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > remove-volumes"
        ],
        "summary": "Remove volumes from Nimble / Alletra 6K volumes collection in system identified by {systemId}",
        "description": "Remove volumes from Nimble / Alletra 6K volumes collection in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "volume_ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/promote": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > promote"
        ],
        "summary": "Perform promote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "description": "Perform promote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/handover": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > handover"
        ],
        "summary": "Perform handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "description": "Perform handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replication_partner_id": "<string>",
                  "invoke_on_upstream_partner": "<boolean>",
                  "no_reverse": "<boolean>",
                  "override_upstream_down": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/demote": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > demote"
        ],
        "summary": "Perform demote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "description": "Perform demote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replication_partner_id": "<string>",
                  "invoke_on_upstream_partner": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/add-volumes": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > add-volumes"
        ],
        "summary": "Add volumes to Nimble / Alletra 6K volumes collection in system identified by {systemId}",
        "description": "Add volumes to Nimble / Alletra 6K volumes collection in system identified by {systemId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "volume_ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}/actions/abort-handover": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId} > actions > abort-handover"
        ],
        "summary": "Perform abort handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "description": "Perform abort handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections/{volumeCollectionId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId}"
        ],
        "summary": "Remove Volume-collection identified by {volumeCollectionId} from Nimble / Alletra 6K",
        "description": "Remove Volume-collection identified by {volumeCollectionId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Forceful delete volume collection option.",
            "example": "<boolean>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K volume-collections identified by {volumeCollectionId}",
        "description": "Get details of Nimble / Alletra 6K volume-collections identified by {volumeCollectionId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "voluptate eiusmod velit",
                  "app_cluster_name": "<string>",
                  "app_id": "<string>",
                  "app_server": "<string>",
                  "app_service_name": "<string>",
                  "id": "<string>",
                  "name": "<string>",
                  "prottmpl_id": "<string>",
                  "replication_type": "<string>",
                  "synchronous_replication_state": "<string>",
                  "synchronous_replication_type": "<string>",
                  "agent_hostname": "<string>",
                  "app_sync": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "cache_pinned_volume_list": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "creation_time": "<long>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "handover_replication_partner": "<string>",
                  "is_handing_over": "<boolean>",
                  "is_standalone_volcoll": "<boolean>",
                  "lag_time": "<long>",
                  "last_replicated_snapcoll": {},
                  "last_snapcoll": {},
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "pol_owner_name": "<string>",
                  "protection_type": "<string>",
                  "repl_bytes_transferred": "<long>",
                  "repl_priority": "<string>",
                  "replication_partner": [
                    "<string>",
                    "<string>"
                  ],
                  "resourceUri": "<string>",
                  "schedule_list": [
                    {
                      "active": "<boolean>",
                      "at_time": "<long>",
                      "days": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "downstream_partner_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "num_retain": "<long>",
                      "num_retain_replica": "<long>",
                      "period": "<long>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<long>",
                      "replicate_every": "<long>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<long>"
                    },
                    {
                      "active": "<boolean>",
                      "at_time": "<long>",
                      "days": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "downstream_partner_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "num_retain": "<long>",
                      "num_retain_replica": "<long>",
                      "period": "<long>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<long>",
                      "replicate_every": "<long>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<long>"
                    }
                  ],
                  "search_name": "<string>",
                  "snapcoll_count": "<long>",
                  "srep_last_sync": "<long>",
                  "srep_resync_percent": "<long>",
                  "total_repl_bytes": "<long>",
                  "type": "<string>",
                  "vcenter_hostname": "<string>",
                  "vcenter_username": "<string>",
                  "volume_count": "<long>",
                  "volume_list": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections > {volumeCollectionId}"
        ],
        "summary": "Edit  details of Nimble / Alletra 6K Volume-collections identified by {volumeCollectionId}",
        "description": "Edit  details of Nimble / Alletra 6K Volume-collections identified by {volumeCollectionId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "agent_hostname": "<string>",
                  "agent_username": "<string>",
                  "app_cluster_name": "<string>",
                  "app_id": "<string>",
                  "app_server": "<string>",
                  "app_service_name": "<string>",
                  "app_sync": "<string>",
                  "description": "<string>",
                  "name": "<string>",
                  "vcenter_hostname": "<string>",
                  "vcenter_username": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/volume-collections": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections"
        ],
        "summary": "Get all volume-collections details by Nimble / Alletra 6K",
        "description": "Get all volume-collections details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter volume-collection by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort volume-collection resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "app_cluster_name": "<string>",
                      "app_id": "<string>",
                      "app_server": "<string>",
                      "app_service_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "prottmpl_id": "<string>",
                      "replication_type": "<string>",
                      "synchronous_replication_state": "<string>",
                      "synchronous_replication_type": "<string>",
                      "agent_hostname": "<string>",
                      "app_sync": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "cache_pinned_volume_list": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "handover_replication_partner": "<string>",
                      "is_handing_over": "<boolean>",
                      "is_standalone_volcoll": "<boolean>",
                      "lag_time": "<long>",
                      "last_replicated_snapcoll": {},
                      "last_snapcoll": {},
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "pol_owner_name": "<string>",
                      "protection_type": "<string>",
                      "repl_bytes_transferred": "<long>",
                      "repl_priority": "<string>",
                      "replication_partner": [
                        "<string>",
                        "<string>"
                      ],
                      "resourceUri": "<string>",
                      "schedule_list": [
                        {
                          "active": "<boolean>",
                          "at_time": "<long>",
                          "days": "<string>",
                          "disable_appsync": "<boolean>",
                          "downstream_partner": "<string>",
                          "downstream_partner_id": "<string>",
                          "downstream_partner_name": "<string>",
                          "id": "<string>",
                          "name": "<string>",
                          "num_retain": "<long>",
                          "num_retain_replica": "<long>",
                          "period": "<long>",
                          "period_unit": "<string>",
                          "repl_alert_thres": "<long>",
                          "replicate_every": "<long>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "schedule_type": "<string>",
                          "skip_db_consistency_check": "<boolean>",
                          "snap_verify": "<boolean>",
                          "until_time": "<long>"
                        },
                        {
                          "active": "<boolean>",
                          "at_time": "<long>",
                          "days": "<string>",
                          "disable_appsync": "<boolean>",
                          "downstream_partner": "<string>",
                          "downstream_partner_id": "<string>",
                          "downstream_partner_name": "<string>",
                          "id": "<string>",
                          "name": "<string>",
                          "num_retain": "<long>",
                          "num_retain_replica": "<long>",
                          "period": "<long>",
                          "period_unit": "<string>",
                          "repl_alert_thres": "<long>",
                          "replicate_every": "<long>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "schedule_type": "<string>",
                          "skip_db_consistency_check": "<boolean>",
                          "snap_verify": "<boolean>",
                          "until_time": "<long>"
                        }
                      ],
                      "search_name": "<string>",
                      "snapcoll_count": "<long>",
                      "srep_last_sync": "<long>",
                      "srep_resync_percent": "<long>",
                      "total_repl_bytes": "<long>",
                      "type": "<string>",
                      "vcenter_hostname": "<string>",
                      "vcenter_username": "<string>",
                      "volume_count": "<long>",
                      "volume_list": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ]
                    },
                    {
                      "app_cluster_name": "<string>",
                      "app_id": "<string>",
                      "app_server": "<string>",
                      "app_service_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "prottmpl_id": "<string>",
                      "replication_type": "<string>",
                      "synchronous_replication_state": "<string>",
                      "synchronous_replication_type": "<string>",
                      "agent_hostname": "<string>",
                      "app_sync": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "cache_pinned_volume_list": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "handover_replication_partner": "<string>",
                      "is_handing_over": "<boolean>",
                      "is_standalone_volcoll": "<boolean>",
                      "lag_time": "<long>",
                      "last_replicated_snapcoll": {},
                      "last_snapcoll": {},
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "pol_owner_name": "<string>",
                      "protection_type": "<string>",
                      "repl_bytes_transferred": "<long>",
                      "repl_priority": "<string>",
                      "replication_partner": [
                        "<string>",
                        "<string>"
                      ],
                      "resourceUri": "<string>",
                      "schedule_list": [
                        {
                          "active": "<boolean>",
                          "at_time": "<long>",
                          "days": "<string>",
                          "disable_appsync": "<boolean>",
                          "downstream_partner": "<string>",
                          "downstream_partner_id": "<string>",
                          "downstream_partner_name": "<string>",
                          "id": "<string>",
                          "name": "<string>",
                          "num_retain": "<long>",
                          "num_retain_replica": "<long>",
                          "period": "<long>",
                          "period_unit": "<string>",
                          "repl_alert_thres": "<long>",
                          "replicate_every": "<long>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "schedule_type": "<string>",
                          "skip_db_consistency_check": "<boolean>",
                          "snap_verify": "<boolean>",
                          "until_time": "<long>"
                        },
                        {
                          "active": "<boolean>",
                          "at_time": "<long>",
                          "days": "<string>",
                          "disable_appsync": "<boolean>",
                          "downstream_partner": "<string>",
                          "downstream_partner_id": "<string>",
                          "downstream_partner_name": "<string>",
                          "id": "<string>",
                          "name": "<string>",
                          "num_retain": "<long>",
                          "num_retain_replica": "<long>",
                          "period": "<long>",
                          "period_unit": "<string>",
                          "repl_alert_thres": "<long>",
                          "replicate_every": "<long>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "schedule_type": "<string>",
                          "skip_db_consistency_check": "<boolean>",
                          "snap_verify": "<boolean>",
                          "until_time": "<long>"
                        }
                      ],
                      "search_name": "<string>",
                      "snapcoll_count": "<long>",
                      "srep_last_sync": "<long>",
                      "srep_resync_percent": "<long>",
                      "total_repl_bytes": "<long>",
                      "type": "<string>",
                      "vcenter_hostname": "<string>",
                      "vcenter_username": "<string>",
                      "volume_count": "<long>",
                      "volume_list": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ]
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > volume-collections"
        ],
        "summary": "Create Nimble / Alletra 6K volume collection in system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K volume collection in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "agent_hostname": "<string>",
                  "agent_username": "<string>",
                  "app_cluster_name": "<string>",
                  "app_id": "<string>",
                  "app_server": "<string>",
                  "app_service_name": "<string>",
                  "app_sync": "<string>",
                  "description": "<string>",
                  "is_standalone_volcoll": "<boolean>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "prottmpl_id": "<string>",
                  "replication_type": "<string>",
                  "vcenter_hostname": "<string>",
                  "vcenter_username": "<string>",
                  "volume_list": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/uninitialized-arrays/{uninitializedArrayId}": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > uninitialized-arrays > {uninitializedArrayId}"
        ],
        "summary": "Get  uninitialized arrays details by Nimble / Alletra 6K  identified  by {uninitializedArrayId}",
        "description": "Get uninitialized arrays details by Nimble / Alletra 6K identified  by {uninitializedArrayId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "id": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "uninitializedArrayId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "all_flash": "<boolean>",
                      "array_name": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "count_of_fc_ports": "<integer>",
                      "customerId": "<string>",
                      "dedupe_configurable": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "model_str": "<string>",
                      "resourceUri": "<string>",
                      "serial": "<string>",
                      "type": "<string>",
                      "version": "<string>",
                      "zconf_ipaddrs": [
                        {
                          "ip_addr": "<string>"
                        },
                        {
                          "ip_addr": "<string>"
                        }
                      ]
                    },
                    {
                      "all_flash": "<boolean>",
                      "array_name": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "count_of_fc_ports": "<integer>",
                      "customerId": "<string>",
                      "dedupe_configurable": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "model_str": "<string>",
                      "resourceUri": "<string>",
                      "serial": "<string>",
                      "type": "<string>",
                      "version": "<string>",
                      "zconf_ipaddrs": [
                        {
                          "ip_addr": "<string>"
                        },
                        {
                          "ip_addr": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/uninitialized-arrays": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > uninitialized-arrays"
        ],
        "summary": "Get all uninitialized arrays details by Nimble / Alletra 6K",
        "description": "Get all uninitialized arrays details by Nimble / Alletra 6K",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "all_flash": "<boolean>",
                      "array_name": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "count_of_fc_ports": "<integer>",
                      "customerId": "<string>",
                      "dedupe_configurable": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "model_str": "<string>",
                      "resourceUri": "<string>",
                      "serial": "<string>",
                      "type": "<string>",
                      "version": "<string>",
                      "zconf_ipaddrs": [
                        {
                          "ip_addr": "<string>"
                        },
                        {
                          "ip_addr": "<string>"
                        }
                      ]
                    },
                    {
                      "all_flash": "<boolean>",
                      "array_name": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "count_of_fc_ports": "<integer>",
                      "customerId": "<string>",
                      "dedupe_configurable": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "model_str": "<string>",
                      "resourceUri": "<string>",
                      "serial": "<string>",
                      "type": "<string>",
                      "version": "<string>",
                      "zconf_ipaddrs": [
                        {
                          "ip_addr": "<string>"
                        },
                        {
                          "ip_addr": "<string>"
                        }
                      ]
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/witnesses/{witnessId}/actions/test": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses > {witnessId} > actions > test"
        ],
        "summary": "Test and validate the witness configuration between the host identified by {witnessId} from Nimble / Alletra 6K identified by {systemId}",
        "description": "Test and validate the witness configuration between the host identified by {witnessId} from Nimble / Alletra 6K identified by {systemId}",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "witnessId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "response": [
                    {
                      "array_name": "<string>",
                      "role": "<string>",
                      "witness_connectivity_message": "<string>",
                      "witness_connectivity_state": "<string>"
                    },
                    {
                      "array_name": "<string>",
                      "role": "<string>",
                      "witness_connectivity_message": "<string>",
                      "witness_connectivity_state": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/witnesses/{witnessId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses > {witnessId}"
        ],
        "summary": "Remove witness identified by {witnessId} from Nimble / Alletra 6K",
        "description": "Remove witness identified by {witnessId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "witnessId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses > {witnessId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K witness configuration identified by {witnessId}",
        "description": "Get details of Nimble / Alletra 6K witness configuration identified by {witnessId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "witnessId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestURI": "nulla consequat qui proident",
                  "host": "<string>",
                  "id": "<string>",
                  "port": "<long>",
                  "username": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "auto_switchover_messages": [
                    {
                      "code": "<long>",
                      "severity": "<string>",
                      "text": "<string>"
                    },
                    {
                      "code": "<long>",
                      "severity": "<string>",
                      "text": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "resourceUri": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/witnesses": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses"
        ],
        "summary": "Get all witness configuration details by Nimble / Alletra 6K",
        "description": "Get all witness configuration details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter witnesses by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort witnesses resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "host": "<string>",
                      "id": "<string>",
                      "port": "<long>",
                      "username": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "auto_switchover_messages": [
                        {
                          "code": "<long>",
                          "severity": "<string>",
                          "text": "<string>"
                        },
                        {
                          "code": "<long>",
                          "severity": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "host": "<string>",
                      "id": "<string>",
                      "port": "<long>",
                      "username": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "auto_switchover_messages": [
                        {
                          "code": "<long>",
                          "severity": "<string>",
                          "text": "<string>"
                        },
                        {
                          "code": "<long>",
                          "severity": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > witnesses"
        ],
        "summary": "Create a new witness configuration Nimble / Alletra 6K",
        "description": "Create a new witness configuration Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "username": "<string>",
                  "password": "<string>",
                  "host": "<string>",
                  "port": "<long>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/{replicationpartnerId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > {replicationpartnerId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K replication-partner identified by {replicationpartnerId}",
        "description": "Get details of Nimble / Alletra 6K replication-partner identified by {replicationpartnerId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "replicationpartnerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestURI": "sunt ut proident irure ut",
                  "array_serial": "<string>",
                  "cfg_sync_status": "<string>",
                  "creation_time": "<long>",
                  "folder_id": "<string>",
                  "folder_name": "<string>",
                  "hostname": "<string>",
                  "id": "<string>",
                  "is_alive": "<boolean>",
                  "name": "<string>",
                  "partner_type": "<string>",
                  "paused": "<boolean>",
                  "pool_id": "<string>",
                  "pool_name": "<string>",
                  "repl_hostname": "<string>",
                  "subnet_label": "<string>",
                  "subnet_netmask": "<string>",
                  "subnet_network": "<string>",
                  "subnet_type": "<string>",
                  "systemId": "<string>",
                  "version": "<long>",
                  "volume_collection_list_count": "<long>",
                  "alias": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "control_port": "<long>",
                  "customerId": "<string>",
                  "data_port": "<long>",
                  "description": "<string>",
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "last_keepalive_error": "<string>",
                  "last_modified": "<long>",
                  "last_sync_error": "<string>",
                  "match_folder": "<boolean>",
                  "partner_group_uid": "<long>",
                  "port_range_start": "<integer>",
                  "proxy_hostname": "<string>",
                  "proxy_user": "<string>",
                  "remote_partner_folder_id": "<string>",
                  "remote_partner_folder_name": "<string>",
                  "remote_partner_id": "<string>",
                  "remote_partner_name": "<string>",
                  "remote_partner_pool_id": "<string>",
                  "remote_partner_pool_name": "<string>",
                  "remote_partner_subnet_label": "<string>",
                  "remote_partner_subnet_type": "<string>",
                  "remote_partner_system_id": "<string>",
                  "replication_direction": "<string>",
                  "search_name": "<string>",
                  "status": "<string>",
                  "throttled_bandwidth_current": "<long>",
                  "throttled_bandwidth_current_kbps": "<long>",
                  "throttles": [
                    {
                      "days": "<string>",
                      "description": "<string>",
                      "name": "<string>",
                      "thr_at_time": "<long>",
                      "thr_bandwidth": "<long>",
                      "thr_until_time": "<long>"
                    },
                    {
                      "days": "<string>",
                      "description": "<string>",
                      "name": "<string>",
                      "thr_at_time": "<long>",
                      "thr_bandwidth": "<long>",
                      "thr_until_time": "<long>"
                    }
                  ],
                  "type": "<string>",
                  "unique_name": "<boolean>",
                  "volume_collection_list": [
                    {
                      "id": "<string>"
                    },
                    {
                      "id": "<string>"
                    }
                  ],
                  "witness": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > {replicationpartnerId}"
        ],
        "summary": "Edit a replication partner for Nimble / Alletra 6K given by replicationpartnerId",
        "description": "Edit a replication partner for Nimble / Alletra 6K given by replicationpartnerId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartners": [
                    {
                      "control_port": "<long>",
                      "data_port": "<long>",
                      "description": "<string>",
                      "remotePartnerId": "<string>",
                      "repl_hostname": "<string>",
                      "source": {
                        "pool_id": "<string>"
                      },
                      "subnet_label": "<string>",
                      "subnet_type": "<string>",
                      "target": {
                        "pool_id": "<string>"
                      },
                      "targetSystemId": "<string>",
                      "throttles": [
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        },
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        }
                      ]
                    },
                    {
                      "control_port": "<long>",
                      "data_port": "<long>",
                      "description": "<string>",
                      "remotePartnerId": "<string>",
                      "repl_hostname": "<string>",
                      "source": {
                        "pool_id": "<string>"
                      },
                      "subnet_label": "<string>",
                      "subnet_type": "<string>",
                      "target": {
                        "pool_id": "<string>"
                      },
                      "targetSystemId": "<string>",
                      "throttles": [
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        },
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "replicationpartnerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/remove": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > remove"
        ],
        "summary": "Remove list of replication partner for Nimble / Alletra 6K",
        "description": "Remove list of replication partner for Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartners": [
                    {
                      "replicationPartnerSystemId": "<string>",
                      "srcReplicationId": "<string>",
                      "targetReplicationId": "<string>"
                    },
                    {
                      "replicationPartnerSystemId": "<string>",
                      "srcReplicationId": "<string>",
                      "targetReplicationId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/actions/test": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > actions > test"
        ],
        "summary": "Test the replication partner pair of Nimble / Alletra 6K",
        "description": "Test the replication partner pair of Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartners": [
                    {
                      "replicationPartnerSystemId": "<string>",
                      "srcReplicationId": "<string>",
                      "targetReplicationId": "<string>"
                    },
                    {
                      "replicationPartnerSystemId": "<string>",
                      "srcReplicationId": "<string>",
                      "targetReplicationId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "response": [
                    {
                      "replication_partner_id": "<string>",
                      "response": "<string>",
                      "status": "<string>"
                    },
                    {
                      "replication_partner_id": "<string>",
                      "response": "<string>",
                      "status": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/actions/resume": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > actions > resume"
        ],
        "summary": "Resume the replication pair of Nimble / Alletra 6K",
        "description": "Resume the replication pair of Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartners": [
                    {
                      "replicationPartnerSystemId": "<string>",
                      "srcReplicationId": "<string>",
                      "targetReplicationId": "<string>"
                    },
                    {
                      "replicationPartnerSystemId": "<string>",
                      "srcReplicationId": "<string>",
                      "targetReplicationId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners/actions/pause": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners > actions > pause"
        ],
        "summary": "Pause the replication pair of Nimble / Alletra 6K",
        "description": "Pause the replication pair of Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartners": [
                    {
                      "replicationPartnerSystemId": "<string>",
                      "srcReplicationId": "<string>",
                      "targetReplicationId": "<string>"
                    },
                    {
                      "replicationPartnerSystemId": "<string>",
                      "srcReplicationId": "<string>",
                      "targetReplicationId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings/replication-partners": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners"
        ],
        "summary": "Get all replication-partners details for Nimble / Alletra 6K",
        "description": "Get all replication-partners details for Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter replication partners by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort replication partner resource by Key.",
            "example": "<string>"
          },
          {
            "name": "includeIndirectPartners",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Include indirect partners. Indirect partners are excluded by default. This parameter cannot be used with other query parameters.",
            "example": "<boolean>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "array_serial": "<string>",
                      "cfg_sync_status": "<string>",
                      "creation_time": "<long>",
                      "folder_id": "<string>",
                      "folder_name": "<string>",
                      "hostname": "<string>",
                      "id": "<string>",
                      "is_alive": "<boolean>",
                      "name": "<string>",
                      "partner_type": "<string>",
                      "paused": "<boolean>",
                      "pool_id": "<string>",
                      "pool_name": "<string>",
                      "repl_hostname": "<string>",
                      "subnet_label": "<string>",
                      "subnet_netmask": "<string>",
                      "subnet_network": "<string>",
                      "subnet_type": "<string>",
                      "systemId": "<string>",
                      "version": "<long>",
                      "volume_collection_list_count": "<long>",
                      "alias": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "control_port": "<long>",
                      "customerId": "<string>",
                      "data_port": "<long>",
                      "description": "<string>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "last_keepalive_error": "<string>",
                      "last_modified": "<long>",
                      "last_sync_error": "<string>",
                      "match_folder": "<boolean>",
                      "partner_group_uid": "<long>",
                      "port_range_start": "<integer>",
                      "proxy_hostname": "<string>",
                      "proxy_user": "<string>",
                      "remote_partner_folder_id": "<string>",
                      "remote_partner_folder_name": "<string>",
                      "remote_partner_id": "<string>",
                      "remote_partner_name": "<string>",
                      "remote_partner_pool_id": "<string>",
                      "remote_partner_pool_name": "<string>",
                      "remote_partner_subnet_label": "<string>",
                      "remote_partner_subnet_type": "<string>",
                      "remote_partner_system_id": "<string>",
                      "replication_direction": "<string>",
                      "search_name": "<string>",
                      "status": "<string>",
                      "throttled_bandwidth_current": "<long>",
                      "throttled_bandwidth_current_kbps": "<long>",
                      "throttles": [
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        },
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        }
                      ],
                      "type": "<string>",
                      "unique_name": "<boolean>",
                      "volume_collection_list": [
                        {
                          "id": "<string>"
                        },
                        {
                          "id": "<string>"
                        }
                      ],
                      "witness": "<string>"
                    },
                    {
                      "array_serial": "<string>",
                      "cfg_sync_status": "<string>",
                      "creation_time": "<long>",
                      "folder_id": "<string>",
                      "folder_name": "<string>",
                      "hostname": "<string>",
                      "id": "<string>",
                      "is_alive": "<boolean>",
                      "name": "<string>",
                      "partner_type": "<string>",
                      "paused": "<boolean>",
                      "pool_id": "<string>",
                      "pool_name": "<string>",
                      "repl_hostname": "<string>",
                      "subnet_label": "<string>",
                      "subnet_netmask": "<string>",
                      "subnet_network": "<string>",
                      "subnet_type": "<string>",
                      "systemId": "<string>",
                      "version": "<long>",
                      "volume_collection_list_count": "<long>",
                      "alias": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "control_port": "<long>",
                      "customerId": "<string>",
                      "data_port": "<long>",
                      "description": "<string>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "last_keepalive_error": "<string>",
                      "last_modified": "<long>",
                      "last_sync_error": "<string>",
                      "match_folder": "<boolean>",
                      "partner_group_uid": "<long>",
                      "port_range_start": "<integer>",
                      "proxy_hostname": "<string>",
                      "proxy_user": "<string>",
                      "remote_partner_folder_id": "<string>",
                      "remote_partner_folder_name": "<string>",
                      "remote_partner_id": "<string>",
                      "remote_partner_name": "<string>",
                      "remote_partner_pool_id": "<string>",
                      "remote_partner_pool_name": "<string>",
                      "remote_partner_subnet_label": "<string>",
                      "remote_partner_subnet_type": "<string>",
                      "remote_partner_system_id": "<string>",
                      "replication_direction": "<string>",
                      "search_name": "<string>",
                      "status": "<string>",
                      "throttled_bandwidth_current": "<long>",
                      "throttled_bandwidth_current_kbps": "<long>",
                      "throttles": [
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        },
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        }
                      ],
                      "type": "<string>",
                      "unique_name": "<boolean>",
                      "volume_collection_list": [
                        {
                          "id": "<string>"
                        },
                        {
                          "id": "<string>"
                        }
                      ],
                      "witness": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings > replication-partners"
        ],
        "summary": "Create replication partner pair for Nimble / Alletra 6K",
        "description": "Create replication partner pair for Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartners": [
                    {
                      "source": {
                        "pool_id": "<string>"
                      },
                      "targetSystemId": "<string>",
                      "target": {
                        "pool_id": "<string>"
                      },
                      "control_port": "<long>",
                      "data_port": "<long>",
                      "description": "<string>",
                      "repl_hostname": "<string>",
                      "subnet_label": "<string>",
                      "subnet_type": "<string>",
                      "throttles": [
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        },
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        }
                      ]
                    },
                    {
                      "source": {
                        "pool_id": "<string>"
                      },
                      "targetSystemId": "<string>",
                      "target": {
                        "pool_id": "<string>"
                      },
                      "control_port": "<long>",
                      "data_port": "<long>",
                      "description": "<string>",
                      "repl_hostname": "<string>",
                      "subnet_label": "<string>",
                      "subnet_type": "<string>",
                      "throttles": [
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        },
                        {
                          "days": "<string>",
                          "description": "<string>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_until_time": "<long>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/system-settings": {
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > system-settings"
        ],
        "summary": "Edit system settings of Nimble / Alletra 6K",
        "description": "Edit system settings of Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "alert_settings": {
                    "alert_from_email_addr": "<string>",
                    "alert_min_level": "<string>",
                    "alert_to_email_addrs": "<string>",
                    "send_alert_to_support": "<boolean>"
                  },
                  "date_timezone_settings": {
                    "date": "<long>",
                    "ntp_server": "<string>",
                    "timezone": "<string>"
                  },
                  "dns_settings": {
                    "dns_servers": [
                      {
                        "ip_addr": "<string>"
                      },
                      {
                        "ip_addr": "<string>"
                      }
                    ],
                    "domain_name": "<string>"
                  },
                  "isns_settings": {
                    "isns_enabled": "<boolean>",
                    "isns_port": "<long>",
                    "isns_server": "<string>"
                  },
                  "name": "<string>",
                  "proxy_settings": {
                    "proxy_port": "<long>",
                    "proxy_server": "<string>",
                    "proxy_username": "<string>"
                  },
                  "security_settings": {
                    "user_inactivity_timeout": "<long>"
                  },
                  "smtp_settings": {
                    "smtp_port": "<long>",
                    "smtp_server": "<string>"
                  },
                  "snmp_settings": {
                    "snmp_community": "<string>",
                    "snmp_get_enabled": "<boolean>",
                    "snmp_get_port": "<long>",
                    "snmp_sys_contact": "<string>",
                    "snmp_sys_location": "<string>",
                    "snmp_trap_enabled": "<boolean>",
                    "snmp_trap_host": "<string>",
                    "snmp_trap_port": "<long>"
                  },
                  "support_settings": {
                    "allow_analytics_gui": "<boolean>",
                    "allow_support_tunnel": "<boolean>",
                    "autosupport_enabled": "<boolean>"
                  },
                  "syslogd_settings": {
                    "syslogd_enabled": "<boolean>",
                    "syslogd_port": "<long>",
                    "syslogd_server": "<string>",
                    "syslogd_servers": [
                      {
                        "syslog_port": "<long>",
                        "syslog_server": "<string>"
                      },
                      {
                        "syslog_port": "<long>",
                        "syslog_server": "<string>"
                      }
                    ]
                  },
                  "system_parameters": {
                    "alarms_enabled": "<boolean>",
                    "default_volume_limit": "<long>",
                    "fc_enabled": "<boolean>",
                    "group_target_enabled": "<boolean>",
                    "iscsi_enabled": "<boolean>",
                    "repl_throttle_list": [
                      {
                        "days": "<string>",
                        "description": "<string>",
                        "thr_at_time": "<long>",
                        "thr_bandwidth": "<long>",
                        "thr_bandwidth_kbps": "<long>",
                        "thr_bandwidth_limit_kbps": "<long>",
                        "thr_until_time": "<long>"
                      },
                      {
                        "days": "<string>",
                        "description": "<string>",
                        "thr_at_time": "<long>",
                        "thr_bandwidth": "<long>",
                        "thr_bandwidth_kbps": "<long>",
                        "thr_bandwidth_limit_kbps": "<long>",
                        "thr_until_time": "<long>"
                      }
                    ],
                    "vss_validation_timeout": "<long>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}/performance-statistics": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > performance-statistics"
        ],
        "summary": "Get performance statistics of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "description": "Get performance statistics of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "storagePoolId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "iops": {
                    "avg_1day": "<number>",
                    "avg_1hour": "<number>",
                    "avg_8hours": "<number>",
                    "avg_latest": "<number>"
                  },
                  "latency": {
                    "avg_1day": "<number>",
                    "avg_1hour": "<number>",
                    "avg_8hours": "<number>",
                    "avg_latest": "<number>"
                  },
                  "requestURI": "<string>",
                  "throughput": {
                    "avg_1day": "<number>",
                    "avg_1hour": "<number>",
                    "avg_8hours": "<number>",
                    "avg_latest": "<number>"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}/performance-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > performance-history"
        ],
        "summary": "Get performance trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "description": "Get performance trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "storagePoolId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "iops_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  },
                  "latency_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  },
                  "requestURI": "<string>",
                  "throughput_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}/capacity-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > capacity-history"
        ],
        "summary": "Get storage pool capacity trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "description": "Get storage pool capacity trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "storagePoolId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>",
                  "requestURI": "<string>",
                  "series_data": [
                    {
                      "savings": "<number>",
                      "timestamp": "<long>",
                      "usage": "<number>"
                    },
                    {
                      "savings": "<number>",
                      "timestamp": "<long>",
                      "usage": "<number>"
                    }
                  ]
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}/actions/merge": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId} > actions > merge"
        ],
        "summary": "Merge pool identified by {storagePoolId} from Nimble / Alletra 6K",
        "description": "Merge pool identified by {storagePoolId} from Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "target_pool_id": "<string>",
                  "force": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "storagePoolId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools/{storagePoolId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId}"
        ],
        "summary": "Delete pool identified by {storagePoolId} from Nimble / Alletra 6K",
        "description": "Delete pool identified by {storagePoolId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "storagePoolId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K pool identified by {storagePoolId}",
        "description": "Get details of Nimble / Alletra 6K pool identified by {storagePoolId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "storagePoolId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "cillum aliquip quis",
                  "id": "<string>",
                  "name": "<string>",
                  "all_flash": "<boolean>",
                  "array_count": "<long>",
                  "array_list": [
                    {
                      "evac_time": 58771527,
                      "evac_usage": -92963211,
                      "migrate": "fugiat dolore",
                      "snap_usage_compressed_bytes": 71291199,
                      "usable_capacity": -29995157,
                      "usage": -6387441,
                      "usage_valid": true,
                      "vol_usage_compressed_bytes": 92028178,
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "id": "<string>",
                      "name": "<string>"
                    },
                    {
                      "evac_time": 63467160,
                      "evac_usage": -52548728,
                      "migrate": "commodo nostrud deseru",
                      "snap_usage_compressed_bytes": 85228803,
                      "usable_capacity": 6137217,
                      "usage": -83998702,
                      "usage_valid": true,
                      "vol_usage_compressed_bytes": -7276873,
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "id": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "cache_capacity": "<long>",
                  "capacity": "<long>",
                  "clone_ratio": "<number>",
                  "compression_ratio": "<number>",
                  "consoleUri": "<string>",
                  "creation_time": "<long>",
                  "customerId": "<string>",
                  "data_reduction_ratio": "<number>",
                  "dedupe_all_volumes": "<boolean>",
                  "dedupe_capable": "<boolean>",
                  "dedupe_capacity_bytes": "<long>",
                  "dedupe_ratio": "<number>",
                  "dedupe_usage_bytes": "<long>",
                  "description": "<string>",
                  "folder_list": [
                    {
                      "fqn": "<string>",
                      "id": "<string>"
                    },
                    {
                      "fqn": "<string>",
                      "id": "<string>"
                    }
                  ],
                  "free_space": "<long>",
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "is_default": "<boolean>",
                  "last_modified": "<long>",
                  "pinnable_cache_capacity": "<long>",
                  "pinned_cache_capacity": "<long>",
                  "pinned_vol_list": [
                    {
                      "size_pinned_cache_bytes": 71475832,
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "size_pinned_cache_bytes": 8338208,
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ],
                  "resourceUri": "<string>",
                  "savings": "<long>",
                  "savings_clone": "<long>",
                  "savings_compression": "<long>",
                  "savings_data_reduction": "<long>",
                  "savings_dedupe": "<long>",
                  "savings_ratio": "<number>",
                  "savings_vol_thin_provisioning": "<long>",
                  "search_name": "<string>",
                  "snap_count": "<long>",
                  "snapcoll_count": "<long>",
                  "type": "<string>",
                  "unassigned_array_list": [
                    {
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "id": "<string>",
                      "name": "<string>"
                    },
                    {
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "id": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "unused_reserve": "<long>",
                  "usage": "<long>",
                  "usage_valid": "<boolean>",
                  "vol_count": "<long>",
                  "vol_list": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ],
                  "vol_thin_provisioning_ratio": "<number>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools > {storagePoolId}"
        ],
        "summary": "Edit details of Nimble / Alletra 6K pool identified by {storagePoolId}",
        "description": "Edit details of Nimble / Alletra 6K pool identified by {storagePoolId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "array_list": [
                    {
                      "id": "<string>"
                    },
                    {
                      "id": "<string>"
                    }
                  ],
                  "dedupe_all_volumes": "<boolean>",
                  "dedupe_capable": "<boolean>",
                  "description": "<string>",
                  "force": "<boolean>",
                  "is_default": "<boolean>",
                  "name": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "storagePoolId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/storage-pools": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools"
        ],
        "summary": "Get all pools details by Nimble / Alletra 6K",
        "description": "Get all pools details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter pools by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort pools resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "all_flash": "<boolean>",
                      "array_count": "<long>",
                      "array_list": [
                        {
                          "evac_time": -50581176,
                          "evac_usage": 54453780,
                          "migrate": "ea",
                          "snap_usage_compressed_bytes": 41931448,
                          "usable_capacity": 5165467,
                          "usage": -75379917,
                          "usage_valid": false,
                          "vol_usage_compressed_bytes": 635916,
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "evac_time": -3390275,
                          "evac_usage": -20197364,
                          "migrate": "in ut exercitation",
                          "snap_usage_compressed_bytes": -60059233,
                          "usable_capacity": 9895441,
                          "usage": 55711935,
                          "usage_valid": true,
                          "vol_usage_compressed_bytes": -10675129,
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "cache_capacity": "<long>",
                      "capacity": "<long>",
                      "clone_ratio": "<number>",
                      "compression_ratio": "<number>",
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "data_reduction_ratio": "<number>",
                      "dedupe_all_volumes": "<boolean>",
                      "dedupe_capable": "<boolean>",
                      "dedupe_capacity_bytes": "<long>",
                      "dedupe_ratio": "<number>",
                      "dedupe_usage_bytes": "<long>",
                      "description": "<string>",
                      "folder_list": [
                        {
                          "fqn": "<string>",
                          "id": "<string>"
                        },
                        {
                          "fqn": "<string>",
                          "id": "<string>"
                        }
                      ],
                      "free_space": "<long>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "is_default": "<boolean>",
                      "last_modified": "<long>",
                      "pinnable_cache_capacity": "<long>",
                      "pinned_cache_capacity": "<long>",
                      "pinned_vol_list": [
                        {
                          "size_pinned_cache_bytes": -86538730,
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "size_pinned_cache_bytes": -71883758,
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "resourceUri": "<string>",
                      "savings": "<long>",
                      "savings_clone": "<long>",
                      "savings_compression": "<long>",
                      "savings_data_reduction": "<long>",
                      "savings_dedupe": "<long>",
                      "savings_ratio": "<number>",
                      "savings_vol_thin_provisioning": "<long>",
                      "search_name": "<string>",
                      "snap_count": "<long>",
                      "snapcoll_count": "<long>",
                      "type": "<string>",
                      "unassigned_array_list": [
                        {
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "unused_reserve": "<long>",
                      "usage": "<long>",
                      "usage_valid": "<boolean>",
                      "vol_count": "<long>",
                      "vol_list": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "vol_thin_provisioning_ratio": "<number>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "all_flash": "<boolean>",
                      "array_count": "<long>",
                      "array_list": [
                        {
                          "evac_time": 82501864,
                          "evac_usage": 9221308,
                          "migrate": "fugiat",
                          "snap_usage_compressed_bytes": -65444945,
                          "usable_capacity": -34966464,
                          "usage": -41992066,
                          "usage_valid": true,
                          "vol_usage_compressed_bytes": 22211612,
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "evac_time": -37234087,
                          "evac_usage": -9123349,
                          "migrate": "adipisicing",
                          "snap_usage_compressed_bytes": -30727781,
                          "usable_capacity": -26071622,
                          "usage": 3753295,
                          "usage_valid": false,
                          "vol_usage_compressed_bytes": 50174113,
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "cache_capacity": "<long>",
                      "capacity": "<long>",
                      "clone_ratio": "<number>",
                      "compression_ratio": "<number>",
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "data_reduction_ratio": "<number>",
                      "dedupe_all_volumes": "<boolean>",
                      "dedupe_capable": "<boolean>",
                      "dedupe_capacity_bytes": "<long>",
                      "dedupe_ratio": "<number>",
                      "dedupe_usage_bytes": "<long>",
                      "description": "<string>",
                      "folder_list": [
                        {
                          "fqn": "<string>",
                          "id": "<string>"
                        },
                        {
                          "fqn": "<string>",
                          "id": "<string>"
                        }
                      ],
                      "free_space": "<long>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "is_default": "<boolean>",
                      "last_modified": "<long>",
                      "pinnable_cache_capacity": "<long>",
                      "pinned_cache_capacity": "<long>",
                      "pinned_vol_list": [
                        {
                          "size_pinned_cache_bytes": -20785081,
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "size_pinned_cache_bytes": -92299060,
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "resourceUri": "<string>",
                      "savings": "<long>",
                      "savings_clone": "<long>",
                      "savings_compression": "<long>",
                      "savings_data_reduction": "<long>",
                      "savings_dedupe": "<long>",
                      "savings_ratio": "<number>",
                      "savings_vol_thin_provisioning": "<long>",
                      "search_name": "<string>",
                      "snap_count": "<long>",
                      "snapcoll_count": "<long>",
                      "type": "<string>",
                      "unassigned_array_list": [
                        {
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "unused_reserve": "<long>",
                      "usage": "<long>",
                      "usage_valid": "<boolean>",
                      "vol_count": "<long>",
                      "vol_list": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "vol_thin_provisioning_ratio": "<number>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > storage-pools"
        ],
        "summary": "Create storage pool from Nimble / Alletra 6K  system identified by {systemId}",
        "description": "Create storage pool from Nimble / Alletra 6K  system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "array_list": [
                    {
                      "id": "<string>"
                    },
                    {
                      "id": "<string>"
                    }
                  ],
                  "dedupe_all_volumes": "<boolean>",
                  "description": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/snapshots/actions/update": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > snapshots > actions > update"
        ],
        "summary": "Edit Multiple Nimble / Alletra 6K snapshots in system identified by {systemId}",
        "description": "Edit Multiple Nimble / Alletra 6K snapshots in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "snapshot_list": [
                    {
                      "id": "<string>",
                      "app_uuid": "<string>",
                      "description": "<string>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "online": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "app_uuid": "<string>",
                      "description": "<string>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "online": "<boolean>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/snapshot-collections/{snapshotCollectionId}/actions/clone": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > snapshot-collections > {snapshotCollectionId} > actions > clone"
        ],
        "summary": "Perform action clone Nimble / Alletra 6K on a snapshot collection identified by {snapshotCollectionId} in system identified by {systemId}",
        "description": "Perform action clone Nimble / Alletra 6K on a snapshot collection identified by {snapshotCollectionId} in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "clone_volumes": [
                    {
                      "parent_volume_name": "<string>",
                      "clone_volume_name": "<string>"
                    },
                    {
                      "parent_volume_name": "<string>",
                      "clone_volume_name": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotCollectionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/shelves/{shelfId}/actions/locate": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > shelves > {shelfId} > actions > locate"
        ],
        "summary": "Locate chassis of Nimble / Alletra 6K shelf identified by {shelfId}",
        "description": "Locate chassis of Nimble / Alletra 6K shelf identified by {shelfId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "cid": "<string>",
                  "status": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "shelfId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/shelves/{shelfId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > shelves > {shelfId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K Shelf identified by {shelfId}",
        "description": "Get details of Nimble / Alletra 6K Shelf identified by {shelfId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "shelfId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "id ut elit in eu",
                  "array_id": "<string>",
                  "array_name": "<string>",
                  "id": "<string>",
                  "model": "<string>",
                  "serial": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "chassis_sensors": [
                    {
                      "cid": "<string>",
                      "display_name": "<string>",
                      "location": "<string>",
                      "name": "<string>",
                      "status": "<string>",
                      "type": "<string>",
                      "value": "<long>"
                    },
                    {
                      "cid": "<string>",
                      "display_name": "<string>",
                      "location": "<string>",
                      "name": "<string>",
                      "status": "<string>",
                      "type": "<string>",
                      "value": "<long>"
                    }
                  ],
                  "chassis_type": "<string>",
                  "consoleUri": "<string>",
                  "ctrlrs": [
                    {
                      "cached_serial": "<string>",
                      "ctrlr_attrset_list": [
                        {
                          "cached_serial": "<string>",
                          "disk_serials": "<string>",
                          "disk_types": "<string>",
                          "hw_state": "<string>",
                          "session_serial": "<string>",
                          "sw_type": "<string>"
                        },
                        {
                          "cached_serial": "<string>",
                          "disk_serials": "<string>",
                          "disk_types": "<string>",
                          "hw_state": "<string>",
                          "session_serial": "<string>",
                          "sw_type": "<string>"
                        }
                      ],
                      "ctrlr_hw_model": "<string>",
                      "ctrlr_sensor_last_run": "<long>",
                      "ctrlr_sensors": [
                        {
                          "cid": "<string>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "status": "<string>",
                          "type": "<string>",
                          "value": "<long>"
                        },
                        {
                          "cid": "<string>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "status": "<string>",
                          "type": "<string>",
                          "value": "<long>"
                        }
                      ],
                      "ctrlr_side": "<string>",
                      "enc_loc_id": "<long>",
                      "exp_sas_addr": "<string>",
                      "extra_attributes": [
                        "<string>",
                        "<string>"
                      ],
                      "fan_overall_status": "<string>",
                      "hw_master_state": "<string>",
                      "hw_mship_failure": "<boolean>",
                      "identify_status": "<boolean>",
                      "port_info": [
                        {
                          "port_errors": "<string>",
                          "port_idx": "<long>",
                          "port_name": "<string>",
                          "port_status": "<string>",
                          "port_type": "<string>",
                          "remote_loc_id": "<long>",
                          "remote_port_id": "<long>",
                          "remote_sas_addr": "<string>",
                          "remote_sas_domain": "<string>",
                          "remote_sas_phy_id": "<string>"
                        },
                        {
                          "port_errors": "<string>",
                          "port_idx": "<long>",
                          "port_name": "<string>",
                          "port_status": "<string>",
                          "port_type": "<string>",
                          "remote_loc_id": "<long>",
                          "remote_port_id": "<long>",
                          "remote_sas_addr": "<string>",
                          "remote_sas_domain": "<string>",
                          "remote_sas_phy_id": "<string>"
                        }
                      ],
                      "psu_overall_status": "<string>",
                      "sw_master_state": "<string>",
                      "temp_overall_status": "<string>"
                    },
                    {
                      "cached_serial": "<string>",
                      "ctrlr_attrset_list": [
                        {
                          "cached_serial": "<string>",
                          "disk_serials": "<string>",
                          "disk_types": "<string>",
                          "hw_state": "<string>",
                          "session_serial": "<string>",
                          "sw_type": "<string>"
                        },
                        {
                          "cached_serial": "<string>",
                          "disk_serials": "<string>",
                          "disk_types": "<string>",
                          "hw_state": "<string>",
                          "session_serial": "<string>",
                          "sw_type": "<string>"
                        }
                      ],
                      "ctrlr_hw_model": "<string>",
                      "ctrlr_sensor_last_run": "<long>",
                      "ctrlr_sensors": [
                        {
                          "cid": "<string>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "status": "<string>",
                          "type": "<string>",
                          "value": "<long>"
                        },
                        {
                          "cid": "<string>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "status": "<string>",
                          "type": "<string>",
                          "value": "<long>"
                        }
                      ],
                      "ctrlr_side": "<string>",
                      "enc_loc_id": "<long>",
                      "exp_sas_addr": "<string>",
                      "extra_attributes": [
                        "<string>",
                        "<string>"
                      ],
                      "fan_overall_status": "<string>",
                      "hw_master_state": "<string>",
                      "hw_mship_failure": "<boolean>",
                      "identify_status": "<boolean>",
                      "port_info": [
                        {
                          "port_errors": "<string>",
                          "port_idx": "<long>",
                          "port_name": "<string>",
                          "port_status": "<string>",
                          "port_type": "<string>",
                          "remote_loc_id": "<long>",
                          "remote_port_id": "<long>",
                          "remote_sas_addr": "<string>",
                          "remote_sas_domain": "<string>",
                          "remote_sas_phy_id": "<string>"
                        },
                        {
                          "port_errors": "<string>",
                          "port_idx": "<long>",
                          "port_name": "<string>",
                          "port_status": "<string>",
                          "port_type": "<string>",
                          "remote_loc_id": "<long>",
                          "remote_port_id": "<long>",
                          "remote_sas_addr": "<string>",
                          "remote_sas_domain": "<string>",
                          "remote_sas_phy_id": "<string>"
                        }
                      ],
                      "psu_overall_status": "<string>",
                      "sw_master_state": "<string>",
                      "temp_overall_status": "<string>"
                    }
                  ],
                  "customerId": "<string>",
                  "disk_sets": [
                    {
                      "ave_mb_ps": "<long>",
                      "ave_segment_ps": "<long>",
                      "ave_ttc": "<long>",
                      "driveset": "<long>",
                      "is_capacity_valid": "<boolean>",
                      "is_flash_shelf": "<boolean>",
                      "pause_state": "<long>",
                      "pct_completion": "<long>",
                      "raw_cache_capacity": "<long>",
                      "raw_capacity": "<long>",
                      "sw_state": "<string>",
                      "usable_cache_capacity": "<long>",
                      "usable_capacity": "<long>"
                    },
                    {
                      "ave_mb_ps": "<long>",
                      "ave_segment_ps": "<long>",
                      "ave_ttc": "<long>",
                      "driveset": "<long>",
                      "is_capacity_valid": "<boolean>",
                      "is_flash_shelf": "<boolean>",
                      "pause_state": "<long>",
                      "pct_completion": "<long>",
                      "raw_cache_capacity": "<long>",
                      "raw_capacity": "<long>",
                      "sw_state": "<string>",
                      "usable_cache_capacity": "<long>",
                      "usable_capacity": "<long>"
                    }
                  ],
                  "fan_overall_status": "<string>",
                  "generation": "<integer>",
                  "model_ext": "<string>",
                  "psu_overall_status": "<string>",
                  "resourceUri": "<string>",
                  "temp_overall_status": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/shelves/actions/activate": {
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > shelves > actions > activate"
        ],
        "summary": "Activate shelves of a Nimble / Alletra 6K storage system identified by {systemId}",
        "description": "Activate shelves of a Nimble / Alletra 6K storage system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "shelf_list": [
                    {
                      "shelf_id": "<string>",
                      "driveset_list": [
                        {
                          "driveset": "<long>",
                          "accept_foreign": "<boolean>",
                          "accept_dedupe_impact": "<boolean>"
                        },
                        {
                          "driveset": "<long>",
                          "accept_foreign": "<boolean>",
                          "accept_dedupe_impact": "<boolean>"
                        }
                      ]
                    },
                    {
                      "shelf_id": "<string>",
                      "driveset_list": [
                        {
                          "driveset": "<long>",
                          "accept_foreign": "<boolean>",
                          "accept_dedupe_impact": "<boolean>"
                        },
                        {
                          "driveset": "<long>",
                          "accept_foreign": "<boolean>",
                          "accept_dedupe_impact": "<boolean>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/shelves": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > shelves"
        ],
        "summary": "Get all shelves details by Nimble / Alletra 6K",
        "description": "Get all shelves details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter shelves by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort shelves resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "id": "<string>",
                      "model": "<string>",
                      "serial": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "chassis_sensors": [
                        {
                          "cid": "<string>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "status": "<string>",
                          "type": "<string>",
                          "value": "<long>"
                        },
                        {
                          "cid": "<string>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "status": "<string>",
                          "type": "<string>",
                          "value": "<long>"
                        }
                      ],
                      "chassis_type": "<string>",
                      "consoleUri": "<string>",
                      "ctrlrs": [
                        {
                          "cached_serial": "<string>",
                          "ctrlr_attrset_list": [
                            {
                              "cached_serial": "<string>",
                              "disk_serials": "<string>",
                              "disk_types": "<string>",
                              "hw_state": "<string>",
                              "session_serial": "<string>",
                              "sw_type": "<string>"
                            },
                            {
                              "cached_serial": "<string>",
                              "disk_serials": "<string>",
                              "disk_types": "<string>",
                              "hw_state": "<string>",
                              "session_serial": "<string>",
                              "sw_type": "<string>"
                            }
                          ],
                          "ctrlr_hw_model": "<string>",
                          "ctrlr_sensor_last_run": "<long>",
                          "ctrlr_sensors": [
                            {
                              "cid": "<string>",
                              "display_name": "<string>",
                              "location": "<string>",
                              "name": "<string>",
                              "status": "<string>",
                              "type": "<string>",
                              "value": "<long>"
                            },
                            {
                              "cid": "<string>",
                              "display_name": "<string>",
                              "location": "<string>",
                              "name": "<string>",
                              "status": "<string>",
                              "type": "<string>",
                              "value": "<long>"
                            }
                          ],
                          "ctrlr_side": "<string>",
                          "enc_loc_id": "<long>",
                          "exp_sas_addr": "<string>",
                          "extra_attributes": [
                            "<string>",
                            "<string>"
                          ],
                          "fan_overall_status": "<string>",
                          "hw_master_state": "<string>",
                          "hw_mship_failure": "<boolean>",
                          "identify_status": "<boolean>",
                          "port_info": [
                            {
                              "port_errors": "<string>",
                              "port_idx": "<long>",
                              "port_name": "<string>",
                              "port_status": "<string>",
                              "port_type": "<string>",
                              "remote_loc_id": "<long>",
                              "remote_port_id": "<long>",
                              "remote_sas_addr": "<string>",
                              "remote_sas_domain": "<string>",
                              "remote_sas_phy_id": "<string>"
                            },
                            {
                              "port_errors": "<string>",
                              "port_idx": "<long>",
                              "port_name": "<string>",
                              "port_status": "<string>",
                              "port_type": "<string>",
                              "remote_loc_id": "<long>",
                              "remote_port_id": "<long>",
                              "remote_sas_addr": "<string>",
                              "remote_sas_domain": "<string>",
                              "remote_sas_phy_id": "<string>"
                            }
                          ],
                          "psu_overall_status": "<string>",
                          "sw_master_state": "<string>",
                          "temp_overall_status": "<string>"
                        },
                        {
                          "cached_serial": "<string>",
                          "ctrlr_attrset_list": [
                            {
                              "cached_serial": "<string>",
                              "disk_serials": "<string>",
                              "disk_types": "<string>",
                              "hw_state": "<string>",
                              "session_serial": "<string>",
                              "sw_type": "<string>"
                            },
                            {
                              "cached_serial": "<string>",
                              "disk_serials": "<string>",
                              "disk_types": "<string>",
                              "hw_state": "<string>",
                              "session_serial": "<string>",
                              "sw_type": "<string>"
                            }
                          ],
                          "ctrlr_hw_model": "<string>",
                          "ctrlr_sensor_last_run": "<long>",
                          "ctrlr_sensors": [
                            {
                              "cid": "<string>",
                              "display_name": "<string>",
                              "location": "<string>",
                              "name": "<string>",
                              "status": "<string>",
                              "type": "<string>",
                              "value": "<long>"
                            },
                            {
                              "cid": "<string>",
                              "display_name": "<string>",
                              "location": "<string>",
                              "name": "<string>",
                              "status": "<string>",
                              "type": "<string>",
                              "value": "<long>"
                            }
                          ],
                          "ctrlr_side": "<string>",
                          "enc_loc_id": "<long>",
                          "exp_sas_addr": "<string>",
                          "extra_attributes": [
                            "<string>",
                            "<string>"
                          ],
                          "fan_overall_status": "<string>",
                          "hw_master_state": "<string>",
                          "hw_mship_failure": "<boolean>",
                          "identify_status": "<boolean>",
                          "port_info": [
                            {
                              "port_errors": "<string>",
                              "port_idx": "<long>",
                              "port_name": "<string>",
                              "port_status": "<string>",
                              "port_type": "<string>",
                              "remote_loc_id": "<long>",
                              "remote_port_id": "<long>",
                              "remote_sas_addr": "<string>",
                              "remote_sas_domain": "<string>",
                              "remote_sas_phy_id": "<string>"
                            },
                            {
                              "port_errors": "<string>",
                              "port_idx": "<long>",
                              "port_name": "<string>",
                              "port_status": "<string>",
                              "port_type": "<string>",
                              "remote_loc_id": "<long>",
                              "remote_port_id": "<long>",
                              "remote_sas_addr": "<string>",
                              "remote_sas_domain": "<string>",
                              "remote_sas_phy_id": "<string>"
                            }
                          ],
                          "psu_overall_status": "<string>",
                          "sw_master_state": "<string>",
                          "temp_overall_status": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "disk_sets": [
                        {
                          "ave_mb_ps": "<long>",
                          "ave_segment_ps": "<long>",
                          "ave_ttc": "<long>",
                          "driveset": "<long>",
                          "is_capacity_valid": "<boolean>",
                          "is_flash_shelf": "<boolean>",
                          "pause_state": "<long>",
                          "pct_completion": "<long>",
                          "raw_cache_capacity": "<long>",
                          "raw_capacity": "<long>",
                          "sw_state": "<string>",
                          "usable_cache_capacity": "<long>",
                          "usable_capacity": "<long>"
                        },
                        {
                          "ave_mb_ps": "<long>",
                          "ave_segment_ps": "<long>",
                          "ave_ttc": "<long>",
                          "driveset": "<long>",
                          "is_capacity_valid": "<boolean>",
                          "is_flash_shelf": "<boolean>",
                          "pause_state": "<long>",
                          "pct_completion": "<long>",
                          "raw_cache_capacity": "<long>",
                          "raw_capacity": "<long>",
                          "sw_state": "<string>",
                          "usable_cache_capacity": "<long>",
                          "usable_capacity": "<long>"
                        }
                      ],
                      "fan_overall_status": "<string>",
                      "generation": "<integer>",
                      "model_ext": "<string>",
                      "psu_overall_status": "<string>",
                      "resourceUri": "<string>",
                      "temp_overall_status": "<string>",
                      "type": "<string>"
                    },
                    {
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "id": "<string>",
                      "model": "<string>",
                      "serial": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "chassis_sensors": [
                        {
                          "cid": "<string>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "status": "<string>",
                          "type": "<string>",
                          "value": "<long>"
                        },
                        {
                          "cid": "<string>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "status": "<string>",
                          "type": "<string>",
                          "value": "<long>"
                        }
                      ],
                      "chassis_type": "<string>",
                      "consoleUri": "<string>",
                      "ctrlrs": [
                        {
                          "cached_serial": "<string>",
                          "ctrlr_attrset_list": [
                            {
                              "cached_serial": "<string>",
                              "disk_serials": "<string>",
                              "disk_types": "<string>",
                              "hw_state": "<string>",
                              "session_serial": "<string>",
                              "sw_type": "<string>"
                            },
                            {
                              "cached_serial": "<string>",
                              "disk_serials": "<string>",
                              "disk_types": "<string>",
                              "hw_state": "<string>",
                              "session_serial": "<string>",
                              "sw_type": "<string>"
                            }
                          ],
                          "ctrlr_hw_model": "<string>",
                          "ctrlr_sensor_last_run": "<long>",
                          "ctrlr_sensors": [
                            {
                              "cid": "<string>",
                              "display_name": "<string>",
                              "location": "<string>",
                              "name": "<string>",
                              "status": "<string>",
                              "type": "<string>",
                              "value": "<long>"
                            },
                            {
                              "cid": "<string>",
                              "display_name": "<string>",
                              "location": "<string>",
                              "name": "<string>",
                              "status": "<string>",
                              "type": "<string>",
                              "value": "<long>"
                            }
                          ],
                          "ctrlr_side": "<string>",
                          "enc_loc_id": "<long>",
                          "exp_sas_addr": "<string>",
                          "extra_attributes": [
                            "<string>",
                            "<string>"
                          ],
                          "fan_overall_status": "<string>",
                          "hw_master_state": "<string>",
                          "hw_mship_failure": "<boolean>",
                          "identify_status": "<boolean>",
                          "port_info": [
                            {
                              "port_errors": "<string>",
                              "port_idx": "<long>",
                              "port_name": "<string>",
                              "port_status": "<string>",
                              "port_type": "<string>",
                              "remote_loc_id": "<long>",
                              "remote_port_id": "<long>",
                              "remote_sas_addr": "<string>",
                              "remote_sas_domain": "<string>",
                              "remote_sas_phy_id": "<string>"
                            },
                            {
                              "port_errors": "<string>",
                              "port_idx": "<long>",
                              "port_name": "<string>",
                              "port_status": "<string>",
                              "port_type": "<string>",
                              "remote_loc_id": "<long>",
                              "remote_port_id": "<long>",
                              "remote_sas_addr": "<string>",
                              "remote_sas_domain": "<string>",
                              "remote_sas_phy_id": "<string>"
                            }
                          ],
                          "psu_overall_status": "<string>",
                          "sw_master_state": "<string>",
                          "temp_overall_status": "<string>"
                        },
                        {
                          "cached_serial": "<string>",
                          "ctrlr_attrset_list": [
                            {
                              "cached_serial": "<string>",
                              "disk_serials": "<string>",
                              "disk_types": "<string>",
                              "hw_state": "<string>",
                              "session_serial": "<string>",
                              "sw_type": "<string>"
                            },
                            {
                              "cached_serial": "<string>",
                              "disk_serials": "<string>",
                              "disk_types": "<string>",
                              "hw_state": "<string>",
                              "session_serial": "<string>",
                              "sw_type": "<string>"
                            }
                          ],
                          "ctrlr_hw_model": "<string>",
                          "ctrlr_sensor_last_run": "<long>",
                          "ctrlr_sensors": [
                            {
                              "cid": "<string>",
                              "display_name": "<string>",
                              "location": "<string>",
                              "name": "<string>",
                              "status": "<string>",
                              "type": "<string>",
                              "value": "<long>"
                            },
                            {
                              "cid": "<string>",
                              "display_name": "<string>",
                              "location": "<string>",
                              "name": "<string>",
                              "status": "<string>",
                              "type": "<string>",
                              "value": "<long>"
                            }
                          ],
                          "ctrlr_side": "<string>",
                          "enc_loc_id": "<long>",
                          "exp_sas_addr": "<string>",
                          "extra_attributes": [
                            "<string>",
                            "<string>"
                          ],
                          "fan_overall_status": "<string>",
                          "hw_master_state": "<string>",
                          "hw_mship_failure": "<boolean>",
                          "identify_status": "<boolean>",
                          "port_info": [
                            {
                              "port_errors": "<string>",
                              "port_idx": "<long>",
                              "port_name": "<string>",
                              "port_status": "<string>",
                              "port_type": "<string>",
                              "remote_loc_id": "<long>",
                              "remote_port_id": "<long>",
                              "remote_sas_addr": "<string>",
                              "remote_sas_domain": "<string>",
                              "remote_sas_phy_id": "<string>"
                            },
                            {
                              "port_errors": "<string>",
                              "port_idx": "<long>",
                              "port_name": "<string>",
                              "port_status": "<string>",
                              "port_type": "<string>",
                              "remote_loc_id": "<long>",
                              "remote_port_id": "<long>",
                              "remote_sas_addr": "<string>",
                              "remote_sas_domain": "<string>",
                              "remote_sas_phy_id": "<string>"
                            }
                          ],
                          "psu_overall_status": "<string>",
                          "sw_master_state": "<string>",
                          "temp_overall_status": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "disk_sets": [
                        {
                          "ave_mb_ps": "<long>",
                          "ave_segment_ps": "<long>",
                          "ave_ttc": "<long>",
                          "driveset": "<long>",
                          "is_capacity_valid": "<boolean>",
                          "is_flash_shelf": "<boolean>",
                          "pause_state": "<long>",
                          "pct_completion": "<long>",
                          "raw_cache_capacity": "<long>",
                          "raw_capacity": "<long>",
                          "sw_state": "<string>",
                          "usable_cache_capacity": "<long>",
                          "usable_capacity": "<long>"
                        },
                        {
                          "ave_mb_ps": "<long>",
                          "ave_segment_ps": "<long>",
                          "ave_ttc": "<long>",
                          "driveset": "<long>",
                          "is_capacity_valid": "<boolean>",
                          "is_flash_shelf": "<boolean>",
                          "pause_state": "<long>",
                          "pct_completion": "<long>",
                          "raw_cache_capacity": "<long>",
                          "raw_capacity": "<long>",
                          "sw_state": "<string>",
                          "usable_cache_capacity": "<long>",
                          "usable_capacity": "<long>"
                        }
                      ],
                      "fan_overall_status": "<string>",
                      "generation": "<integer>",
                      "model_ext": "<string>",
                      "psu_overall_status": "<string>",
                      "resourceUri": "<string>",
                      "temp_overall_status": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/provisioning-review": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > provisioning-review"
        ],
        "summary": "Provisioning review for a storage system Nimble / Alletra 6K",
        "description": "Provisioning review for a storage system Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroups": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "hostGroupId": "<string>",
                    "hosts": [
                      {
                        "changes": {
                          "newlyCreated": "<boolean>",
                          "warning": "OTHER"
                        },
                        "initiators": [
                          {
                            "address": "<string>",
                            "changes": {
                              "newlyCreated": "<boolean>",
                              "warning": null
                            }
                          },
                          {
                            "address": "<string>",
                            "changes": {
                              "newlyCreated": "<boolean>",
                              "warning": "ADDITIONAL_INITIATORS"
                            }
                          }
                        ],
                        "name": "<string>"
                      },
                      {
                        "changes": {
                          "newlyCreated": "<boolean>",
                          "warning": "ADDITIONAL_INITIATORS"
                        },
                        "initiators": [
                          {
                            "address": "<string>",
                            "changes": {
                              "newlyCreated": "<boolean>",
                              "warning": null
                            }
                          },
                          {
                            "address": "<string>",
                            "changes": {
                              "newlyCreated": "<boolean>",
                              "warning": null
                            }
                          }
                        ],
                        "name": "<string>"
                      }
                    ]
                  },
                  {
                    "hostGroupId": "<string>",
                    "hosts": [
                      {
                        "changes": {
                          "newlyCreated": "<boolean>",
                          "warning": "OTHER"
                        },
                        "initiators": [
                          {
                            "address": "<string>",
                            "changes": {
                              "newlyCreated": "<boolean>",
                              "warning": "OTHER"
                            }
                          },
                          {
                            "address": "<string>",
                            "changes": {
                              "newlyCreated": "<boolean>",
                              "warning": null
                            }
                          }
                        ],
                        "name": "<string>"
                      },
                      {
                        "changes": {
                          "newlyCreated": "<boolean>",
                          "warning": "OTHER"
                        },
                        "initiators": [
                          {
                            "address": "<string>",
                            "changes": {
                              "newlyCreated": "<boolean>",
                              "warning": null
                            }
                          },
                          {
                            "address": "<string>",
                            "changes": {
                              "newlyCreated": "<boolean>",
                              "warning": "ADDITIONAL_INITIATORS"
                            }
                          }
                        ],
                        "name": "<string>"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/provisioning": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > provisioning"
        ],
        "summary": "Create provisioning workflow for a Nimble / Alletra 6K storage system identified by {systemId}",
        "description": "Create provisioning workflow for a Nimble / Alletra 6K storage system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "size": "<long>",
                  "count": "<integer>",
                  "agent_type": "<string>",
                  "app_uuid": "<string>",
                  "dedupe_enabled": "<boolean>",
                  "downstreamPartner": "<string>",
                  "downstreamPartnerId": "<string>",
                  "folder_id": "<string>",
                  "host_groups": [
                    {
                      "host_group_id": "<string>",
                      "lun": "<long>"
                    },
                    {
                      "host_group_id": "<string>",
                      "lun": "<long>"
                    }
                  ],
                  "limit": "<long>",
                  "limit_iops": "<long>",
                  "limit_mbps": "<long>",
                  "perfpolicy": {
                    "compression": "<boolean>",
                    "deduplication": "<boolean>",
                    "name": "<string>"
                  },
                  "perfpolicy_id": "<string>",
                  "pool_id": "<string>",
                  "protectionPolicyId": "<string>",
                  "protectionPolicySchedules": [
                    {
                      "name": "<string>",
                      "startTime": "<string>"
                    },
                    {
                      "name": "<string>",
                      "startTime": "<string>"
                    }
                  ],
                  "replicationStartTime": "<long>",
                  "volColId": "<string>",
                  "volColName": "<string>",
                  "warn_level": "<long>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/protection-templates/{protectionTemplateId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > protection-templates > {protectionTemplateId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K protection-templates identified by {protectionTemplateId}",
        "description": "Get details of Nimble / Alletra 6K protection-templates identified by {protectionTemplateId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "protectionTemplateId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "occaecat",
                  "agent_hostname": "<string>",
                  "app_cluster_name": "<string>",
                  "app_id": "<string>",
                  "app_server": "<string>",
                  "app_service_name": "<string>",
                  "app_sync": "<string>",
                  "creation_time": "<long>",
                  "id": "<string>",
                  "last_modified": "<long>",
                  "name": "<string>",
                  "vcenter_hostname": "<string>",
                  "agent_username": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "repl_priority": "<string>",
                  "resourceUri": "<string>",
                  "schedule_list": [
                    {
                      "active": "<boolean>",
                      "at_time": "<long>",
                      "days": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "downstream_partner_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "num_retain": "<long>",
                      "num_retain_replica": "<long>",
                      "period": "<long>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<long>",
                      "replicate_every": "<long>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<long>"
                    },
                    {
                      "active": "<boolean>",
                      "at_time": "<long>",
                      "days": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "downstream_partner_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "num_retain": "<long>",
                      "num_retain_replica": "<long>",
                      "period": "<long>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<long>",
                      "replicate_every": "<long>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<long>"
                    }
                  ],
                  "search_name": "<string>",
                  "type": "<string>",
                  "vcenter_username": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > protection-templates > {protectionTemplateId}"
        ],
        "summary": "Edit details of Nimble / Alletra 6K Protection-templates identified by {protectionTemplateId}",
        "description": "Edit  details of Nimble / Alletra 6K Protection-templates identified by {protectionTemplateId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "addSchedules": [
                    {
                      "name": "<string>",
                      "num_retain": "<integer>",
                      "at_time": "<integer>",
                      "days": "<string>",
                      "description": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "num_retain_replica": "<integer>",
                      "period": "<integer>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<integer>",
                      "replicate_every": "<integer>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<integer>"
                    },
                    {
                      "name": "<string>",
                      "num_retain": "<integer>",
                      "at_time": "<integer>",
                      "days": "<string>",
                      "description": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "num_retain_replica": "<integer>",
                      "period": "<integer>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<integer>",
                      "replicate_every": "<integer>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<integer>"
                    }
                  ],
                  "app_cluster_name": "<string>",
                  "app_id": "<string>",
                  "app_server": "<string>",
                  "app_service_name": "<string>",
                  "app_sync": "<string>",
                  "description": "<string>",
                  "editSchedules": [
                    {
                      "active": "<boolean>",
                      "at_time": "<long>",
                      "days": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "downstream_partner_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "num_retain": "<long>",
                      "num_retain_replica": "<long>",
                      "period": "<long>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<long>",
                      "replicate_every": "<long>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<long>"
                    },
                    {
                      "active": "<boolean>",
                      "at_time": "<long>",
                      "days": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "downstream_partner_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "num_retain": "<long>",
                      "num_retain_replica": "<long>",
                      "period": "<long>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<long>",
                      "replicate_every": "<long>",
                      "schedule_id": "<string>",
                      "schedule_name": "<string>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<long>"
                    }
                  ],
                  "name": "<string>",
                  "removeSchedules": [
                    {
                      "id": "<string>"
                    },
                    {
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "protectionTemplateId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/protection-templates/remove": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > protection-templates > remove"
        ],
        "summary": "Remove protection templates for Nimble / Alletra 6K",
        "description": "Remove protection templates for Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "protectionTemplates": [
                    {
                      "protectionTemplateId": "<string>"
                    },
                    {
                      "protectionTemplateId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/protection-templates": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > protection-templates"
        ],
        "summary": "Get all protection-templates details by Nimble / Alletra 6K",
        "description": "Get all protection-templates details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Protection Template  by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort Protection Template  resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "agent_hostname": "<string>",
                      "app_cluster_name": "<string>",
                      "app_id": "<string>",
                      "app_server": "<string>",
                      "app_service_name": "<string>",
                      "app_sync": "<string>",
                      "creation_time": "<long>",
                      "id": "<string>",
                      "last_modified": "<long>",
                      "name": "<string>",
                      "vcenter_hostname": "<string>",
                      "agent_username": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "repl_priority": "<string>",
                      "resourceUri": "<string>",
                      "schedule_list": [
                        {
                          "active": "<boolean>",
                          "at_time": "<long>",
                          "days": "<string>",
                          "disable_appsync": "<boolean>",
                          "downstream_partner": "<string>",
                          "downstream_partner_id": "<string>",
                          "downstream_partner_name": "<string>",
                          "id": "<string>",
                          "name": "<string>",
                          "num_retain": "<long>",
                          "num_retain_replica": "<long>",
                          "period": "<long>",
                          "period_unit": "<string>",
                          "repl_alert_thres": "<long>",
                          "replicate_every": "<long>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "schedule_type": "<string>",
                          "skip_db_consistency_check": "<boolean>",
                          "snap_verify": "<boolean>",
                          "until_time": "<long>"
                        },
                        {
                          "active": "<boolean>",
                          "at_time": "<long>",
                          "days": "<string>",
                          "disable_appsync": "<boolean>",
                          "downstream_partner": "<string>",
                          "downstream_partner_id": "<string>",
                          "downstream_partner_name": "<string>",
                          "id": "<string>",
                          "name": "<string>",
                          "num_retain": "<long>",
                          "num_retain_replica": "<long>",
                          "period": "<long>",
                          "period_unit": "<string>",
                          "repl_alert_thres": "<long>",
                          "replicate_every": "<long>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "schedule_type": "<string>",
                          "skip_db_consistency_check": "<boolean>",
                          "snap_verify": "<boolean>",
                          "until_time": "<long>"
                        }
                      ],
                      "search_name": "<string>",
                      "type": "<string>",
                      "vcenter_username": "<string>"
                    },
                    {
                      "agent_hostname": "<string>",
                      "app_cluster_name": "<string>",
                      "app_id": "<string>",
                      "app_server": "<string>",
                      "app_service_name": "<string>",
                      "app_sync": "<string>",
                      "creation_time": "<long>",
                      "id": "<string>",
                      "last_modified": "<long>",
                      "name": "<string>",
                      "vcenter_hostname": "<string>",
                      "agent_username": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "repl_priority": "<string>",
                      "resourceUri": "<string>",
                      "schedule_list": [
                        {
                          "active": "<boolean>",
                          "at_time": "<long>",
                          "days": "<string>",
                          "disable_appsync": "<boolean>",
                          "downstream_partner": "<string>",
                          "downstream_partner_id": "<string>",
                          "downstream_partner_name": "<string>",
                          "id": "<string>",
                          "name": "<string>",
                          "num_retain": "<long>",
                          "num_retain_replica": "<long>",
                          "period": "<long>",
                          "period_unit": "<string>",
                          "repl_alert_thres": "<long>",
                          "replicate_every": "<long>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "schedule_type": "<string>",
                          "skip_db_consistency_check": "<boolean>",
                          "snap_verify": "<boolean>",
                          "until_time": "<long>"
                        },
                        {
                          "active": "<boolean>",
                          "at_time": "<long>",
                          "days": "<string>",
                          "disable_appsync": "<boolean>",
                          "downstream_partner": "<string>",
                          "downstream_partner_id": "<string>",
                          "downstream_partner_name": "<string>",
                          "id": "<string>",
                          "name": "<string>",
                          "num_retain": "<long>",
                          "num_retain_replica": "<long>",
                          "period": "<long>",
                          "period_unit": "<string>",
                          "repl_alert_thres": "<long>",
                          "replicate_every": "<long>",
                          "schedule_id": "<string>",
                          "schedule_name": "<string>",
                          "schedule_type": "<string>",
                          "skip_db_consistency_check": "<boolean>",
                          "snap_verify": "<boolean>",
                          "until_time": "<long>"
                        }
                      ],
                      "search_name": "<string>",
                      "type": "<string>",
                      "vcenter_username": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > protection-templates"
        ],
        "summary": "Create protection template on Nimble / Alletra 6K in system identified by {systemId}",
        "description": "Create protection template on Nimble / Alletra 6K in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "app_cluster_name": "<string>",
                  "app_id": "<string>",
                  "app_server": "<string>",
                  "app_service_name": "<string>",
                  "app_sync": "<string>",
                  "description": "<string>",
                  "name": "<string>",
                  "schedules": [
                    {
                      "name": "<string>",
                      "num_retain": "<integer>",
                      "at_time": "<integer>",
                      "days": "<string>",
                      "description": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "num_retain_replica": "<integer>",
                      "period": "<integer>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<integer>",
                      "replicate_every": "<integer>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<integer>"
                    },
                    {
                      "name": "<string>",
                      "num_retain": "<integer>",
                      "at_time": "<integer>",
                      "days": "<string>",
                      "description": "<string>",
                      "disable_appsync": "<boolean>",
                      "downstream_partner": "<string>",
                      "downstream_partner_id": "<string>",
                      "num_retain_replica": "<integer>",
                      "period": "<integer>",
                      "period_unit": "<string>",
                      "repl_alert_thres": "<integer>",
                      "replicate_every": "<integer>",
                      "schedule_type": "<string>",
                      "skip_db_consistency_check": "<boolean>",
                      "snap_verify": "<boolean>",
                      "until_time": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/ports/{portId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > ports > {portId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K Port identified by {portId}. Fibre_channel_interfaces attributes will be shown for Fibre_channel_interface ports. Network_interfaces attributes will be shown for Network_interface ports.",
        "description": "Get details of Nimble / Alletra 6K Port identified by {portId}.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "portId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "array_id": "<string>",
                  "array_name_or_serial": "<string>",
                  "bus_location": "<string>",
                  "controller_id": "<string>",
                  "controller_name": "<string>",
                  "fabric_info": {
                    "fabric_switch_name": "<string>",
                    "fabric_switch_port": "<long>",
                    "fabric_switch_wwnn": "<string>",
                    "fabric_switch_wwpn": "<string>",
                    "fabric_wwn": "<string>",
                    "fc_id": "<string>",
                    "logged_in": "<boolean>"
                  },
                  "fc_port_id": "<string>",
                  "fc_port_name": "<string>",
                  "firmware_version": "<string>",
                  "id": "<string>",
                  "ip_list": {
                    "ip": "<string>",
                    "vlan_id": "<long>"
                  },
                  "is_present": "<boolean>",
                  "link_info": {
                    "link_speed": "<string>",
                    "link_status": "<string>",
                    "max_link_speed": "<string>",
                    "operational_status": "<string>"
                  },
                  "link_speed": "<string>",
                  "link_status": "<string>",
                  "logical_port_number": "<long>",
                  "mac": "<string>",
                  "max_link_speed": "<string>",
                  "mtu": "<long>",
                  "name": "<string>",
                  "nic_type": "<string>",
                  "online": "<boolean>",
                  "orientation": "<string>",
                  "partial_response_ok": "<boolean>",
                  "peerzone": "<string>",
                  "port": "<long>",
                  "slot": "<long>",
                  "wwnn": "<string>",
                  "wwpn": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > ports > {portId}"
        ],
        "summary": "Edit Nimble FC Port of Nimble / Alletra 6K",
        "description": "Edit Nimble FC Port of Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "online": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "portId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/ports": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > ports"
        ],
        "summary": "Get all ports details of Nimble / Alletra 6K",
        "description": "Get all ports details of Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter fibre channel interface ports by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort fibre channel interface ports resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "fibre_channel_interface": {
                    "items": [
                      {
                        "controller_name": "<string>",
                        "fc_port_id": "<string>",
                        "id": "<string>",
                        "name": "<string>",
                        "wwnn": "<string>",
                        "wwpn": "<string>",
                        "array_name_or_serial": "<string>",
                        "bus_location": "<string>",
                        "consoleUri": "<string>",
                        "customerId": "<string>",
                        "fabric_info": {
                          "fabric_switch_name": "<string>",
                          "fabric_switch_port": "<long>",
                          "fabric_switch_wwnn": "<string>",
                          "fabric_switch_wwpn": "<string>",
                          "fabric_wwn": "<string>",
                          "fc_id": "<string>",
                          "logged_in": "<boolean>"
                        },
                        "fc_port_name": "<string>",
                        "firmware_version": "<string>",
                        "generation": "<integer>",
                        "link_info": {
                          "link_speed": "<string>",
                          "link_status": "<string>",
                          "max_link_speed": "<string>",
                          "operational_status": "<string>"
                        },
                        "logical_port_number": "<long>",
                        "online": "<boolean>",
                        "orientation": "<string>",
                        "partial_response_ok": "<boolean>",
                        "peerzone": "<string>",
                        "port": "<long>",
                        "slot": "<long>",
                        "type": "<string>"
                      },
                      {
                        "controller_name": "<string>",
                        "fc_port_id": "<string>",
                        "id": "<string>",
                        "name": "<string>",
                        "wwnn": "<string>",
                        "wwpn": "<string>",
                        "array_name_or_serial": "<string>",
                        "bus_location": "<string>",
                        "consoleUri": "<string>",
                        "customerId": "<string>",
                        "fabric_info": {
                          "fabric_switch_name": "<string>",
                          "fabric_switch_port": "<long>",
                          "fabric_switch_wwnn": "<string>",
                          "fabric_switch_wwpn": "<string>",
                          "fabric_wwn": "<string>",
                          "fc_id": "<string>",
                          "logged_in": "<boolean>"
                        },
                        "fc_port_name": "<string>",
                        "firmware_version": "<string>",
                        "generation": "<integer>",
                        "link_info": {
                          "link_speed": "<string>",
                          "link_status": "<string>",
                          "max_link_speed": "<string>",
                          "operational_status": "<string>"
                        },
                        "logical_port_number": "<long>",
                        "online": "<boolean>",
                        "orientation": "<string>",
                        "partial_response_ok": "<boolean>",
                        "peerzone": "<string>",
                        "port": "<long>",
                        "slot": "<long>",
                        "type": "<string>"
                      }
                    ],
                    "total": "<long>"
                  },
                  "network_interface": {
                    "items": [
                      {
                        "array_id": "<string>",
                        "controller_name": "<string>",
                        "id": "<string>",
                        "name": "<string>",
                        "array_name_or_serial": "<string>",
                        "controller_id": "<string>",
                        "ip_list": {
                          "ip": "<string>",
                          "vlan_id": "<long>"
                        },
                        "is_present": "<boolean>",
                        "link_speed": "<string>",
                        "link_status": "<string>",
                        "mac": "<string>",
                        "max_link_speed": "<string>",
                        "mtu": "<long>",
                        "nic_type": "<string>",
                        "partial_response_ok": "<boolean>",
                        "port": "<long>",
                        "slot": "<long>"
                      },
                      {
                        "array_id": "<string>",
                        "controller_name": "<string>",
                        "id": "<string>",
                        "name": "<string>",
                        "array_name_or_serial": "<string>",
                        "controller_id": "<string>",
                        "ip_list": {
                          "ip": "<string>",
                          "vlan_id": "<long>"
                        },
                        "is_present": "<boolean>",
                        "link_speed": "<string>",
                        "link_status": "<string>",
                        "mac": "<string>",
                        "max_link_speed": "<string>",
                        "mtu": "<long>",
                        "nic_type": "<string>",
                        "partial_response_ok": "<boolean>",
                        "port": "<long>",
                        "slot": "<long>"
                      }
                    ],
                    "total": "<long>"
                  },
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/performance-policies/{performancePolicyId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > performance-policies > {performancePolicyId}"
        ],
        "summary": "Remove performance-policies identified by {performancePolicyId} from Nimble / Alletra 6K",
        "description": "Remove performance-policies identified by {performancePolicyId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "performancePolicyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > performance-policies > {performancePolicyId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K performance-policy identified by {performancePolicyId}",
        "description": "Get details of Nimble / Alletra 6K performance-policy identified by {performancePolicyId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "performancePolicyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "pariatur incididunt",
                  "app_category": "<string>",
                  "cache": "<boolean>",
                  "cache_policy": "<string>",
                  "compress": "<boolean>",
                  "creation_time": "<long>",
                  "dedupe_enabled": "<boolean>",
                  "id": "<string>",
                  "last_modified": "<long>",
                  "name": "<string>",
                  "predefined": "<boolean>",
                  "space_policy": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "block_size": "<long>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "dedupe_override_pools": [
                    {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "description": "<string>",
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "resourceUri": "<string>",
                  "search_name": "<string>",
                  "type": "<string>",
                  "volume_count": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > performance-policies > {performancePolicyId}"
        ],
        "summary": "Edit details of Nimble / Alletra 6K performance policy identified by {performancePolicyId}",
        "description": "Edit details of Nimble / Alletra 6K performance policy identified by {performancePolicyId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "app_category": "<string>",
                  "cache": "<boolean>",
                  "cache_policy": "<string>",
                  "compress": "<boolean>",
                  "dedupe_enabled": "<boolean>",
                  "description": "<string>",
                  "name": "<string>",
                  "space_policy": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "performancePolicyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/performance-policies": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > performance-policies"
        ],
        "summary": "Get all performance-policies details by Nimble / Alletra 6K",
        "description": "Get all performance-policies details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter performance Policy by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort performance Policy resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "app_category": "<string>",
                      "cache": "<boolean>",
                      "cache_policy": "<string>",
                      "compress": "<boolean>",
                      "creation_time": "<long>",
                      "dedupe_enabled": "<boolean>",
                      "id": "<string>",
                      "last_modified": "<long>",
                      "name": "<string>",
                      "predefined": "<boolean>",
                      "space_policy": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "block_size": "<long>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "dedupe_override_pools": [
                        {
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "description": "<string>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "resourceUri": "<string>",
                      "search_name": "<string>",
                      "type": "<string>",
                      "volume_count": "<long>"
                    },
                    {
                      "app_category": "<string>",
                      "cache": "<boolean>",
                      "cache_policy": "<string>",
                      "compress": "<boolean>",
                      "creation_time": "<long>",
                      "dedupe_enabled": "<boolean>",
                      "id": "<string>",
                      "last_modified": "<long>",
                      "name": "<string>",
                      "predefined": "<boolean>",
                      "space_policy": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "block_size": "<long>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "dedupe_override_pools": [
                        {
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "description": "<string>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "resourceUri": "<string>",
                      "search_name": "<string>",
                      "type": "<string>",
                      "volume_count": "<long>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > performance-policies"
        ],
        "summary": "Create Nimble / Alletra 6K performance policy in a system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K performance policy in a system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "app_category": "<string>",
                  "block_size": "<long>",
                  "cache": "<boolean>",
                  "cache_policy": "<string>",
                  "compress": "<boolean>",
                  "dedupe_enabled": "<boolean>",
                  "description": "<string>",
                  "space_policy": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/performance-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > performance-history"
        ],
        "summary": "Get performance trend data for a storage system Nimble / Alletra 6K",
        "description": "Get performance trend data for a storage system Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "iops_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  },
                  "latency_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  },
                  "requestURI": "<string>",
                  "throughput_metrics_data": {
                    "count": "<integer>",
                    "series_data": [
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      },
                      {
                        "read_value": "<number>",
                        "timestampms": "<long>",
                        "total_value": "<number>",
                        "write_value": "<number>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/network-settings/{networkSettingId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > network-settings > {networkSettingId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K network setting identified by {networkSettingId}",
        "description": "Get details of Nimble / Alletra 6K network setting identified by {networkSettingId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "networkSettingId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "qui et c",
                  "id": "<string>",
                  "name": "<string>",
                  "role": "<string>",
                  "active_since": "<long>",
                  "array_list": [
                    {
                      "ctrlr_a_support_ip": "<string>",
                      "ctrlr_b_support_ip": "<string>",
                      "member_gid": "<long>",
                      "name": "<string>",
                      "nic_list": [
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        },
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        }
                      ]
                    },
                    {
                      "ctrlr_a_support_ip": "<string>",
                      "ctrlr_b_support_ip": "<string>",
                      "member_gid": "<long>",
                      "name": "<string>",
                      "nic_list": [
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        },
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        }
                      ]
                    }
                  ],
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "creation_time": "<long>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "group_leader_array": "<string>",
                  "iscsi_automatic_connection_method": "<boolean>",
                  "iscsi_connection_rebalancing": "<boolean>",
                  "last_active": "<long>",
                  "last_modified": "<long>",
                  "mgmt_ip": "<string>",
                  "resourceUri": "<string>",
                  "route_list": [
                    {
                      "gateway": "<string>",
                      "tgt_netmask": "<string>",
                      "tgt_network": "<string>"
                    },
                    {
                      "gateway": "<string>",
                      "tgt_netmask": "<string>",
                      "tgt_network": "<string>"
                    }
                  ],
                  "secondary_mgmt_ip": "<string>",
                  "subnet_list": [
                    {
                      "allow_group": "<boolean>",
                      "allow_iscsi": "<boolean>",
                      "discovery_ip": "<string>",
                      "failover": "<boolean>",
                      "failover_enable_time": "<long>",
                      "label": "<string>",
                      "mtu": "<long>",
                      "netmask": "<string>",
                      "network": "<string>",
                      "netzone_type": "<string>",
                      "type": "<string>",
                      "vlan_id": "<long>"
                    },
                    {
                      "allow_group": "<boolean>",
                      "allow_iscsi": "<boolean>",
                      "discovery_ip": "<string>",
                      "failover": "<boolean>",
                      "failover_enable_time": "<long>",
                      "label": "<string>",
                      "mtu": "<long>",
                      "netmask": "<string>",
                      "network": "<string>",
                      "netzone_type": "<string>",
                      "type": "<string>",
                      "vlan_id": "<long>"
                    }
                  ],
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > network-settings > {networkSettingId}"
        ],
        "summary": "Edit Nimble / Alletra 6K network setting identified by {networkSettingId}",
        "description": "Edit Nimble / Alletra 6K network setting identified by {networkSettingId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "array_list": [
                    {
                      "ctrlr_a_support_ip": "<string>",
                      "ctrlr_b_support_ip": "<string>",
                      "name": "<string>",
                      "nic_list": [
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        },
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        }
                      ]
                    },
                    {
                      "ctrlr_a_support_ip": "<string>",
                      "ctrlr_b_support_ip": "<string>",
                      "name": "<string>",
                      "nic_list": [
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        },
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        }
                      ]
                    }
                  ],
                  "iscsi_automatic_connection_method": "<boolean>",
                  "iscsi_connection_rebalancing": "<boolean>",
                  "mgmt_ip": "<string>",
                  "name": "<string>",
                  "route_list": [
                    {
                      "gateway": "<string>",
                      "tgt_netmask": "<string>",
                      "tgt_network": "<string>"
                    },
                    {
                      "gateway": "<string>",
                      "tgt_netmask": "<string>",
                      "tgt_network": "<string>"
                    }
                  ],
                  "secondary_mgmt_ip": "<string>",
                  "subnet_list": [
                    {
                      "allow_group": "<boolean>",
                      "allow_iscsi": "<boolean>",
                      "discovery_ip": "<string>",
                      "failover": "<boolean>",
                      "failover_enable_time": "<long>",
                      "label": "<string>",
                      "mtu": "<long>",
                      "netmask": "<string>",
                      "network": "<string>",
                      "netzone_type": "<string>",
                      "type": "<string>",
                      "vlan_id": "<long>"
                    },
                    {
                      "allow_group": "<boolean>",
                      "allow_iscsi": "<boolean>",
                      "discovery_ip": "<string>",
                      "failover": "<boolean>",
                      "failover_enable_time": "<long>",
                      "label": "<string>",
                      "mtu": "<long>",
                      "netmask": "<string>",
                      "network": "<string>",
                      "netzone_type": "<string>",
                      "type": "<string>",
                      "vlan_id": "<long>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "networkSettingId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/network-settings": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > network-settings"
        ],
        "summary": "Get all network settings details by Nimble / Alletra 6K",
        "description": "Get all network settings details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter network settings by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort network settings resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "role": "<string>",
                      "active_since": "<long>",
                      "array_list": [
                        {
                          "ctrlr_a_support_ip": "<string>",
                          "ctrlr_b_support_ip": "<string>",
                          "member_gid": "<long>",
                          "name": "<string>",
                          "nic_list": [
                            {
                              "data_ip": "<string>",
                              "name": "<string>",
                              "subnet_label": "<string>",
                              "tagged": "<boolean>"
                            },
                            {
                              "data_ip": "<string>",
                              "name": "<string>",
                              "subnet_label": "<string>",
                              "tagged": "<boolean>"
                            }
                          ]
                        },
                        {
                          "ctrlr_a_support_ip": "<string>",
                          "ctrlr_b_support_ip": "<string>",
                          "member_gid": "<long>",
                          "name": "<string>",
                          "nic_list": [
                            {
                              "data_ip": "<string>",
                              "name": "<string>",
                              "subnet_label": "<string>",
                              "tagged": "<boolean>"
                            },
                            {
                              "data_ip": "<string>",
                              "name": "<string>",
                              "subnet_label": "<string>",
                              "tagged": "<boolean>"
                            }
                          ]
                        }
                      ],
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "group_leader_array": "<string>",
                      "iscsi_automatic_connection_method": "<boolean>",
                      "iscsi_connection_rebalancing": "<boolean>",
                      "last_active": "<long>",
                      "last_modified": "<long>",
                      "mgmt_ip": "<string>",
                      "resourceUri": "<string>",
                      "route_list": [
                        {
                          "gateway": "<string>",
                          "tgt_netmask": "<string>",
                          "tgt_network": "<string>"
                        },
                        {
                          "gateway": "<string>",
                          "tgt_netmask": "<string>",
                          "tgt_network": "<string>"
                        }
                      ],
                      "secondary_mgmt_ip": "<string>",
                      "subnet_list": [
                        {
                          "allow_group": "<boolean>",
                          "allow_iscsi": "<boolean>",
                          "discovery_ip": "<string>",
                          "failover": "<boolean>",
                          "failover_enable_time": "<long>",
                          "label": "<string>",
                          "mtu": "<long>",
                          "netmask": "<string>",
                          "network": "<string>",
                          "netzone_type": "<string>",
                          "type": "<string>",
                          "vlan_id": "<long>"
                        },
                        {
                          "allow_group": "<boolean>",
                          "allow_iscsi": "<boolean>",
                          "discovery_ip": "<string>",
                          "failover": "<boolean>",
                          "failover_enable_time": "<long>",
                          "label": "<string>",
                          "mtu": "<long>",
                          "netmask": "<string>",
                          "network": "<string>",
                          "netzone_type": "<string>",
                          "type": "<string>",
                          "vlan_id": "<long>"
                        }
                      ],
                      "type": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "role": "<string>",
                      "active_since": "<long>",
                      "array_list": [
                        {
                          "ctrlr_a_support_ip": "<string>",
                          "ctrlr_b_support_ip": "<string>",
                          "member_gid": "<long>",
                          "name": "<string>",
                          "nic_list": [
                            {
                              "data_ip": "<string>",
                              "name": "<string>",
                              "subnet_label": "<string>",
                              "tagged": "<boolean>"
                            },
                            {
                              "data_ip": "<string>",
                              "name": "<string>",
                              "subnet_label": "<string>",
                              "tagged": "<boolean>"
                            }
                          ]
                        },
                        {
                          "ctrlr_a_support_ip": "<string>",
                          "ctrlr_b_support_ip": "<string>",
                          "member_gid": "<long>",
                          "name": "<string>",
                          "nic_list": [
                            {
                              "data_ip": "<string>",
                              "name": "<string>",
                              "subnet_label": "<string>",
                              "tagged": "<boolean>"
                            },
                            {
                              "data_ip": "<string>",
                              "name": "<string>",
                              "subnet_label": "<string>",
                              "tagged": "<boolean>"
                            }
                          ]
                        }
                      ],
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "group_leader_array": "<string>",
                      "iscsi_automatic_connection_method": "<boolean>",
                      "iscsi_connection_rebalancing": "<boolean>",
                      "last_active": "<long>",
                      "last_modified": "<long>",
                      "mgmt_ip": "<string>",
                      "resourceUri": "<string>",
                      "route_list": [
                        {
                          "gateway": "<string>",
                          "tgt_netmask": "<string>",
                          "tgt_network": "<string>"
                        },
                        {
                          "gateway": "<string>",
                          "tgt_netmask": "<string>",
                          "tgt_network": "<string>"
                        }
                      ],
                      "secondary_mgmt_ip": "<string>",
                      "subnet_list": [
                        {
                          "allow_group": "<boolean>",
                          "allow_iscsi": "<boolean>",
                          "discovery_ip": "<string>",
                          "failover": "<boolean>",
                          "failover_enable_time": "<long>",
                          "label": "<string>",
                          "mtu": "<long>",
                          "netmask": "<string>",
                          "network": "<string>",
                          "netzone_type": "<string>",
                          "type": "<string>",
                          "vlan_id": "<long>"
                        },
                        {
                          "allow_group": "<boolean>",
                          "allow_iscsi": "<boolean>",
                          "discovery_ip": "<string>",
                          "failover": "<boolean>",
                          "failover_enable_time": "<long>",
                          "label": "<string>",
                          "mtu": "<long>",
                          "netmask": "<string>",
                          "network": "<string>",
                          "netzone_type": "<string>",
                          "type": "<string>",
                          "vlan_id": "<long>"
                        }
                      ],
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/network-interfaces/{networkInterfaceId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > network-interfaces > {networkInterfaceId}"
        ],
        "summary": "Get all network interfaces details by Nimble / Alletra 6K identified  by {networkInterfaceId}",
        "description": "Get all network interfaces details by Nimble / Alletra 6K identified by {networkInterfaceId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "networkInterfaceId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "dolor culpa consectetur fugiat do",
                  "array_id": "<string>",
                  "array_name_or_serial": "<string>",
                  "id": "<string>",
                  "mac": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "controller_id": "<string>",
                  "controller_name": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "ip_list": [
                    {
                      "ip": "<string>",
                      "vlan_id": "<integer>"
                    },
                    {
                      "ip": "<string>",
                      "vlan_id": "<integer>"
                    }
                  ],
                  "is_present": "<boolean>",
                  "link_speed": "<string>",
                  "link_status": "<string>",
                  "max_link_speed": "<string>",
                  "mtu": "<integer>",
                  "name": "<string>",
                  "nic_type": "<string>",
                  "port": "<integer>",
                  "resourceUri": "<string>",
                  "slot": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/network-interfaces": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > network-interfaces"
        ],
        "summary": "Get all network interfaces details by Nimble / Alletra 6K",
        "description": "Get all network interfaces details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Network Interface by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort Network Interface resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "array_id": "<string>",
                      "array_name_or_serial": "<string>",
                      "id": "<string>",
                      "mac": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "controller_id": "<string>",
                      "controller_name": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "ip_list": [
                        {
                          "ip": "<string>",
                          "vlan_id": "<integer>"
                        },
                        {
                          "ip": "<string>",
                          "vlan_id": "<integer>"
                        }
                      ],
                      "is_present": "<boolean>",
                      "link_speed": "<string>",
                      "link_status": "<string>",
                      "max_link_speed": "<string>",
                      "mtu": "<integer>",
                      "name": "<string>",
                      "nic_type": "<string>",
                      "port": "<integer>",
                      "resourceUri": "<string>",
                      "slot": "<integer>",
                      "type": "<string>"
                    },
                    {
                      "array_id": "<string>",
                      "array_name_or_serial": "<string>",
                      "id": "<string>",
                      "mac": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "controller_id": "<string>",
                      "controller_name": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "ip_list": [
                        {
                          "ip": "<string>",
                          "vlan_id": "<integer>"
                        },
                        {
                          "ip": "<string>",
                          "vlan_id": "<integer>"
                        }
                      ],
                      "is_present": "<boolean>",
                      "link_speed": "<string>",
                      "link_status": "<string>",
                      "max_link_speed": "<string>",
                      "mtu": "<integer>",
                      "name": "<string>",
                      "nic_type": "<string>",
                      "port": "<integer>",
                      "resourceUri": "<string>",
                      "slot": "<integer>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/mail-settings": {
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > mail-settings"
        ],
        "summary": "Edit Nimble Mail Settings of Nimble / Alletra 6K",
        "description": "Edit Nimble Mail Settings of Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "smtp_port": "<long>",
                  "smtp_server": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/host-initiators/{hostInitiatorId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-initiators > {hostInitiatorId}"
        ],
        "summary": "Remove Nimble Initiator identified by {hostInitiatorId} from Nimble / Alletra 6K",
        "description": "Remove Nimble Initiator identified by {hostInitiatorId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "hostInitiatorId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-initiators > {hostInitiatorId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorId}",
        "description": "Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "hostInitiatorId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "access_protocol": "<string>",
                  "alias": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "chapuser_id": "<string>",
                  "creation_time": "<long>",
                  "id": "<string>",
                  "initiator_group_id": "<string>",
                  "initiator_group_name": "<string>",
                  "ip_address": "<string>",
                  "iqn": "<string>",
                  "label": "<string>",
                  "last_modified": "<long>",
                  "override_existing_alias": "<boolean>",
                  "requestUri": "<string>",
                  "wwpn": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/host-initiators": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-initiators"
        ],
        "summary": "Get all nimble initiators details by Nimble / Alletra 6K",
        "description": "Get all nimble initiators details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter initiators by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort initiators resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "access_protocol": "<string>",
                      "alias": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "chapuser_id": "<string>",
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "initiator_group_id": "<string>",
                      "initiator_group_name": "<string>",
                      "ip_address": "<string>",
                      "iqn": "<string>",
                      "label": "<string>",
                      "last_modified": "<long>",
                      "override_existing_alias": "<boolean>",
                      "resourceUri": "<string>",
                      "sc_HostInitiatorId": "<string>",
                      "type": "<string>",
                      "wwpn": "<string>"
                    },
                    {
                      "access_protocol": "<string>",
                      "alias": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "chapuser_id": "<string>",
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "initiator_group_id": "<string>",
                      "initiator_group_name": "<string>",
                      "ip_address": "<string>",
                      "iqn": "<string>",
                      "label": "<string>",
                      "last_modified": "<long>",
                      "override_existing_alias": "<boolean>",
                      "resourceUri": "<string>",
                      "sc_HostInitiatorId": "<string>",
                      "type": "<string>",
                      "wwpn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-initiators"
        ],
        "summary": "Create Nimble / Alletra 6K nimble initiator in system identified by {systemId}",
        "description": "Get all nimble initiators details by Nimble / Alletra 6K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "access_protocol": "<string>",
                  "initiator_group_id": "<string>",
                  "alias": "<string>",
                  "chapuser_id": "<string>",
                  "ip_address": "<string>",
                  "iqn": "<string>",
                  "label": "<string>",
                  "override_existing_alias": "<boolean>",
                  "wwpn": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/host-groups/{hostInitiatorGroupId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-groups > {hostInitiatorGroupId}"
        ],
        "summary": "Remove initiator-groups identified by {hostInitiatorGroupId} from Nimble / Alletra 6K",
        "description": "Remove initiator-groups identified by {hostInitiatorGroupId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "hostInitiatorGroupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-groups > {hostInitiatorGroupId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorGroupId}",
        "description": "Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorGroupId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "hostInitiatorGroupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "sed",
                  "access_protocol": "<string>",
                  "app_uuid": "<string>",
                  "host_type": "<string>",
                  "id": "<string>",
                  "name": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "creation_time": "<long>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "fc_initiators": [
                    {
                      "alias": "<string>",
                      "id": "<string>",
                      "wwpn": "<string>"
                    },
                    {
                      "alias": "<string>",
                      "id": "<string>",
                      "wwpn": "<string>"
                    }
                  ],
                  "fc_sessions": [
                    {
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "initiator_info": {
                        "initiator_alias": "<string>",
                        "initiator_fcid": "<string>",
                        "initiator_switch_name": "<string>",
                        "initiator_switch_port": "<string>",
                        "initiator_symbolic_nodename": "<string>",
                        "initiator_symbolic_portname": "<string>",
                        "initiator_wwpn": "<string>"
                      },
                      "resourceUri": "<string>",
                      "target_info": {
                        "target_fcid": "<string>",
                        "target_port_array_name": "<string>",
                        "target_port_ctrlr_name": "<string>",
                        "target_port_interface_name": "<string>",
                        "target_wwnn": "<string>",
                        "target_wwpn": "<string>"
                      },
                      "type": "<string>"
                    },
                    {
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "initiator_info": {
                        "initiator_alias": "<string>",
                        "initiator_fcid": "<string>",
                        "initiator_switch_name": "<string>",
                        "initiator_switch_port": "<string>",
                        "initiator_symbolic_nodename": "<string>",
                        "initiator_symbolic_portname": "<string>",
                        "initiator_wwpn": "<string>"
                      },
                      "resourceUri": "<string>",
                      "target_info": {
                        "target_fcid": "<string>",
                        "target_port_array_name": "<string>",
                        "target_port_ctrlr_name": "<string>",
                        "target_port_interface_name": "<string>",
                        "target_wwnn": "<string>",
                        "target_wwpn": "<string>"
                      },
                      "type": "<string>"
                    }
                  ],
                  "fc_tdz_ports": [
                    {
                      "array_name": "<string>",
                      "fc_name": "<string>"
                    },
                    {
                      "array_name": "<string>",
                      "fc_name": "<string>"
                    }
                  ],
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "iscsi_initiators": [
                    {
                      "id": "<string>",
                      "ip_address": "<string>",
                      "iqn": "<string>",
                      "label": "<string>"
                    },
                    {
                      "id": "<string>",
                      "ip_address": "<string>",
                      "iqn": "<string>",
                      "label": "<string>"
                    }
                  ],
                  "last_modified": "<long>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "num_connections": "<long>",
                  "resourceUri": "<string>",
                  "sc_HostId": "<string>",
                  "search_name": "<string>",
                  "target_subnets": [
                    {
                      "id": "<string>",
                      "label": "<string>"
                    },
                    {
                      "id": "<string>",
                      "label": "<string>"
                    }
                  ],
                  "type": "<string>",
                  "volume_count": "<long>",
                  "volume_list": [
                    {
                      "app_category": "<string>",
                      "full_name": "<string>",
                      "id": "<string>",
                      "lun": "<long>",
                      "name": "<string>"
                    },
                    {
                      "app_category": "<string>",
                      "full_name": "<string>",
                      "id": "<string>",
                      "lun": "<long>",
                      "name": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-groups > {hostInitiatorGroupId}"
        ],
        "summary": "Update initiator-groups identified by {hostInitiatorGroupId}",
        "description": "Update initiator-groups identified by {hostInitiatorGroupId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "app_uuid": "<string>",
                  "description": "<string>",
                  "fc_initiators": [
                    {
                      "alias": "<string>",
                      "id": "<string>",
                      "wwpn": "<string>"
                    },
                    {
                      "alias": "<string>",
                      "id": "<string>",
                      "wwpn": "<string>"
                    }
                  ],
                  "fc_tdz_ports": [
                    {
                      "array_name": "<string>",
                      "fc_name": "<string>"
                    },
                    {
                      "array_name": "<string>",
                      "fc_name": "<string>"
                    }
                  ],
                  "host_type": "<string>",
                  "iscsi_initiators": [
                    {
                      "id": "<string>",
                      "ip_address": "<string>",
                      "iqn": "<string>",
                      "label": "<string>"
                    },
                    {
                      "id": "<string>",
                      "ip_address": "<string>",
                      "iqn": "<string>",
                      "label": "<string>"
                    }
                  ],
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "name": "<string>",
                  "target_subnets": [
                    {
                      "id": "<string>",
                      "label": "<string>"
                    },
                    {
                      "id": "<string>",
                      "label": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "hostInitiatorGroupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/host-groups": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-groups"
        ],
        "summary": "Get all nimble host initiator groups details by Nimble / Alletra 6K",
        "description": "Get all nimble host initiator groups details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter initiator groups by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort initiator groups resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "access_protocol": "<string>",
                      "app_uuid": "<string>",
                      "host_type": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "fc_initiators": [
                        {
                          "alias": "<string>",
                          "id": "<string>",
                          "wwpn": "<string>"
                        },
                        {
                          "alias": "<string>",
                          "id": "<string>",
                          "wwpn": "<string>"
                        }
                      ],
                      "fc_sessions": [
                        {
                          "associated_links": [
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            },
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            }
                          ],
                          "consoleUri": "<string>",
                          "customerId": "<string>",
                          "generation": "<integer>",
                          "initiator_info": {
                            "initiator_alias": "<string>",
                            "initiator_fcid": "<string>",
                            "initiator_switch_name": "<string>",
                            "initiator_switch_port": "<string>",
                            "initiator_symbolic_nodename": "<string>",
                            "initiator_symbolic_portname": "<string>",
                            "initiator_wwpn": "<string>"
                          },
                          "resourceUri": "<string>",
                          "target_info": {
                            "target_fcid": "<string>",
                            "target_port_array_name": "<string>",
                            "target_port_ctrlr_name": "<string>",
                            "target_port_interface_name": "<string>",
                            "target_wwnn": "<string>",
                            "target_wwpn": "<string>"
                          },
                          "type": "<string>"
                        },
                        {
                          "associated_links": [
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            },
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            }
                          ],
                          "consoleUri": "<string>",
                          "customerId": "<string>",
                          "generation": "<integer>",
                          "initiator_info": {
                            "initiator_alias": "<string>",
                            "initiator_fcid": "<string>",
                            "initiator_switch_name": "<string>",
                            "initiator_switch_port": "<string>",
                            "initiator_symbolic_nodename": "<string>",
                            "initiator_symbolic_portname": "<string>",
                            "initiator_wwpn": "<string>"
                          },
                          "resourceUri": "<string>",
                          "target_info": {
                            "target_fcid": "<string>",
                            "target_port_array_name": "<string>",
                            "target_port_ctrlr_name": "<string>",
                            "target_port_interface_name": "<string>",
                            "target_wwnn": "<string>",
                            "target_wwpn": "<string>"
                          },
                          "type": "<string>"
                        }
                      ],
                      "fc_tdz_ports": [
                        {
                          "array_name": "<string>",
                          "fc_name": "<string>"
                        },
                        {
                          "array_name": "<string>",
                          "fc_name": "<string>"
                        }
                      ],
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "iscsi_initiators": [
                        {
                          "id": "<string>",
                          "ip_address": "<string>",
                          "iqn": "<string>",
                          "label": "<string>"
                        },
                        {
                          "id": "<string>",
                          "ip_address": "<string>",
                          "iqn": "<string>",
                          "label": "<string>"
                        }
                      ],
                      "last_modified": "<long>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "num_connections": "<long>",
                      "resourceUri": "<string>",
                      "sc_HostId": "<string>",
                      "search_name": "<string>",
                      "target_subnets": [
                        {
                          "id": "<string>",
                          "label": "<string>"
                        },
                        {
                          "id": "<string>",
                          "label": "<string>"
                        }
                      ],
                      "type": "<string>",
                      "volume_count": "<long>",
                      "volume_list": [
                        {
                          "app_category": "<string>",
                          "full_name": "<string>",
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        },
                        {
                          "app_category": "<string>",
                          "full_name": "<string>",
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        }
                      ]
                    },
                    {
                      "access_protocol": "<string>",
                      "app_uuid": "<string>",
                      "host_type": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "fc_initiators": [
                        {
                          "alias": "<string>",
                          "id": "<string>",
                          "wwpn": "<string>"
                        },
                        {
                          "alias": "<string>",
                          "id": "<string>",
                          "wwpn": "<string>"
                        }
                      ],
                      "fc_sessions": [
                        {
                          "associated_links": [
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            },
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            }
                          ],
                          "consoleUri": "<string>",
                          "customerId": "<string>",
                          "generation": "<integer>",
                          "initiator_info": {
                            "initiator_alias": "<string>",
                            "initiator_fcid": "<string>",
                            "initiator_switch_name": "<string>",
                            "initiator_switch_port": "<string>",
                            "initiator_symbolic_nodename": "<string>",
                            "initiator_symbolic_portname": "<string>",
                            "initiator_wwpn": "<string>"
                          },
                          "resourceUri": "<string>",
                          "target_info": {
                            "target_fcid": "<string>",
                            "target_port_array_name": "<string>",
                            "target_port_ctrlr_name": "<string>",
                            "target_port_interface_name": "<string>",
                            "target_wwnn": "<string>",
                            "target_wwpn": "<string>"
                          },
                          "type": "<string>"
                        },
                        {
                          "associated_links": [
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            },
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            }
                          ],
                          "consoleUri": "<string>",
                          "customerId": "<string>",
                          "generation": "<integer>",
                          "initiator_info": {
                            "initiator_alias": "<string>",
                            "initiator_fcid": "<string>",
                            "initiator_switch_name": "<string>",
                            "initiator_switch_port": "<string>",
                            "initiator_symbolic_nodename": "<string>",
                            "initiator_symbolic_portname": "<string>",
                            "initiator_wwpn": "<string>"
                          },
                          "resourceUri": "<string>",
                          "target_info": {
                            "target_fcid": "<string>",
                            "target_port_array_name": "<string>",
                            "target_port_ctrlr_name": "<string>",
                            "target_port_interface_name": "<string>",
                            "target_wwnn": "<string>",
                            "target_wwpn": "<string>"
                          },
                          "type": "<string>"
                        }
                      ],
                      "fc_tdz_ports": [
                        {
                          "array_name": "<string>",
                          "fc_name": "<string>"
                        },
                        {
                          "array_name": "<string>",
                          "fc_name": "<string>"
                        }
                      ],
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "iscsi_initiators": [
                        {
                          "id": "<string>",
                          "ip_address": "<string>",
                          "iqn": "<string>",
                          "label": "<string>"
                        },
                        {
                          "id": "<string>",
                          "ip_address": "<string>",
                          "iqn": "<string>",
                          "label": "<string>"
                        }
                      ],
                      "last_modified": "<long>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "num_connections": "<long>",
                      "resourceUri": "<string>",
                      "sc_HostId": "<string>",
                      "search_name": "<string>",
                      "target_subnets": [
                        {
                          "id": "<string>",
                          "label": "<string>"
                        },
                        {
                          "id": "<string>",
                          "label": "<string>"
                        }
                      ],
                      "type": "<string>",
                      "volume_count": "<long>",
                      "volume_list": [
                        {
                          "app_category": "<string>",
                          "full_name": "<string>",
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        },
                        {
                          "app_category": "<string>",
                          "full_name": "<string>",
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        }
                      ]
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > host-groups"
        ],
        "summary": "Create Nimble / Alletra 6K initiator group in system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K initiator group in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "access_protocol": "<string>",
                  "app_uuid": "<string>",
                  "description": "<string>",
                  "fc_initiators": [
                    {
                      "alias": "<string>",
                      "id": "<string>",
                      "wwpn": "<string>"
                    },
                    {
                      "alias": "<string>",
                      "id": "<string>",
                      "wwpn": "<string>"
                    }
                  ],
                  "fc_tdz_ports": [
                    {
                      "array_name": "<string>",
                      "fc_name": "<string>"
                    },
                    {
                      "array_name": "<string>",
                      "fc_name": "<string>"
                    }
                  ],
                  "host_type": "<string>",
                  "iscsi_initiators": [
                    {
                      "id": "<string>",
                      "ip_address": "<string>",
                      "iqn": "<string>",
                      "label": "<string>"
                    },
                    {
                      "id": "<string>",
                      "ip_address": "<string>",
                      "iqn": "<string>",
                      "label": "<string>"
                    }
                  ],
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "target_subnets": [
                    {
                      "id": "<string>",
                      "label": "<string>"
                    },
                    {
                      "id": "<string>",
                      "label": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/health-status/{healthStatusId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > health-status > {healthStatusId}"
        ],
        "summary": "Get details of  Nimble / Alletra 6K health status identified by {healthStatusId}",
        "description": "Get details of Nimble / Alletra 6K health status identified by {healthStatusId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "healthStatusId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "eu id in aute",
                  "array_id": "<string>",
                  "context": "<string>",
                  "ctrlr_id": "<string>",
                  "id": "<string>",
                  "scope": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "customerId": "<string>",
                  "element_result": {
                    "element_name": "<string>",
                    "error_list": [
                      "<string>",
                      "<string>"
                    ],
                    "messages": [
                      {
                        "code": "<long>",
                        "severity": "<string>",
                        "text": "<string>"
                      },
                      {
                        "code": "<long>",
                        "severity": "<string>",
                        "text": "<string>"
                      }
                    ]
                  },
                  "generation": "<integer>",
                  "on_demand": "<boolean>",
                  "resourceUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/health-status": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > health-status"
        ],
        "summary": "Get details of  Nimble / Alletra 6K health status",
        "description": "Get details of  Nimble / Alletra 6K health status",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter health status by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort health status resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "array_id": "<string>",
                      "context": "<string>",
                      "ctrlr_id": "<string>",
                      "id": "<string>",
                      "scope": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "element_result": {
                        "element_name": "<string>",
                        "error_list": [
                          "<string>",
                          "<string>"
                        ],
                        "messages": [
                          {
                            "code": "<long>",
                            "severity": "<string>",
                            "text": "<string>"
                          },
                          {
                            "code": "<long>",
                            "severity": "<string>",
                            "text": "<string>"
                          }
                        ]
                      },
                      "generation": "<integer>",
                      "on_demand": "<boolean>",
                      "resourceUri": "<string>"
                    },
                    {
                      "array_id": "<string>",
                      "context": "<string>",
                      "ctrlr_id": "<string>",
                      "id": "<string>",
                      "scope": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "element_result": {
                        "element_name": "<string>",
                        "error_list": [
                          "<string>",
                          "<string>"
                        ],
                        "messages": [
                          {
                            "code": "<long>",
                            "severity": "<string>",
                            "text": "<string>"
                          },
                          {
                            "code": "<long>",
                            "severity": "<string>",
                            "text": "<string>"
                          }
                        ]
                      },
                      "generation": "<integer>",
                      "on_demand": "<boolean>",
                      "resourceUri": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/folders/{folderId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > folders > {folderId}"
        ],
        "summary": "Remove Nimble / Alletra 6K folder identified by {folderId}",
        "description": "Remove Nimble / Alletra 6K folder identified by {folderId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "folderId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > folders > {folderId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K Folders identified by {folderId}",
        "description": "Get details of Nimble / Alletra 6K Folders identified by {folderId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "folderId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "in ea",
                  "id": "<string>",
                  "name": "<string>",
                  "pool_id": "<string>",
                  "pool_name": "<string>",
                  "access_protocol": "<string>",
                  "agent_type": "<string>",
                  "app_uuid": "<string>",
                  "appserver_id": "<string>",
                  "appserver_name": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "capacity_bytes": "<long>",
                  "compressed_snap_usage_bytes": "<long>",
                  "compressed_vol_usage_bytes": "<long>",
                  "compression_ratio": "<number>",
                  "consoleUri": "<string>",
                  "creation_time": "<long>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "folset_id": "<string>",
                  "folset_name": "<string>",
                  "fqn": "<string>",
                  "free_space_bytes": "<long>",
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "inherited_vol_perfpol_id": "<string>",
                  "inherited_vol_perfpol_name": "<string>",
                  "last_modified": "<long>",
                  "limit_bytes": "<long>",
                  "limit_bytes_specified": "<boolean>",
                  "limit_iops": "<long>",
                  "limit_mbps": "<long>",
                  "limit_size_bytes": "<long>",
                  "num_snapcolls": "<long>",
                  "num_snaps": "<long>",
                  "overdraft_limit_pct": "<long>",
                  "provisioned_bytes": "<long>",
                  "provisioned_limit_size_bytes": "<long>",
                  "resourceUri": "<string>",
                  "search_name": "<string>",
                  "snap_compression_ratio": "<number>",
                  "tenant_id": "<string>",
                  "type": "<string>",
                  "uncompressed_snap_usage_bytes": "<long>",
                  "uncompressed_vol_usage_bytes": "<long>",
                  "unused_reserve_bytes": "<string>",
                  "unused_snap_reserve_bytes": "<long>",
                  "usage_bytes": "<long>",
                  "usage_valid": "<boolean>",
                  "vol_compression_ratio": "<number>",
                  "volume_list": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ],
                  "volume_mapped_bytes": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > folders > {folderId}"
        ],
        "summary": "Edit details of Nimble / Alletra 6K folder identified by {folderId}",
        "description": "Edit details of Nimble / Alletra 6K folder identified by {folderId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "appserver_id": "<string>",
                  "description": "<string>",
                  "inherited_vol_perfpol_id": "<string>",
                  "limit_iops": "<long>",
                  "limit_mbps": "<long>",
                  "limit_size_bytes": "<long>",
                  "name": "<string>",
                  "overdraft_limit_pct": "<long>",
                  "provisioned_limit_size_bytes": "<long>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "folderId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/folders": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > folders"
        ],
        "summary": "Get all folders details by Nimble / Alletra 6K",
        "description": "Get all folders details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter folders by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort folders resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "pool_id": "<string>",
                      "pool_name": "<string>",
                      "access_protocol": "<string>",
                      "agent_type": "<string>",
                      "app_uuid": "<string>",
                      "appserver_id": "<string>",
                      "appserver_name": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "capacity_bytes": "<long>",
                      "compressed_snap_usage_bytes": "<long>",
                      "compressed_vol_usage_bytes": "<long>",
                      "compression_ratio": "<number>",
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "folset_id": "<string>",
                      "folset_name": "<string>",
                      "fqn": "<string>",
                      "free_space_bytes": "<long>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "inherited_vol_perfpol_id": "<string>",
                      "inherited_vol_perfpol_name": "<string>",
                      "last_modified": "<long>",
                      "limit_bytes": "<long>",
                      "limit_bytes_specified": "<boolean>",
                      "limit_iops": "<long>",
                      "limit_mbps": "<long>",
                      "limit_size_bytes": "<long>",
                      "num_snapcolls": "<long>",
                      "num_snaps": "<long>",
                      "overdraft_limit_pct": "<long>",
                      "provisioned_bytes": "<long>",
                      "provisioned_limit_size_bytes": "<long>",
                      "resourceUri": "<string>",
                      "search_name": "<string>",
                      "snap_compression_ratio": "<number>",
                      "tenant_id": "<string>",
                      "type": "<string>",
                      "uncompressed_snap_usage_bytes": "<long>",
                      "uncompressed_vol_usage_bytes": "<long>",
                      "unused_reserve_bytes": "<string>",
                      "unused_snap_reserve_bytes": "<long>",
                      "usage_bytes": "<long>",
                      "usage_valid": "<boolean>",
                      "vol_compression_ratio": "<number>",
                      "volume_list": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "volume_mapped_bytes": "<long>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "pool_id": "<string>",
                      "pool_name": "<string>",
                      "access_protocol": "<string>",
                      "agent_type": "<string>",
                      "app_uuid": "<string>",
                      "appserver_id": "<string>",
                      "appserver_name": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "capacity_bytes": "<long>",
                      "compressed_snap_usage_bytes": "<long>",
                      "compressed_vol_usage_bytes": "<long>",
                      "compression_ratio": "<number>",
                      "consoleUri": "<string>",
                      "creation_time": "<long>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "folset_id": "<string>",
                      "folset_name": "<string>",
                      "fqn": "<string>",
                      "free_space_bytes": "<long>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "inherited_vol_perfpol_id": "<string>",
                      "inherited_vol_perfpol_name": "<string>",
                      "last_modified": "<long>",
                      "limit_bytes": "<long>",
                      "limit_bytes_specified": "<boolean>",
                      "limit_iops": "<long>",
                      "limit_mbps": "<long>",
                      "limit_size_bytes": "<long>",
                      "num_snapcolls": "<long>",
                      "num_snaps": "<long>",
                      "overdraft_limit_pct": "<long>",
                      "provisioned_bytes": "<long>",
                      "provisioned_limit_size_bytes": "<long>",
                      "resourceUri": "<string>",
                      "search_name": "<string>",
                      "snap_compression_ratio": "<number>",
                      "tenant_id": "<string>",
                      "type": "<string>",
                      "uncompressed_snap_usage_bytes": "<long>",
                      "uncompressed_vol_usage_bytes": "<long>",
                      "unused_reserve_bytes": "<string>",
                      "unused_snap_reserve_bytes": "<long>",
                      "usage_bytes": "<long>",
                      "usage_valid": "<boolean>",
                      "vol_compression_ratio": "<number>",
                      "volume_list": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ],
                      "volume_mapped_bytes": "<long>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > folders"
        ],
        "summary": "Create Nimble / Alletra 6K folder in system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K folder in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "pool_id": "<string>",
                  "access_protocol": "<string>",
                  "agent_type": "<string>",
                  "appserver_id": "<string>",
                  "description": "<string>",
                  "inherited_vol_perfpol_id": "<string>",
                  "limit_iops": "<long>",
                  "limit_mbps": "<long>",
                  "limit_size_bytes": "<long>",
                  "overdraft_limit_pct": "<long>",
                  "provisioned_limit_size_bytes": "<long>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/fibre-channel-sessions/{fcSessionId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > fibre-channel-sessions > {fcSessionId}"
        ],
        "summary": "Get fibre channel session details of Nimble / Alletra 6K identified by {fcSessionId}.",
        "description": "Get fibre channel session details of Nimble / Alletra 6K identified by {fcSessionId}.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "fcSessionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "reprehenderit ullamco labore deserunt",
                  "id": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "initiator_info": {
                    "initiator_alias": "<string>",
                    "initiator_fcid": "<string>",
                    "initiator_switch_name": "<string>",
                    "initiator_switch_port": "<string>",
                    "initiator_symbolic_nodename": "<string>",
                    "initiator_symbolic_portname": "<string>",
                    "initiator_wwpn": "<string>"
                  },
                  "resourceUri": "<string>",
                  "target_info": {
                    "target_fcid": "<string>",
                    "target_port_array_name": "<string>",
                    "target_port_ctrlr_name": "<string>",
                    "target_port_interface_name": "<string>",
                    "target_wwnn": "<string>",
                    "target_wwpn": "<string>"
                  },
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/fibre-channel-sessions": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > fibre-channel-sessions"
        ],
        "summary": "Get all fibre channel sessions details of Nimble / Alletra 6K",
        "description": "Get all fibre channel sessions details of Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Fibre Channel Sessions by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "initiator_info": {
                        "initiator_alias": "<string>",
                        "initiator_fcid": "<string>",
                        "initiator_switch_name": "<string>",
                        "initiator_switch_port": "<string>",
                        "initiator_symbolic_nodename": "<string>",
                        "initiator_symbolic_portname": "<string>",
                        "initiator_wwpn": "<string>"
                      },
                      "resourceUri": "<string>",
                      "target_info": {
                        "target_fcid": "<string>",
                        "target_port_array_name": "<string>",
                        "target_port_ctrlr_name": "<string>",
                        "target_port_interface_name": "<string>",
                        "target_wwnn": "<string>",
                        "target_wwpn": "<string>"
                      },
                      "type": "<string>"
                    },
                    {
                      "id": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "initiator_info": {
                        "initiator_alias": "<string>",
                        "initiator_fcid": "<string>",
                        "initiator_switch_name": "<string>",
                        "initiator_switch_port": "<string>",
                        "initiator_symbolic_nodename": "<string>",
                        "initiator_symbolic_portname": "<string>",
                        "initiator_wwpn": "<string>"
                      },
                      "resourceUri": "<string>",
                      "target_info": {
                        "target_fcid": "<string>",
                        "target_port_array_name": "<string>",
                        "target_port_ctrlr_name": "<string>",
                        "target_port_interface_name": "<string>",
                        "target_wwnn": "<string>",
                        "target_wwpn": "<string>"
                      },
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/fibre-channel-configs/{fcConfigId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > fibre-channel-configs > {fcConfigId}"
        ],
        "summary": "Get fibre channel configs details of Nimble / Alletra 6K identified by {fcConfigId}.",
        "description": "Get fibre channel configs details of Nimble / Alletra 6K identified by {fcConfigId}.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "fcConfigId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "eu in fugiat cupidatat",
                  "group_leader_array": "<string>",
                  "id": "<string>",
                  "array_list": [
                    {
                      "array-name": "<string>",
                      "array_id": "<string>",
                      "ctrlr_a_fc_config": {
                        "bus_location": "<string>",
                        "name": "<string>",
                        "online": "<boolean>",
                        "port": "<integer>",
                        "slot": "<integer>",
                        "wwnn": "<string>",
                        "wwpn": "<string>"
                      },
                      "ctrlr_b_fc_config": {
                        "bus_location": "<string>",
                        "name": "<string>",
                        "online": "<boolean>",
                        "port": "<integer>",
                        "slot": "<integer>",
                        "wwnn": "<string>",
                        "wwpn": "<string>"
                      },
                      "id": "<string>",
                      "name": "<string>"
                    },
                    {
                      "array-name": "<string>",
                      "array_id": "<string>",
                      "ctrlr_a_fc_config": {
                        "bus_location": "<string>",
                        "name": "<string>",
                        "online": "<boolean>",
                        "port": "<integer>",
                        "slot": "<integer>",
                        "wwnn": "<string>",
                        "wwpn": "<string>"
                      },
                      "ctrlr_b_fc_config": {
                        "bus_location": "<string>",
                        "name": "<string>",
                        "online": "<boolean>",
                        "port": "<integer>",
                        "slot": "<integer>",
                        "wwnn": "<string>",
                        "wwpn": "<string>"
                      },
                      "id": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "controller_name": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "resourceUri": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/fibre-channel-configs": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > fibre-channel-configs"
        ],
        "summary": "Get all fibre channel configs details of Nimble / Alletra 6K",
        "description": "Get all fibre channel configs details of Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Fibre Channel Configs by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "array_list": [
                        {
                          "array-name": "<string>",
                          "array_id": "<string>",
                          "ctrlr_a_fc_config": {
                            "bus_location": "<string>",
                            "name": "<string>",
                            "online": "<boolean>",
                            "port": "<integer>",
                            "slot": "<integer>",
                            "wwnn": "<string>",
                            "wwpn": "<string>"
                          },
                          "ctrlr_b_fc_config": {
                            "bus_location": "<string>",
                            "name": "<string>",
                            "online": "<boolean>",
                            "port": "<integer>",
                            "slot": "<integer>",
                            "wwnn": "<string>",
                            "wwpn": "<string>"
                          },
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "array-name": "<string>",
                          "array_id": "<string>",
                          "ctrlr_a_fc_config": {
                            "bus_location": "<string>",
                            "name": "<string>",
                            "online": "<boolean>",
                            "port": "<integer>",
                            "slot": "<integer>",
                            "wwnn": "<string>",
                            "wwpn": "<string>"
                          },
                          "ctrlr_b_fc_config": {
                            "bus_location": "<string>",
                            "name": "<string>",
                            "online": "<boolean>",
                            "port": "<integer>",
                            "slot": "<integer>",
                            "wwnn": "<string>",
                            "wwpn": "<string>"
                          },
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "controller_name": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "group_leader_array": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "id": "<string>",
                      "array_list": [
                        {
                          "array-name": "<string>",
                          "array_id": "<string>",
                          "ctrlr_a_fc_config": {
                            "bus_location": "<string>",
                            "name": "<string>",
                            "online": "<boolean>",
                            "port": "<integer>",
                            "slot": "<integer>",
                            "wwnn": "<string>",
                            "wwpn": "<string>"
                          },
                          "ctrlr_b_fc_config": {
                            "bus_location": "<string>",
                            "name": "<string>",
                            "online": "<boolean>",
                            "port": "<integer>",
                            "slot": "<integer>",
                            "wwnn": "<string>",
                            "wwpn": "<string>"
                          },
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "array-name": "<string>",
                          "array_id": "<string>",
                          "ctrlr_a_fc_config": {
                            "bus_location": "<string>",
                            "name": "<string>",
                            "online": "<boolean>",
                            "port": "<integer>",
                            "slot": "<integer>",
                            "wwnn": "<string>",
                            "wwpn": "<string>"
                          },
                          "ctrlr_b_fc_config": {
                            "bus_location": "<string>",
                            "name": "<string>",
                            "online": "<boolean>",
                            "port": "<integer>",
                            "slot": "<integer>",
                            "wwnn": "<string>",
                            "wwpn": "<string>"
                          },
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "controller_name": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "group_leader_array": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/events/{eventId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > events > {eventId}"
        ],
        "summary": "Get all events of Nimble / Alletra 6K identified by {eventId}",
        "description": "Get all events of Nimble / Alletra 6K indentified by {eventId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "eventId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "consectetur dolore ut est ullamco",
                  "alarm_id": "<string>",
                  "category": "<string>",
                  "event_type": "<long>",
                  "id": "<string>",
                  "scope": "<string>",
                  "severity": "<string>",
                  "target": "<string>",
                  "target_type": "<string>",
                  "timestamp": "<long>",
                  "activity": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "resourceUri": "<string>",
                  "summary": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/events": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > events"
        ],
        "summary": "Get all events of Nimble / Alletra 6K",
        "description": "Get all events of Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Events by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort Event resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "alarm_id": "<string>",
                      "category": "<string>",
                      "event_type": "<long>",
                      "id": "<string>",
                      "scope": "<string>",
                      "severity": "<string>",
                      "target": "<string>",
                      "target_type": "<string>",
                      "timestamp": "<long>",
                      "activity": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "resourceUri": "<string>",
                      "summary": "<string>",
                      "type": "<string>"
                    },
                    {
                      "alarm_id": "<string>",
                      "category": "<string>",
                      "event_type": "<long>",
                      "id": "<string>",
                      "scope": "<string>",
                      "severity": "<string>",
                      "target": "<string>",
                      "target_type": "<string>",
                      "timestamp": "<long>",
                      "activity": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "resourceUri": "<string>",
                      "summary": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/disks/{diskId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > disks > {diskId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K disk identified by {diskId}",
        "description": "Get details of Nimble / Alletra 6K disk identified by {diskId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "diskId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "exercitation ",
                  "array_id": "<string>",
                  "array_name": "<string>",
                  "disk_type": "<string>",
                  "id": "<string>",
                  "model": "<string>",
                  "serial": "<string>",
                  "shelf_id": "<string>",
                  "shelf_serial": "<string>",
                  "state": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "bank": "<long>",
                  "block_type": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "disk_internal_stat1": "<string>",
                  "firmware_version": "<string>",
                  "generation": "<integer>",
                  "hba": "<long>",
                  "is_dfc": "<boolean>",
                  "path": "<string>",
                  "port": "<long>",
                  "raid_id": "<long>",
                  "raid_resync_average_speed": "<long>",
                  "raid_resync_current_speed": "<long>",
                  "raid_resync_percent": "<long>",
                  "raid_state": "<string>",
                  "resourceUri": "<string>",
                  "shelf_location": "<string>",
                  "shelf_location_id": "<long>",
                  "size": "<long>",
                  "slot": "<long>",
                  "smart_attribute_list": [
                    {
                      "cur_value": "<long>",
                      "flags": "<long>",
                      "last_updated_epoch_secs": "<long>",
                      "name": "<string>",
                      "raw_value": "<long>",
                      "smart_id": "<long>",
                      "threshold": "<long>",
                      "worst_value": "<long>"
                    },
                    {
                      "cur_value": "<long>",
                      "flags": "<long>",
                      "last_updated_epoch_secs": "<long>",
                      "name": "<string>",
                      "raw_value": "<long>",
                      "smart_id": "<long>",
                      "threshold": "<long>",
                      "worst_value": "<long>"
                    }
                  ],
                  "type": "<string>",
                  "vendor": "<string>",
                  "vshelf_id": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > disks > {diskId}"
        ],
        "summary": "Edit details of Nimble / Alletra 6K disk identified by {diskId}",
        "description": "Edit details of Nimble / Alletra 6K disk identified by {diskId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "disk_op": "<string>",
                  "force": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "diskId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/disks": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > disks"
        ],
        "summary": "Get all disks details by Nimble / Alletra 6K",
        "description": "Get all disks details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter disks by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort disks resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "device_type": "<string>",
                      "id": "<string>",
                      "model": "<string>",
                      "serial": "<string>",
                      "shelf_id": "<string>",
                      "shelf_serial": "<string>",
                      "state": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "bank": "<long>",
                      "block_type": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "disk_internal_stat1": "<string>",
                      "firmware_version": "<string>",
                      "generation": "<integer>",
                      "hba": "<long>",
                      "is_dfc": "<boolean>",
                      "path": "<string>",
                      "port": "<long>",
                      "raid_id": "<long>",
                      "raid_resync_average_speed": "<long>",
                      "raid_resync_current_speed": "<long>",
                      "raid_resync_percent": "<long>",
                      "raid_state": "<string>",
                      "resourceUri": "<string>",
                      "shelf_location": "<string>",
                      "shelf_location_id": "<long>",
                      "size": "<long>",
                      "slot": "<long>",
                      "smart_attribute_list": [
                        {
                          "cur_value": "<long>",
                          "flags": "<long>",
                          "last_updated_epoch_secs": "<long>",
                          "name": "<string>",
                          "raw_value": "<long>",
                          "smart_id": "<long>",
                          "threshold": "<long>",
                          "worst_value": "<long>"
                        },
                        {
                          "cur_value": "<long>",
                          "flags": "<long>",
                          "last_updated_epoch_secs": "<long>",
                          "name": "<string>",
                          "raw_value": "<long>",
                          "smart_id": "<long>",
                          "threshold": "<long>",
                          "worst_value": "<long>"
                        }
                      ],
                      "type": "<string>",
                      "vendor": "<string>",
                      "vshelf_id": "<long>"
                    },
                    {
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "device_type": "<string>",
                      "id": "<string>",
                      "model": "<string>",
                      "serial": "<string>",
                      "shelf_id": "<string>",
                      "shelf_serial": "<string>",
                      "state": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "bank": "<long>",
                      "block_type": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "disk_internal_stat1": "<string>",
                      "firmware_version": "<string>",
                      "generation": "<integer>",
                      "hba": "<long>",
                      "is_dfc": "<boolean>",
                      "path": "<string>",
                      "port": "<long>",
                      "raid_id": "<long>",
                      "raid_resync_average_speed": "<long>",
                      "raid_resync_current_speed": "<long>",
                      "raid_resync_percent": "<long>",
                      "raid_state": "<string>",
                      "resourceUri": "<string>",
                      "shelf_location": "<string>",
                      "shelf_location_id": "<long>",
                      "size": "<long>",
                      "slot": "<long>",
                      "smart_attribute_list": [
                        {
                          "cur_value": "<long>",
                          "flags": "<long>",
                          "last_updated_epoch_secs": "<long>",
                          "name": "<string>",
                          "raw_value": "<long>",
                          "smart_id": "<long>",
                          "threshold": "<long>",
                          "worst_value": "<long>"
                        },
                        {
                          "cur_value": "<long>",
                          "flags": "<long>",
                          "last_updated_epoch_secs": "<long>",
                          "name": "<string>",
                          "raw_value": "<long>",
                          "smart_id": "<long>",
                          "threshold": "<long>",
                          "worst_value": "<long>"
                        }
                      ],
                      "type": "<string>",
                      "vendor": "<string>",
                      "vshelf_id": "<long>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/controllers/{controllerId}/actions/halt": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > controllers > {controllerId} > actions > halt"
        ],
        "summary": "Perform halt of Nimble / Alletra 6K controller identified by {controllerId}",
        "description": "Perform halt of Nimble / Alletra 6K controller identified by {controllerId}",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "controllerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/controllers/{controllerId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > controllers > {controllerId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K Controller identified by {controllerId}",
        "description": "Get details of Nimble / Alletra 6K Controller identified by {controllerId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "controllerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "Lorem cupidatat cillum reprehenderit fugiat",
                  "array_id": "<string>",
                  "array_name": "<string>",
                  "id": "<string>",
                  "name": "<string>",
                  "serial": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "asup_time": "<long>",
                  "consoleUri": "<string>",
                  "ctrlr_side": "<string>",
                  "customerId": "<string>",
                  "fan_status": "<string>",
                  "fans": [
                    {
                      "ctrlr_owner": "<string>",
                      "current_reading": "<long>",
                      "display_name": "<string>",
                      "location": "<string>",
                      "name": "<string>",
                      "state": "<string>"
                    },
                    {
                      "ctrlr_owner": "<string>",
                      "current_reading": "<long>",
                      "display_name": "<string>",
                      "location": "<string>",
                      "name": "<string>",
                      "state": "<string>"
                    }
                  ],
                  "generation": "<integer>",
                  "hostname": "<string>",
                  "nvme_cards": [
                    {
                      "serial_number": "<string>",
                      "size": "<long>",
                      "state": "<string>"
                    },
                    {
                      "serial_number": "<string>",
                      "size": "<long>",
                      "state": "<string>"
                    }
                  ],
                  "nvme_cards_enabled": "<long>",
                  "partial_response_ok": "<boolean>",
                  "partition_status": [
                    {
                      "cur_copies": "<long>",
                      "is_resyncing": "<boolean>",
                      "max_copies": "<long>",
                      "raid_id": "<long>",
                      "raid_type": "<string>"
                    },
                    {
                      "cur_copies": "<long>",
                      "is_resyncing": "<boolean>",
                      "max_copies": "<long>",
                      "raid_id": "<long>",
                      "raid_type": "<string>"
                    }
                  ],
                  "power_status": "<string>",
                  "power_supplies": [
                    {
                      "ctrlr_owner": "<string>",
                      "current_reading": "<long>",
                      "display_name": "<string>",
                      "location": "<string>",
                      "name": "<string>",
                      "state": "<string>"
                    },
                    {
                      "ctrlr_owner": "<string>",
                      "current_reading": "<long>",
                      "display_name": "<string>",
                      "location": "<string>",
                      "name": "<string>",
                      "state": "<string>"
                    }
                  ],
                  "resourceUri": "<string>",
                  "state": "<string>",
                  "support_address": "<string>",
                  "support_netmask": "<string>",
                  "support_nic": "<string>",
                  "temperature_sensors": [
                    {
                      "ctrlr_owner": "<string>",
                      "current_reading": "<long>",
                      "display_name": "<string>",
                      "location": "<string>",
                      "name": "<string>",
                      "state": "<string>"
                    },
                    {
                      "ctrlr_owner": "<string>",
                      "current_reading": "<long>",
                      "display_name": "<string>",
                      "location": "<string>",
                      "name": "<string>",
                      "state": "<string>"
                    }
                  ],
                  "temperature_status": "<string>",
                  "type": "<string>",
                  "update_end_time": "<long>",
                  "update_error_code": "<string>",
                  "update_progress_msg": "<string>",
                  "update_start_time": "<long>",
                  "update_state": "<string>",
                  "version_current": "<string>",
                  "version_rollback": "<string>",
                  "version_target": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/controllers": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > controllers"
        ],
        "summary": "Get all controllers details by Nimble / Alletra 6K",
        "description": "Get all controllers details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter controllers by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort controllers resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "serial": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "asup_time": "<long>",
                      "consoleUri": "<string>",
                      "ctrlr_side": "<string>",
                      "customerId": "<string>",
                      "fan_status": "<string>",
                      "fans": [
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        },
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        }
                      ],
                      "generation": "<integer>",
                      "hostname": "<string>",
                      "nvme_cards": [
                        {
                          "serial_number": "<string>",
                          "size": "<long>",
                          "state": "<string>"
                        },
                        {
                          "serial_number": "<string>",
                          "size": "<long>",
                          "state": "<string>"
                        }
                      ],
                      "nvme_cards_enabled": "<long>",
                      "partial_response_ok": "<boolean>",
                      "partition_status": [
                        {
                          "cur_copies": "<long>",
                          "is_resyncing": "<boolean>",
                          "max_copies": "<long>",
                          "raid_id": "<long>",
                          "raid_type": "<string>"
                        },
                        {
                          "cur_copies": "<long>",
                          "is_resyncing": "<boolean>",
                          "max_copies": "<long>",
                          "raid_id": "<long>",
                          "raid_type": "<string>"
                        }
                      ],
                      "power_status": "<string>",
                      "power_supplies": [
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        },
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        }
                      ],
                      "resourceUri": "<string>",
                      "state": "<string>",
                      "support_address": "<string>",
                      "support_netmask": "<string>",
                      "support_nic": "<string>",
                      "temperature_sensors": [
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        },
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        }
                      ],
                      "temperature_status": "<string>",
                      "type": "<string>",
                      "update_end_time": "<long>",
                      "update_error_code": "<string>",
                      "update_progress_msg": "<string>",
                      "update_start_time": "<long>",
                      "update_state": "<string>",
                      "version_current": "<string>",
                      "version_rollback": "<string>",
                      "version_target": "<string>"
                    },
                    {
                      "array_id": "<string>",
                      "array_name": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "serial": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "asup_time": "<long>",
                      "consoleUri": "<string>",
                      "ctrlr_side": "<string>",
                      "customerId": "<string>",
                      "fan_status": "<string>",
                      "fans": [
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        },
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        }
                      ],
                      "generation": "<integer>",
                      "hostname": "<string>",
                      "nvme_cards": [
                        {
                          "serial_number": "<string>",
                          "size": "<long>",
                          "state": "<string>"
                        },
                        {
                          "serial_number": "<string>",
                          "size": "<long>",
                          "state": "<string>"
                        }
                      ],
                      "nvme_cards_enabled": "<long>",
                      "partial_response_ok": "<boolean>",
                      "partition_status": [
                        {
                          "cur_copies": "<long>",
                          "is_resyncing": "<boolean>",
                          "max_copies": "<long>",
                          "raid_id": "<long>",
                          "raid_type": "<string>"
                        },
                        {
                          "cur_copies": "<long>",
                          "is_resyncing": "<boolean>",
                          "max_copies": "<long>",
                          "raid_id": "<long>",
                          "raid_type": "<string>"
                        }
                      ],
                      "power_status": "<string>",
                      "power_supplies": [
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        },
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        }
                      ],
                      "resourceUri": "<string>",
                      "state": "<string>",
                      "support_address": "<string>",
                      "support_netmask": "<string>",
                      "support_nic": "<string>",
                      "temperature_sensors": [
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        },
                        {
                          "ctrlr_owner": "<string>",
                          "current_reading": "<long>",
                          "display_name": "<string>",
                          "location": "<string>",
                          "name": "<string>",
                          "state": "<string>"
                        }
                      ],
                      "temperature_status": "<string>",
                      "type": "<string>",
                      "update_end_time": "<long>",
                      "update_error_code": "<string>",
                      "update_progress_msg": "<string>",
                      "update_start_time": "<long>",
                      "update_state": "<string>",
                      "version_current": "<string>",
                      "version_rollback": "<string>",
                      "version_target": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/capacity-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > capacity-history"
        ],
        "summary": "Get capacity trend data for a storage system Nimble / Alletra 6K",
        "description": "Get capacity trend data for a storage system Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>",
                  "requestURI": "<string>",
                  "series_data": [
                    {
                      "savings": "<number>",
                      "timestamp": "<long>",
                      "usage": "<number>"
                    },
                    {
                      "savings": "<number>",
                      "timestamp": "<long>",
                      "usage": "<number>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/autosupport/actions/send": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > autosupport > actions > send"
        ],
        "summary": "Send auto support information of Nimble / Alletra 6K identified by {systemId}",
        "description": "Send auto support information of Nimble / Alletra 6K identified by {systemId}",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/arrays/{arrayId}/actions/failover": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > arrays > {arrayId} > actions > failover"
        ],
        "summary": "Perform failover of Nimble / Alletra 6K array identified by {arrayId}",
        "description": "Perform failover of Nimble / Alletra 6K array identified by {arrayId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "force": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "arrayId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/arrays/{arrayId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > arrays > {arrayId}"
        ],
        "summary": "Delete Nimble / Alletra 6K array identified by {arrayId}",
        "description": "Delete Nimble / Alletra 6K array identified by {arrayId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "arrayId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > arrays > {arrayId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K array identified by {arrayId}",
        "description": "Get details of Nimble / Alletra 6K array identified by {arrayId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "arrayId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "consequat sint exercitation esse",
                  "id": "<string>",
                  "model": "<string>",
                  "name": "<string>",
                  "pool_id": "<string>",
                  "serial": "<string>",
                  "all_flash": "<boolean>",
                  "allow_lower_limits": "<boolean>",
                  "available_bytes": "<long>",
                  "brand": "<string>",
                  "create_pool": "<boolean>",
                  "creation_time": "<long>",
                  "ctrlr_a_support_ip": "<string>",
                  "ctrlr_b_support_ip": "<string>",
                  "customerId": "<string>",
                  "dedupe_capacity_bytes": "<long>",
                  "dedupe_usage_bytes": "<long>",
                  "extended_model": "<string>",
                  "fc_port_count": "<long>",
                  "force": "<boolean>",
                  "full_name": "<string>",
                  "generation": "<integer>",
                  "gig_nic_port_count": "<long>",
                  "group_state": "<string>",
                  "is_fully_dedupe_capable": "<boolean>",
                  "is_sfa": "<boolean>",
                  "is_supported_hw_config": "<boolean>",
                  "last_modified": "<long>",
                  "model_sub_type": "<string>",
                  "nic_list": [
                    {
                      "data_ip": "<string>",
                      "name": "<string>",
                      "subnet_label": "<string>",
                      "tagged": "<boolean>"
                    },
                    {
                      "data_ip": "<string>",
                      "name": "<string>",
                      "subnet_label": "<string>",
                      "tagged": "<boolean>"
                    }
                  ],
                  "oem": "<string>",
                  "pending_delete_bytes": "<long>",
                  "pool_description": "<string>",
                  "pool_name": "<string>",
                  "public_key": {
                    "key": "<string>",
                    "key_name": "<string>",
                    "key_type": "<string>"
                  },
                  "raw_capacity_bytes": "<long>",
                  "resourceUri": "<string>",
                  "role": "<string>",
                  "search_name": "<string>",
                  "secondary_mgmt_ip": "<string>",
                  "snap_compression": "<number>",
                  "snap_saved_bytes": "<long>",
                  "snap_space_reduction": "<number>",
                  "snap_usage_bytes": "<long>",
                  "snap_usage_uncompressed_bytes": "<long>",
                  "status": "<string>",
                  "ten_gig_sfp_nic_port_count": "<long>",
                  "ten_gig_t_nic_port_count": "<long>",
                  "upgrade": {
                    "messages": [
                      {
                        "code": "<long>",
                        "severity": "<string>",
                        "text": "<string>"
                      },
                      {
                        "code": "<long>",
                        "severity": "<string>",
                        "text": "<string>"
                      }
                    ],
                    "stage": "<string>",
                    "state": "<string>",
                    "type": "<string>"
                  },
                  "usable_cache_capacity_bytes": "<long>",
                  "usable_capacity_bytes": "<long>",
                  "usage": "<long>",
                  "usage_valid": "<boolean>",
                  "version": "<string>",
                  "vol_compression": "<number>",
                  "vol_saved_bytes": "<long>",
                  "vol_usage_bytes": "<long>",
                  "vol_usage_uncompressed_bytes": "<long>",
                  "zconf_ipaddrs": [
                    {
                      "ip_addr": "<string>"
                    },
                    {
                      "ip_addr": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > arrays > {arrayId}"
        ],
        "summary": "Edit  details of Nimble / Alletra 6K array identified by {arrayId}",
        "description": "Edit  details of Nimble / Alletra 6K array identified by {arrayId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "arrayId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/arrays": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > arrays"
        ],
        "summary": "Get all arrays details by Nimble / Alletra 6K",
        "description": "Get all arrays details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter array by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort array resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "model": "<string>",
                      "name": "<string>",
                      "pool_id": "<string>",
                      "serial": "<string>",
                      "all_flash": "<boolean>",
                      "allow_lower_limits": "<boolean>",
                      "available_bytes": "<long>",
                      "brand": "<string>",
                      "create_pool": "<boolean>",
                      "creation_time": "<long>",
                      "ctrlr_a_support_ip": "<string>",
                      "ctrlr_b_support_ip": "<string>",
                      "customerId": "<string>",
                      "dedupe_capacity_bytes": "<long>",
                      "dedupe_usage_bytes": "<long>",
                      "extended_model": "<string>",
                      "fc_port_count": "<long>",
                      "force": "<boolean>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "gig_nic_port_count": "<long>",
                      "group_state": "<string>",
                      "is_fully_dedupe_capable": "<boolean>",
                      "is_sfa": "<boolean>",
                      "is_supported_hw_config": "<boolean>",
                      "last_modified": "<long>",
                      "model_sub_type": "<string>",
                      "nic_list": [
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        },
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        }
                      ],
                      "oem": "<string>",
                      "pending_delete_bytes": "<long>",
                      "pool_description": "<string>",
                      "pool_name": "<string>",
                      "public_key": {
                        "key": "<string>",
                        "key_name": "<string>",
                        "key_type": "<string>"
                      },
                      "raw_capacity_bytes": "<long>",
                      "resourceUri": "<string>",
                      "role": "<string>",
                      "search_name": "<string>",
                      "secondary_mgmt_ip": "<string>",
                      "snap_compression": "<number>",
                      "snap_saved_bytes": "<long>",
                      "snap_space_reduction": "<number>",
                      "snap_usage_bytes": "<long>",
                      "snap_usage_uncompressed_bytes": "<long>",
                      "status": "<string>",
                      "ten_gig_sfp_nic_port_count": "<long>",
                      "ten_gig_t_nic_port_count": "<long>",
                      "upgrade": {
                        "messages": [
                          {
                            "code": "<long>",
                            "severity": "<string>",
                            "text": "<string>"
                          },
                          {
                            "code": "<long>",
                            "severity": "<string>",
                            "text": "<string>"
                          }
                        ],
                        "stage": "<string>",
                        "state": "<string>",
                        "type": "<string>"
                      },
                      "usable_cache_capacity_bytes": "<long>",
                      "usable_capacity_bytes": "<long>",
                      "usage": "<long>",
                      "usage_valid": "<boolean>",
                      "version": "<string>",
                      "vol_compression": "<number>",
                      "vol_saved_bytes": "<long>",
                      "vol_usage_bytes": "<long>",
                      "vol_usage_uncompressed_bytes": "<long>",
                      "zconf_ipaddrs": [
                        {
                          "ip_addr": "<string>"
                        },
                        {
                          "ip_addr": "<string>"
                        }
                      ]
                    },
                    {
                      "id": "<string>",
                      "model": "<string>",
                      "name": "<string>",
                      "pool_id": "<string>",
                      "serial": "<string>",
                      "all_flash": "<boolean>",
                      "allow_lower_limits": "<boolean>",
                      "available_bytes": "<long>",
                      "brand": "<string>",
                      "create_pool": "<boolean>",
                      "creation_time": "<long>",
                      "ctrlr_a_support_ip": "<string>",
                      "ctrlr_b_support_ip": "<string>",
                      "customerId": "<string>",
                      "dedupe_capacity_bytes": "<long>",
                      "dedupe_usage_bytes": "<long>",
                      "extended_model": "<string>",
                      "fc_port_count": "<long>",
                      "force": "<boolean>",
                      "full_name": "<string>",
                      "generation": "<integer>",
                      "gig_nic_port_count": "<long>",
                      "group_state": "<string>",
                      "is_fully_dedupe_capable": "<boolean>",
                      "is_sfa": "<boolean>",
                      "is_supported_hw_config": "<boolean>",
                      "last_modified": "<long>",
                      "model_sub_type": "<string>",
                      "nic_list": [
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        },
                        {
                          "data_ip": "<string>",
                          "name": "<string>",
                          "subnet_label": "<string>",
                          "tagged": "<boolean>"
                        }
                      ],
                      "oem": "<string>",
                      "pending_delete_bytes": "<long>",
                      "pool_description": "<string>",
                      "pool_name": "<string>",
                      "public_key": {
                        "key": "<string>",
                        "key_name": "<string>",
                        "key_type": "<string>"
                      },
                      "raw_capacity_bytes": "<long>",
                      "resourceUri": "<string>",
                      "role": "<string>",
                      "search_name": "<string>",
                      "secondary_mgmt_ip": "<string>",
                      "snap_compression": "<number>",
                      "snap_saved_bytes": "<long>",
                      "snap_space_reduction": "<number>",
                      "snap_usage_bytes": "<long>",
                      "snap_usage_uncompressed_bytes": "<long>",
                      "status": "<string>",
                      "ten_gig_sfp_nic_port_count": "<long>",
                      "ten_gig_t_nic_port_count": "<long>",
                      "upgrade": {
                        "messages": [
                          {
                            "code": "<long>",
                            "severity": "<string>",
                            "text": "<string>"
                          },
                          {
                            "code": "<long>",
                            "severity": "<string>",
                            "text": "<string>"
                          }
                        ],
                        "stage": "<string>",
                        "state": "<string>",
                        "type": "<string>"
                      },
                      "usable_cache_capacity_bytes": "<long>",
                      "usable_capacity_bytes": "<long>",
                      "usage": "<long>",
                      "usage_valid": "<boolean>",
                      "version": "<string>",
                      "vol_compression": "<number>",
                      "vol_saved_bytes": "<long>",
                      "vol_usage_bytes": "<long>",
                      "vol_usage_uncompressed_bytes": "<long>",
                      "zconf_ipaddrs": [
                        {
                          "ip_addr": "<string>"
                        },
                        {
                          "ip_addr": "<string>"
                        }
                      ]
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > arrays"
        ],
        "summary": "Create Nimble / Alletra 6K array identified by {systemId}",
        "description": "Create Nimble / Alletra 6K array identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "pool_name": "<string>",
                  "serial": "<string>",
                  "ctrlr_a_support_ip": "<string>",
                  "ctrlr_b_support_ip": "<string>",
                  "nic_list": [
                    {
                      "data_ip": "<string>",
                      "name": "<string>",
                      "subnet_label": "<string>",
                      "tagged": "<boolean>"
                    },
                    {
                      "data_ip": "<string>",
                      "name": "<string>",
                      "subnet_label": "<string>",
                      "tagged": "<boolean>"
                    }
                  ],
                  "allow_lower_limits": "<boolean>",
                  "create_pool": "<boolean>",
                  "dedupe_disabled": "<boolean>",
                  "pool_description": "<string>",
                  "secondary_mgmt_ip": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/applications/{id}/capacity-stats": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > applications > {id} > capacity-stats"
        ],
        "summary": "Get capacity stats of Application identified by {id} for a storage system Nimble / Alletra 6K",
        "description": "Get capacity stats of Application identified by {id} for a storage system Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "magna id",
                  "app_category_id": "<string>",
                  "app_category_name": "<string>",
                  "block_size": "<long>",
                  "clone_ratio": "<number>",
                  "compressed_usage_bytes": "<long>",
                  "compression_ratio": "<number>",
                  "dedupe_ratio": "<number>",
                  "deduped": "<boolean>",
                  "encrypted": "<boolean>",
                  "id": "<string>",
                  "logical_dedupe_usage": "<long>",
                  "physical_dedupe_usage": "<long>",
                  "pool_id": "<string>",
                  "pool_name": "<string>",
                  "savings_clone": "<long>",
                  "savings_compression": "<long>",
                  "savings_dedupe": "<long>",
                  "snap_logical_usage": "<long>",
                  "uncompressed_usage_bytes": "<long>",
                  "usage": "<long>",
                  "vol_logical_usage": "<long>",
                  "vol_mapped_usage": "<long>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "deduped_volume_count": "<long>",
                  "generation": "<integer>",
                  "perf_policy_names": [
                    {
                      "name": "<string>"
                    },
                    {
                      "name": "<string>"
                    }
                  ],
                  "resourceUri": "<string>",
                  "sample_rate": "<long>",
                  "type": "<string>",
                  "volume_count": "<long>",
                  "volumes": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/applications/capacity-stats": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > applications > capacity-stats"
        ],
        "summary": "Get capacity stats of Applications for a storage system Nimble / Alletra 6K",
        "description": "Get capacity stats of Applications for a storage system Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter application summery by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort application summery resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "app_category_id": "<string>",
                      "app_category_name": "<string>",
                      "block_size": "<long>",
                      "clone_ratio": "<number>",
                      "compressed_usage_bytes": "<long>",
                      "compression_ratio": "<number>",
                      "dedupe_ratio": "<number>",
                      "deduped": "<boolean>",
                      "encrypted": "<boolean>",
                      "id": "<string>",
                      "logical_dedupe_usage": "<long>",
                      "physical_dedupe_usage": "<long>",
                      "pool_id": "<string>",
                      "pool_name": "<string>",
                      "savings_clone": "<long>",
                      "savings_compression": "<long>",
                      "savings_dedupe": "<long>",
                      "snap_logical_usage": "<long>",
                      "uncompressed_usage_bytes": "<long>",
                      "usage": "<long>",
                      "vol_logical_usage": "<long>",
                      "vol_mapped_usage": "<long>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "deduped_volume_count": "<long>",
                      "generation": "<integer>",
                      "perf_policy_names": [
                        {
                          "name": "<string>"
                        },
                        {
                          "name": "<string>"
                        }
                      ],
                      "resourceUri": "<string>",
                      "sample_rate": "<long>",
                      "type": "<string>",
                      "volume_count": "<long>",
                      "volumes": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ]
                    },
                    {
                      "app_category_id": "<string>",
                      "app_category_name": "<string>",
                      "block_size": "<long>",
                      "clone_ratio": "<number>",
                      "compressed_usage_bytes": "<long>",
                      "compression_ratio": "<number>",
                      "dedupe_ratio": "<number>",
                      "deduped": "<boolean>",
                      "encrypted": "<boolean>",
                      "id": "<string>",
                      "logical_dedupe_usage": "<long>",
                      "physical_dedupe_usage": "<long>",
                      "pool_id": "<string>",
                      "pool_name": "<string>",
                      "savings_clone": "<long>",
                      "savings_compression": "<long>",
                      "savings_dedupe": "<long>",
                      "snap_logical_usage": "<long>",
                      "uncompressed_usage_bytes": "<long>",
                      "usage": "<long>",
                      "vol_logical_usage": "<long>",
                      "vol_mapped_usage": "<long>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "deduped_volume_count": "<long>",
                      "generation": "<integer>",
                      "perf_policy_names": [
                        {
                          "name": "<string>"
                        },
                        {
                          "name": "<string>"
                        }
                      ],
                      "resourceUri": "<string>",
                      "sample_rate": "<long>",
                      "type": "<string>",
                      "volume_count": "<long>",
                      "volumes": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "vol_id": "<string>",
                          "vol_name": "<string>"
                        }
                      ]
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/application-servers/{applicationServerId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > application-servers > {applicationServerId}"
        ],
        "summary": "Remove application server identified by {applicationServerId} from Nimble / Alletra 6K",
        "description": "Remove application server identified by {applicationServerId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "applicationServerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > application-servers > {applicationServerId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K application server identified by {applicationServerId}",
        "description": "Get details of Nimble / Alletra 6K application server identified by {applicationServerId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "applicationServerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "officia est quis velit exercitation",
                  "hostname": "<string>",
                  "id": "<string>",
                  "name": "<string>",
                  "server_type": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "generation": "<integer>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "port": "<long>",
                  "resourceUri": "<string>",
                  "type": "<string>",
                  "username": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > application-servers > {applicationServerId}"
        ],
        "summary": "Modify Nimble / Alletra 6K application server in system identified by {systemId}",
        "description": "Modify Nimble / Alletra 6K application server in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "description": "<string>",
                  "hostname": "<string>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "name": "<string>",
                  "port": "<long>",
                  "server_type": "<string>",
                  "username": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "applicationServerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/application-servers": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > application-servers"
        ],
        "summary": "Get all application servers details by Nimble / Alletra 6K",
        "description": "Get all application servers details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter application servers by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort application servers by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "hostname": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "server_type": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "generation": "<integer>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "port": "<long>",
                      "resourceUri": "<string>",
                      "type": "<string>",
                      "username": "<string>"
                    },
                    {
                      "hostname": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "server_type": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "generation": "<integer>",
                      "metadata": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ],
                      "port": "<long>",
                      "resourceUri": "<string>",
                      "type": "<string>",
                      "username": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > application-servers"
        ],
        "summary": "Create Nimble / Alletra 6K application server in system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K application server in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "hostname": "<string>",
                  "description": "<string>",
                  "metadata": [
                    {
                      "key": "<string>",
                      "value": "<string>"
                    },
                    {
                      "key": "<string>",
                      "value": "<string>"
                    }
                  ],
                  "port": "<long>",
                  "server_type": "<string>",
                  "username": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/alarms/{alarmId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > alarms > {alarmId}"
        ],
        "summary": "Get all alarms of Nimble / Alletra 6K identified by {alarmId}",
        "description": "Get all alarms of Nimble / Alletra 6K identified by {alarmId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "alarmId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "cupidatat aute officia deserunt",
                  "ack_time": "<long>",
                  "activity": "<string>",
                  "alarm_type": "<long>",
                  "array": "<string>",
                  "category": "<string>",
                  "curr_onset_event_id": "<string>",
                  "id": "<string>",
                  "next_notification_time": "<long>",
                  "object_id": "<string>",
                  "object_name": "<string>",
                  "object_type": "<string>",
                  "onset_time": "<long>",
                  "remind_every": "<long>",
                  "remind_every_unit": "<string>",
                  "severity": "<string>",
                  "status": "<string>",
                  "user_full_name": "<string>",
                  "user_id": "<string>",
                  "user_name": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "resourceUri": "<string>",
                  "summary": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/alarms": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > alarms"
        ],
        "summary": "Get all alarms of Nimble / Alletra 6K",
        "description": "Get all alarms of Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Alarms by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Data query to sort Alarm resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "ack_time": "<long>",
                      "activity": "<string>",
                      "array": "<string>",
                      "category": "<string>",
                      "curr_onset_event_id": "<string>",
                      "id": "<string>",
                      "next_notification_time": "<long>",
                      "object_id": "<string>",
                      "object_name": "<string>",
                      "object_type": "<string>",
                      "onset_time": "<long>",
                      "remind_every": "<long>",
                      "remind_every_unit": "<string>",
                      "severity": "<string>",
                      "status": "<string>",
                      "user_full_name": "<string>",
                      "user_id": "<string>",
                      "user_name": "<string>",
                      "alarm_type": "<long>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "resourceUri": "<string>",
                      "summary": "<string>",
                      "type": "<string>"
                    },
                    {
                      "ack_time": "<long>",
                      "activity": "<string>",
                      "array": "<string>",
                      "category": "<string>",
                      "curr_onset_event_id": "<string>",
                      "id": "<string>",
                      "next_notification_time": "<long>",
                      "object_id": "<string>",
                      "object_name": "<string>",
                      "object_type": "<string>",
                      "onset_time": "<long>",
                      "remind_every": "<long>",
                      "remind_every_unit": "<string>",
                      "severity": "<string>",
                      "status": "<string>",
                      "user_full_name": "<string>",
                      "user_id": "<string>",
                      "user_name": "<string>",
                      "alarm_type": "<long>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "resourceUri": "<string>",
                      "summary": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/actions/merge": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > actions > merge"
        ],
        "summary": "Perform group merge with the specified group.",
        "description": "Perform group merge with the specified group.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "src_group_name": "<string>",
                  "src_group_ip": "<string>",
                  "src_username": "<string>",
                  "src_password": "<string>",
                  "force": "<boolean>",
                  "skip_secondary_mgmt_ip": "<boolean>",
                  "src_passphrase": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/access-control-records/{accessControlRecordId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > access-control-records > {accessControlRecordId}"
        ],
        "summary": "Remove access-control-record identified by {accessControlRecordId} from Nimble / Alletra 6K",
        "description": "Remove access-control-record identified by {accessControlRecordId} from Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "accessControlRecordId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > access-control-records > {accessControlRecordId}"
        ],
        "summary": "Get details of Nimble / Alletra 6K access-control-records identified by {accessControlRecordId}",
        "description": "Get details of Nimble / Alletra 6K access-control-records identified by {accessControlRecordId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "accessControlRecordId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "mollit laborum id",
                  "access_protocol": "<string>",
                  "chap_user_id": "<string>",
                  "chap_user_name": "<string>",
                  "creation_time": "<long>",
                  "id": "<string>",
                  "initiator_group_id": "<string>",
                  "initiator_group_name": "<string>",
                  "last_modified": "<long>",
                  "lun": "<long>",
                  "pe_id": "<string>",
                  "pe_lun": "<long>",
                  "pe_name": "<string>",
                  "snap_id": "<string>",
                  "snap_name": "<string>",
                  "vol_id": "<string>",
                  "vol_name": "<string>",
                  "apply_to": "<string>",
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "pe_ids": [
                    "<string>",
                    "<string>"
                  ],
                  "resourceUri": "<string>",
                  "snapluns": [
                    {
                      "id": "<string>",
                      "lun": "<long>",
                      "name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "lun": "<long>",
                      "name": "<string>"
                    }
                  ],
                  "type": "<string>",
                  "vol_agent_type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}/access-control-records": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > access-control-records"
        ],
        "summary": "Get all access-control-records details by Nimble / Alletra 6K",
        "description": "Get all access-control-records details by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Access Control Record  by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort Access Control Record  resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "access_protocol": "<string>",
                      "chap_user_id": "<string>",
                      "chap_user_name": "<string>",
                      "creation_time": "<long>",
                      "id": "<string>",
                      "initiator_group_id": "<string>",
                      "initiator_group_name": "<string>",
                      "last_modified": "<long>",
                      "lun": "<long>",
                      "pe_id": "<string>",
                      "pe_lun": "<long>",
                      "pe_name": "<string>",
                      "snap_id": "<string>",
                      "snap_name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>",
                      "apply_to": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "pe_ids": [
                        "<string>",
                        "<string>"
                      ],
                      "resourceUri": "<string>",
                      "snapluns": [
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        }
                      ],
                      "type": "<string>",
                      "vol_agent_type": "<string>"
                    },
                    {
                      "access_protocol": "<string>",
                      "chap_user_id": "<string>",
                      "chap_user_name": "<string>",
                      "creation_time": "<long>",
                      "id": "<string>",
                      "initiator_group_id": "<string>",
                      "initiator_group_name": "<string>",
                      "last_modified": "<long>",
                      "lun": "<long>",
                      "pe_id": "<string>",
                      "pe_lun": "<long>",
                      "pe_name": "<string>",
                      "snap_id": "<string>",
                      "snap_name": "<string>",
                      "vol_id": "<string>",
                      "vol_name": "<string>",
                      "apply_to": "<string>",
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "pe_ids": [
                        "<string>",
                        "<string>"
                      ],
                      "resourceUri": "<string>",
                      "snapluns": [
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "lun": "<long>",
                          "name": "<string>"
                        }
                      ],
                      "type": "<string>",
                      "vol_agent_type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId} > access-control-records"
        ],
        "summary": "Create Nimble / Alletra 6K access control record in system identified by {systemId}",
        "description": "Create Nimble / Alletra 6K access control record in system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "apply_to": "<string>",
                  "chap_user_id": "<string>",
                  "initiator_group_id": "<string>",
                  "lun": "<long>",
                  "pe_id": "<string>",
                  "pe_ids": [
                    "<string>",
                    "<string>"
                  ],
                  "snap_id": "<string>",
                  "vol_id": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2/{systemId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId}"
        ],
        "summary": "Get Nimble / Alletra 6K object identified by {systemId}",
        "description": "Get Nimble / Alletra 6K object identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "occaecat labore sed non tempor",
                  "id": "<string>",
                  "name": "<string>",
                  "access_protocol_list": [
                    "<string>",
                    "<string>"
                  ],
                  "alarms_enabled": "<boolean>",
                  "alert_from_email_addr": "<string>",
                  "alert_min_level": "<string>",
                  "alert_to_email_addrs": "<string>",
                  "allow_support_tunnel": "<boolean>",
                  "array_unassign_migration_status": [
                    {
                      "bytes_migrated": "<long>",
                      "bytes_remaining": "<long>",
                      "destination_arrays": [
                        {
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "estimated_completion_time": "<long>",
                      "id": "<string>",
                      "name": "<string>",
                      "start_time": "<long>"
                    },
                    {
                      "bytes_migrated": "<long>",
                      "bytes_remaining": "<long>",
                      "destination_arrays": [
                        {
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "array_id": "<string>",
                          "array_name": "<string>",
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "estimated_completion_time": "<long>",
                      "id": "<string>",
                      "name": "<string>",
                      "start_time": "<long>"
                    }
                  ],
                  "arrays": {
                    "items": [
                      {
                        "all_flash": "<boolean>",
                        "allow_lower_limits": "<boolean>",
                        "available_bytes": "<long>",
                        "create_pool": "<boolean>",
                        "creation_time": "<long>",
                        "ctrlr_a_support_ip": "<string>",
                        "ctrlr_b_support_ip": "<string>",
                        "customerId": "<string>",
                        "dedupe_capacity_bytes": "<long>",
                        "dedupe_usage_bytes": "<long>",
                        "extended_model": "<string>",
                        "fc_port_count": "<long>",
                        "force": "<boolean>",
                        "full_name": "<string>",
                        "generation": "<integer>",
                        "gig_nic_port_count": "<long>",
                        "group_state": "<string>",
                        "id": "<string>",
                        "is_fully_dedupe_capable": "<boolean>",
                        "is_sfa": "<boolean>",
                        "is_supported_hw_config": "<boolean>",
                        "last_modified": "<long>",
                        "model": "<string>",
                        "model_sub_type": "<string>",
                        "name": "<string>",
                        "nic_list": [
                          {
                            "data_ip": "<string>",
                            "name": "<string>",
                            "subnet_label": "<string>",
                            "tagged": "<boolean>"
                          },
                          {
                            "data_ip": "<string>",
                            "name": "<string>",
                            "subnet_label": "<string>",
                            "tagged": "<boolean>"
                          }
                        ],
                        "pending_delete_bytes": "<long>",
                        "pool_description": "<string>",
                        "pool_id": "<string>",
                        "pool_name": "<string>",
                        "public_key": {
                          "key": "<string>",
                          "key_name": "<string>",
                          "key_type": "<string>"
                        },
                        "raw_capacity_bytes": "<long>",
                        "resourceUri": "<string>",
                        "role": "<string>",
                        "search_name": "<string>",
                        "secondary_mgmt_ip": "<string>",
                        "serial": "<string>",
                        "snap_compression": "<number>",
                        "snap_saved_bytes": "<long>",
                        "snap_space_reduction": "<number>",
                        "snap_usage_bytes": "<long>",
                        "snap_usage_uncompressed_bytes": "<long>",
                        "status": "<string>",
                        "ten_gig_sfp_nic_port_count": "<long>",
                        "ten_gig_t_nic_port_count": "<long>",
                        "upgrade": {
                          "messages": [
                            {
                              "code": "<long>",
                              "severity": "<string>",
                              "text": "<string>"
                            },
                            {
                              "code": "<long>",
                              "severity": "<string>",
                              "text": "<string>"
                            }
                          ],
                          "stage": "<string>",
                          "state": "<string>",
                          "type": "<string>"
                        },
                        "usable_cache_capacity_bytes": "<long>",
                        "usable_capacity_bytes": "<long>",
                        "usage": "<long>",
                        "usage_valid": "<boolean>",
                        "version": "<string>",
                        "vol_compression": "<number>",
                        "vol_saved_bytes": "<long>",
                        "vol_usage_bytes": "<long>",
                        "vol_usage_uncompressed_bytes": "<long>",
                        "zconf_ipaddrs": [
                          {
                            "ip_addr": "<string>"
                          },
                          {
                            "ip_addr": "<string>"
                          }
                        ]
                      },
                      {
                        "all_flash": "<boolean>",
                        "allow_lower_limits": "<boolean>",
                        "available_bytes": "<long>",
                        "create_pool": "<boolean>",
                        "creation_time": "<long>",
                        "ctrlr_a_support_ip": "<string>",
                        "ctrlr_b_support_ip": "<string>",
                        "customerId": "<string>",
                        "dedupe_capacity_bytes": "<long>",
                        "dedupe_usage_bytes": "<long>",
                        "extended_model": "<string>",
                        "fc_port_count": "<long>",
                        "force": "<boolean>",
                        "full_name": "<string>",
                        "generation": "<integer>",
                        "gig_nic_port_count": "<long>",
                        "group_state": "<string>",
                        "id": "<string>",
                        "is_fully_dedupe_capable": "<boolean>",
                        "is_sfa": "<boolean>",
                        "is_supported_hw_config": "<boolean>",
                        "last_modified": "<long>",
                        "model": "<string>",
                        "model_sub_type": "<string>",
                        "name": "<string>",
                        "nic_list": [
                          {
                            "data_ip": "<string>",
                            "name": "<string>",
                            "subnet_label": "<string>",
                            "tagged": "<boolean>"
                          },
                          {
                            "data_ip": "<string>",
                            "name": "<string>",
                            "subnet_label": "<string>",
                            "tagged": "<boolean>"
                          }
                        ],
                        "pending_delete_bytes": "<long>",
                        "pool_description": "<string>",
                        "pool_id": "<string>",
                        "pool_name": "<string>",
                        "public_key": {
                          "key": "<string>",
                          "key_name": "<string>",
                          "key_type": "<string>"
                        },
                        "raw_capacity_bytes": "<long>",
                        "resourceUri": "<string>",
                        "role": "<string>",
                        "search_name": "<string>",
                        "secondary_mgmt_ip": "<string>",
                        "serial": "<string>",
                        "snap_compression": "<number>",
                        "snap_saved_bytes": "<long>",
                        "snap_space_reduction": "<number>",
                        "snap_usage_bytes": "<long>",
                        "snap_usage_uncompressed_bytes": "<long>",
                        "status": "<string>",
                        "ten_gig_sfp_nic_port_count": "<long>",
                        "ten_gig_t_nic_port_count": "<long>",
                        "upgrade": {
                          "messages": [
                            {
                              "code": "<long>",
                              "severity": "<string>",
                              "text": "<string>"
                            },
                            {
                              "code": "<long>",
                              "severity": "<string>",
                              "text": "<string>"
                            }
                          ],
                          "stage": "<string>",
                          "state": "<string>",
                          "type": "<string>"
                        },
                        "usable_cache_capacity_bytes": "<long>",
                        "usable_capacity_bytes": "<long>",
                        "usage": "<long>",
                        "usage_valid": "<boolean>",
                        "version": "<string>",
                        "vol_compression": "<number>",
                        "vol_saved_bytes": "<long>",
                        "vol_usage_bytes": "<long>",
                        "vol_usage_uncompressed_bytes": "<long>",
                        "zconf_ipaddrs": [
                          {
                            "ip_addr": "<string>"
                          },
                          {
                            "ip_addr": "<string>"
                          }
                        ]
                      }
                    ],
                    "pageLimit": "<integer>",
                    "pageOffset": "<integer>",
                    "total": "<integer>"
                  },
                  "associated_links": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "auto_switchover_enabled": "<boolean>",
                  "auto_switchover_messages": [
                    {
                      "code": "<long>",
                      "severity": "<string>",
                      "text": "<string>"
                    },
                    {
                      "code": "<long>",
                      "severity": "<string>",
                      "text": "<string>"
                    }
                  ],
                  "autoclean_unmanaged_snapshots_enabled": "<boolean>",
                  "autoclean_unmanaged_snapshots_ttl_unit": "<long>",
                  "autosupport_enabled": "<boolean>",
                  "cc_mode_enabled": "<boolean>",
                  "clone_ratio": "<number>",
                  "compressed_snap_usage_bytes": "<long>",
                  "compressed_vol_usage_bytes": "<long>",
                  "compression_ratio": "<number>",
                  "customerId": "<string>",
                  "data_rebalance_status": [
                    {
                      "array_data_migration_status": [
                        {
                          "id": "<string>",
                          "is_data_source": "<boolean>",
                          "name": "<string>",
                          "space_utilization": "<long>"
                        },
                        {
                          "id": "<string>",
                          "is_data_source": "<boolean>",
                          "name": "<string>",
                          "space_utilization": "<long>"
                        }
                      ],
                      "id": "<string>",
                      "name": "<string>",
                      "pool_avg_space_utilization": "<long>"
                    },
                    {
                      "array_data_migration_status": [
                        {
                          "id": "<string>",
                          "is_data_source": "<boolean>",
                          "name": "<string>",
                          "space_utilization": "<long>"
                        },
                        {
                          "id": "<string>",
                          "is_data_source": "<boolean>",
                          "name": "<string>",
                          "space_utilization": "<long>"
                        }
                      ],
                      "id": "<string>",
                      "name": "<string>",
                      "pool_avg_space_utilization": "<long>"
                    }
                  ],
                  "data_reduction_ratio": "<number>",
                  "date": "<long>",
                  "dedupe_ratio": "<number>",
                  "default_iscsi_target_scope": "<string>",
                  "default_snap_limit_percent": "<long>",
                  "default_snap_reserve": "<long>",
                  "default_snap_warn_level": "<long>",
                  "default_volume_limit": "<long>",
                  "default_volume_reserve": "<long>",
                  "default_volume_warn_level": "<long>",
                  "dns_servers": [
                    {
                      "ip_addr": "<string>"
                    },
                    {
                      "ip_addr": "<string>"
                    }
                  ],
                  "domain_name": "<string>",
                  "encryption_config": {
                    "cipher": "<string>",
                    "encryption_active": "<boolean>",
                    "encryption_key_manager": "<string>",
                    "master_key_set": "<boolean>",
                    "mode": "<string>",
                    "scope": "<string>"
                  },
                  "failover_mode": "<string>",
                  "fc_enabled": "<boolean>",
                  "free_space": "<long>",
                  "generation": "<integer>",
                  "group_snapshot_ttl": "<long>",
                  "group_target_enabled": "<boolean>",
                  "group_target_name": "<string>",
                  "iscsi_automatic_connection_method": "<boolean>",
                  "iscsi_connection_rebalancing": "<boolean>",
                  "iscsi_enabled": "<boolean>",
                  "isns_enabled": "<boolean>",
                  "isns_port": "<long>",
                  "isns_server": "<string>",
                  "last_login": "<string>",
                  "leader_array_name": "<string>",
                  "leader_array_serial": "<string>",
                  "management_service_backup_array_name": "<string>",
                  "management_service_backup_status": "<string>",
                  "member_list": [
                    "<string>",
                    "<string>"
                  ],
                  "merge_group_name": "<string>",
                  "merge_state": "<string>",
                  "ntp_server": "<string>",
                  "num_connections": "<long>",
                  "num_snapcolls": "<long>",
                  "num_snaps": "<long>",
                  "pending_deletes": "<long>",
                  "proxy_port": "<long>",
                  "proxy_server": "<string>",
                  "proxy_username": "<string>",
                  "raw_cache_capacity": "<long>",
                  "raw_capacity": "<long>",
                  "repl_throttle_list": [
                    {
                      "creation_time": "<long>",
                      "days": "<string>",
                      "description": "<string>",
                      "id": "<string>",
                      "last_modified": "<long>",
                      "name": "<string>",
                      "thr_at_time": "<long>",
                      "thr_bandwidth": "<long>",
                      "thr_bandwidth_kbps": "<long>",
                      "thr_bandwidth_limit_kbps": "<long>",
                      "thr_day_mask": "<long>",
                      "thr_partner_id": "<string>",
                      "thr_until_time": "<long>"
                    },
                    {
                      "creation_time": "<long>",
                      "days": "<string>",
                      "description": "<string>",
                      "id": "<string>",
                      "last_modified": "<long>",
                      "name": "<string>",
                      "thr_at_time": "<long>",
                      "thr_bandwidth": "<long>",
                      "thr_bandwidth_kbps": "<long>",
                      "thr_bandwidth_limit_kbps": "<long>",
                      "thr_day_mask": "<long>",
                      "thr_partner_id": "<string>",
                      "thr_until_time": "<long>"
                    }
                  ],
                  "repl_throttled_bandwidth": "<long>",
                  "repl_throttled_bandwidth_kbps": "<long>",
                  "resourceUri": "<string>",
                  "savings": "<long>",
                  "savings_clone": "<long>",
                  "savings_compression": "<long>",
                  "savings_data_reduction": "<long>",
                  "savings_dedupe": "<long>",
                  "savings_ratio": "<number>",
                  "savings_vol_thin_provisioning": "<long>",
                  "scsi_vendor_id": "<string>",
                  "send_alert_to_support": "<boolean>",
                  "smtp_port": "<long>",
                  "smtp_server": "<string>",
                  "snap_compression_ratio": "<number>",
                  "snap_retn_meter_high": "<long>",
                  "snap_retn_meter_very_high": "<long>",
                  "snap_usage_populated": "<long>",
                  "snmp_community": "<string>",
                  "snmp_get_enabled": "<boolean>",
                  "snmp_get_port": "<long>",
                  "snmp_sys_contact": "<string>",
                  "snmp_sys_location": "<string>",
                  "snmp_trap_enabled": "<boolean>",
                  "snmp_trap_host": "<string>",
                  "snmp_trap_port": "<long>",
                  "space_info_valid": "<boolean>",
                  "syslogd_enabled": "<boolean>",
                  "syslogd_port": "<long>",
                  "syslogd_server": "<string>",
                  "syslogd_servers": [
                    {
                      "syslog_port": "<long>",
                      "syslog_server": "<string>"
                    },
                    {
                      "syslog_port": "<long>",
                      "syslog_server": "<string>"
                    }
                  ],
                  "systemHeadroom": {
                    "performance": {
                      "availableHeadroom": "<string>",
                      "utilization": "<number>"
                    }
                  },
                  "tdz_enabled": "<boolean>",
                  "tdz_prefix": "<string>",
                  "timezone": "<string>",
                  "tlsv1_enabled": "<boolean>",
                  "uncompressed_snap_usage_bytes": "<long>",
                  "uncompressed_vol_usage_bytes": "<long>",
                  "unique_name_enabled": "<boolean>",
                  "unused_reserve_bytes": "<long>",
                  "update_array_names": "<string>",
                  "update_download_end_time": "<long>",
                  "update_download_error_code": "<string>",
                  "update_download_start_time": "<long>",
                  "update_downloading": "<boolean>",
                  "update_end_time": "<long>",
                  "update_error_code": "<string>",
                  "update_progress_msg": "<string>",
                  "update_start_time": "<long>",
                  "update_state": "<string>",
                  "usable_cache_capacity": "<long>",
                  "usable_capacity_bytes": "<long>",
                  "usage": "<long>",
                  "usage_valid": "<boolean>",
                  "user_inactivity_timeout": "<long>",
                  "version_current": "<string>",
                  "version_rollback": "<string>",
                  "version_target": "<string>",
                  "vol_compression_ratio": "<number>",
                  "vol_thin_provisioning_ratio": "<number>",
                  "volume_migration_status": [
                    {
                      "array_list": [
                        {
                          "id": "<string>",
                          "is_data_source": "<boolean>",
                          "name": "<string>",
                          "space_utilization": "<long>"
                        },
                        {
                          "id": "<string>",
                          "is_data_source": "<boolean>",
                          "name": "<string>",
                          "space_utilization": "<long>"
                        }
                      ],
                      "dest_pool_id": "<string>",
                      "dest_pool_name": "<string>",
                      "move_bytes_migrated": "<long>",
                      "move_bytes_remaining": "<long>",
                      "move_est_compl_time": "<long>",
                      "move_start_time": "<long>",
                      "root_vol_id": "<string>",
                      "root_vol_name": "<string>",
                      "source_pool_id": "<string>",
                      "source_pool_name": "<string>"
                    },
                    {
                      "array_list": [
                        {
                          "id": "<string>",
                          "is_data_source": "<boolean>",
                          "name": "<string>",
                          "space_utilization": "<long>"
                        },
                        {
                          "id": "<string>",
                          "is_data_source": "<boolean>",
                          "name": "<string>",
                          "space_utilization": "<long>"
                        }
                      ],
                      "dest_pool_id": "<string>",
                      "dest_pool_name": "<string>",
                      "move_bytes_migrated": "<long>",
                      "move_bytes_remaining": "<long>",
                      "move_est_compl_time": "<long>",
                      "move_start_time": "<long>",
                      "root_vol_id": "<string>",
                      "root_vol_name": "<string>",
                      "source_pool_id": "<string>",
                      "source_pool_name": "<string>"
                    }
                  ],
                  "vss_validation_timeout": "<long>",
                  "vvol_enabled": "<boolean>",
                  "witness_status": [
                    {
                      "array_name": "<string>",
                      "role": "<string>",
                      "witness_connectivity_message": "<string>",
                      "witness_connectivity_state": "<string>"
                    },
                    {
                      "array_name": "<string>",
                      "role": "<string>",
                      "witness_connectivity_message": "<string>",
                      "witness_connectivity_state": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type2 > {systemId}"
        ],
        "summary": "Edit settings of Nimble / Alletra 6K system identified by {systemId}",
        "description": "Edit settings of Nimble / Alletra 6K system identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "auto_switchover_enabled": "<boolean>",
                  "autoclean_unmanaged_snapshots_enabled": "<boolean>",
                  "autoclean_unmanaged_snapshots_ttl_unit": "<long>",
                  "cc_mode_enabled": "<boolean>",
                  "date": "<long>",
                  "default_iscsi_target_scope": "<string>",
                  "group_snapshot_ttl": "<long>",
                  "group_target_name": "<string>",
                  "name": "<string>",
                  "ntp_server": "<string>",
                  "tdz_enabled": "<boolean>",
                  "tdz_prefix": "<string>",
                  "timezone": "<string>",
                  "tlsv1_enabled": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type2": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type2"
        ],
        "summary": "Get all storage systems by Nimble / Alletra 6K",
        "description": "Get all storage systems by Nimble / Alletra 6K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter systems by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to sort systems by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "access_protocol_list": [
                        "<string>",
                        "<string>"
                      ],
                      "alarms_enabled": "<boolean>",
                      "alert_from_email_addr": "<string>",
                      "alert_min_level": "<string>",
                      "alert_to_email_addrs": "<string>",
                      "allow_support_tunnel": "<boolean>",
                      "array_unassign_migration_status": [
                        {
                          "bytes_migrated": "<long>",
                          "bytes_remaining": "<long>",
                          "destination_arrays": [
                            {
                              "array_id": "<string>",
                              "array_name": "<string>",
                              "id": "<string>",
                              "name": "<string>"
                            },
                            {
                              "array_id": "<string>",
                              "array_name": "<string>",
                              "id": "<string>",
                              "name": "<string>"
                            }
                          ],
                          "estimated_completion_time": "<long>",
                          "id": "<string>",
                          "name": "<string>",
                          "start_time": "<long>"
                        },
                        {
                          "bytes_migrated": "<long>",
                          "bytes_remaining": "<long>",
                          "destination_arrays": [
                            {
                              "array_id": "<string>",
                              "array_name": "<string>",
                              "id": "<string>",
                              "name": "<string>"
                            },
                            {
                              "array_id": "<string>",
                              "array_name": "<string>",
                              "id": "<string>",
                              "name": "<string>"
                            }
                          ],
                          "estimated_completion_time": "<long>",
                          "id": "<string>",
                          "name": "<string>",
                          "start_time": "<long>"
                        }
                      ],
                      "arrays": {
                        "items": [
                          {
                            "all_flash": "<boolean>",
                            "allow_lower_limits": "<boolean>",
                            "available_bytes": "<long>",
                            "create_pool": "<boolean>",
                            "creation_time": "<long>",
                            "ctrlr_a_support_ip": "<string>",
                            "ctrlr_b_support_ip": "<string>",
                            "customerId": "<string>",
                            "dedupe_capacity_bytes": "<long>",
                            "dedupe_usage_bytes": "<long>",
                            "extended_model": "<string>",
                            "fc_port_count": "<long>",
                            "force": "<boolean>",
                            "full_name": "<string>",
                            "generation": "<integer>",
                            "gig_nic_port_count": "<long>",
                            "group_state": "<string>",
                            "id": "<string>",
                            "is_fully_dedupe_capable": "<boolean>",
                            "is_sfa": "<boolean>",
                            "is_supported_hw_config": "<boolean>",
                            "last_modified": "<long>",
                            "model": "<string>",
                            "model_sub_type": "<string>",
                            "name": "<string>",
                            "nic_list": [
                              {
                                "data_ip": "<string>",
                                "name": "<string>",
                                "subnet_label": "<string>",
                                "tagged": "<boolean>"
                              },
                              {
                                "data_ip": "<string>",
                                "name": "<string>",
                                "subnet_label": "<string>",
                                "tagged": "<boolean>"
                              }
                            ],
                            "pending_delete_bytes": "<long>",
                            "pool_description": "<string>",
                            "pool_id": "<string>",
                            "pool_name": "<string>",
                            "public_key": {
                              "key": "<string>",
                              "key_name": "<string>",
                              "key_type": "<string>"
                            },
                            "raw_capacity_bytes": "<long>",
                            "resourceUri": "<string>",
                            "role": "<string>",
                            "search_name": "<string>",
                            "secondary_mgmt_ip": "<string>",
                            "serial": "<string>",
                            "snap_compression": "<number>",
                            "snap_saved_bytes": "<long>",
                            "snap_space_reduction": "<number>",
                            "snap_usage_bytes": "<long>",
                            "snap_usage_uncompressed_bytes": "<long>",
                            "status": "<string>",
                            "ten_gig_sfp_nic_port_count": "<long>",
                            "ten_gig_t_nic_port_count": "<long>",
                            "upgrade": {
                              "messages": [
                                {
                                  "code": "<long>",
                                  "severity": "<string>",
                                  "text": "<string>"
                                },
                                {
                                  "code": "<long>",
                                  "severity": "<string>",
                                  "text": "<string>"
                                }
                              ],
                              "stage": "<string>",
                              "state": "<string>",
                              "type": "<string>"
                            },
                            "usable_cache_capacity_bytes": "<long>",
                            "usable_capacity_bytes": "<long>",
                            "usage": "<long>",
                            "usage_valid": "<boolean>",
                            "version": "<string>",
                            "vol_compression": "<number>",
                            "vol_saved_bytes": "<long>",
                            "vol_usage_bytes": "<long>",
                            "vol_usage_uncompressed_bytes": "<long>",
                            "zconf_ipaddrs": [
                              {
                                "ip_addr": "<string>"
                              },
                              {
                                "ip_addr": "<string>"
                              }
                            ]
                          },
                          {
                            "all_flash": "<boolean>",
                            "allow_lower_limits": "<boolean>",
                            "available_bytes": "<long>",
                            "create_pool": "<boolean>",
                            "creation_time": "<long>",
                            "ctrlr_a_support_ip": "<string>",
                            "ctrlr_b_support_ip": "<string>",
                            "customerId": "<string>",
                            "dedupe_capacity_bytes": "<long>",
                            "dedupe_usage_bytes": "<long>",
                            "extended_model": "<string>",
                            "fc_port_count": "<long>",
                            "force": "<boolean>",
                            "full_name": "<string>",
                            "generation": "<integer>",
                            "gig_nic_port_count": "<long>",
                            "group_state": "<string>",
                            "id": "<string>",
                            "is_fully_dedupe_capable": "<boolean>",
                            "is_sfa": "<boolean>",
                            "is_supported_hw_config": "<boolean>",
                            "last_modified": "<long>",
                            "model": "<string>",
                            "model_sub_type": "<string>",
                            "name": "<string>",
                            "nic_list": [
                              {
                                "data_ip": "<string>",
                                "name": "<string>",
                                "subnet_label": "<string>",
                                "tagged": "<boolean>"
                              },
                              {
                                "data_ip": "<string>",
                                "name": "<string>",
                                "subnet_label": "<string>",
                                "tagged": "<boolean>"
                              }
                            ],
                            "pending_delete_bytes": "<long>",
                            "pool_description": "<string>",
                            "pool_id": "<string>",
                            "pool_name": "<string>",
                            "public_key": {
                              "key": "<string>",
                              "key_name": "<string>",
                              "key_type": "<string>"
                            },
                            "raw_capacity_bytes": "<long>",
                            "resourceUri": "<string>",
                            "role": "<string>",
                            "search_name": "<string>",
                            "secondary_mgmt_ip": "<string>",
                            "serial": "<string>",
                            "snap_compression": "<number>",
                            "snap_saved_bytes": "<long>",
                            "snap_space_reduction": "<number>",
                            "snap_usage_bytes": "<long>",
                            "snap_usage_uncompressed_bytes": "<long>",
                            "status": "<string>",
                            "ten_gig_sfp_nic_port_count": "<long>",
                            "ten_gig_t_nic_port_count": "<long>",
                            "upgrade": {
                              "messages": [
                                {
                                  "code": "<long>",
                                  "severity": "<string>",
                                  "text": "<string>"
                                },
                                {
                                  "code": "<long>",
                                  "severity": "<string>",
                                  "text": "<string>"
                                }
                              ],
                              "stage": "<string>",
                              "state": "<string>",
                              "type": "<string>"
                            },
                            "usable_cache_capacity_bytes": "<long>",
                            "usable_capacity_bytes": "<long>",
                            "usage": "<long>",
                            "usage_valid": "<boolean>",
                            "version": "<string>",
                            "vol_compression": "<number>",
                            "vol_saved_bytes": "<long>",
                            "vol_usage_bytes": "<long>",
                            "vol_usage_uncompressed_bytes": "<long>",
                            "zconf_ipaddrs": [
                              {
                                "ip_addr": "<string>"
                              },
                              {
                                "ip_addr": "<string>"
                              }
                            ]
                          }
                        ],
                        "pageLimit": "<integer>",
                        "pageOffset": "<integer>",
                        "total": "<integer>"
                      },
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "auto_switchover_enabled": "<boolean>",
                      "auto_switchover_messages": [
                        {
                          "code": "<long>",
                          "severity": "<string>",
                          "text": "<string>"
                        },
                        {
                          "code": "<long>",
                          "severity": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "autoclean_unmanaged_snapshots_enabled": "<boolean>",
                      "autoclean_unmanaged_snapshots_ttl_unit": "<long>",
                      "autosupport_enabled": "<boolean>",
                      "cc_mode_enabled": "<boolean>",
                      "clone_ratio": "<number>",
                      "compressed_snap_usage_bytes": "<long>",
                      "compressed_vol_usage_bytes": "<long>",
                      "compression_ratio": "<number>",
                      "customerId": "<string>",
                      "data_rebalance_status": [
                        {
                          "array_data_migration_status": [
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            },
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            }
                          ],
                          "id": "<string>",
                          "name": "<string>",
                          "pool_avg_space_utilization": "<long>"
                        },
                        {
                          "array_data_migration_status": [
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            },
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            }
                          ],
                          "id": "<string>",
                          "name": "<string>",
                          "pool_avg_space_utilization": "<long>"
                        }
                      ],
                      "data_reduction_ratio": "<number>",
                      "date": "<long>",
                      "dedupe_ratio": "<number>",
                      "default_iscsi_target_scope": "<string>",
                      "default_snap_limit_percent": "<long>",
                      "default_snap_reserve": "<long>",
                      "default_snap_warn_level": "<long>",
                      "default_volume_limit": "<long>",
                      "default_volume_reserve": "<long>",
                      "default_volume_warn_level": "<long>",
                      "dns_servers": [
                        {
                          "ip_addr": "<string>"
                        },
                        {
                          "ip_addr": "<string>"
                        }
                      ],
                      "domain_name": "<string>",
                      "encryption_config": {
                        "cipher": "<string>",
                        "encryption_active": "<boolean>",
                        "encryption_key_manager": "<string>",
                        "master_key_set": "<boolean>",
                        "mode": "<string>",
                        "scope": "<string>"
                      },
                      "failover_mode": "<string>",
                      "fc_enabled": "<boolean>",
                      "free_space": "<long>",
                      "generation": "<integer>",
                      "group_snapshot_ttl": "<long>",
                      "group_target_enabled": "<boolean>",
                      "group_target_name": "<string>",
                      "iscsi_automatic_connection_method": "<boolean>",
                      "iscsi_connection_rebalancing": "<boolean>",
                      "iscsi_enabled": "<boolean>",
                      "isns_enabled": "<boolean>",
                      "isns_port": "<long>",
                      "isns_server": "<string>",
                      "last_login": "<string>",
                      "leader_array_name": "<string>",
                      "leader_array_serial": "<string>",
                      "management_service_backup_array_name": "<string>",
                      "management_service_backup_status": "<string>",
                      "member_list": [
                        "<string>",
                        "<string>"
                      ],
                      "merge_group_name": "<string>",
                      "merge_state": "<string>",
                      "ntp_server": "<string>",
                      "num_connections": "<long>",
                      "num_snapcolls": "<long>",
                      "num_snaps": "<long>",
                      "pending_deletes": "<long>",
                      "proxy_port": "<long>",
                      "proxy_server": "<string>",
                      "proxy_username": "<string>",
                      "raw_cache_capacity": "<long>",
                      "raw_capacity": "<long>",
                      "repl_throttle_list": [
                        {
                          "creation_time": "<long>",
                          "days": "<string>",
                          "description": "<string>",
                          "id": "<string>",
                          "last_modified": "<long>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_bandwidth_kbps": "<long>",
                          "thr_bandwidth_limit_kbps": "<long>",
                          "thr_day_mask": "<long>",
                          "thr_partner_id": "<string>",
                          "thr_until_time": "<long>"
                        },
                        {
                          "creation_time": "<long>",
                          "days": "<string>",
                          "description": "<string>",
                          "id": "<string>",
                          "last_modified": "<long>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_bandwidth_kbps": "<long>",
                          "thr_bandwidth_limit_kbps": "<long>",
                          "thr_day_mask": "<long>",
                          "thr_partner_id": "<string>",
                          "thr_until_time": "<long>"
                        }
                      ],
                      "repl_throttled_bandwidth": "<long>",
                      "repl_throttled_bandwidth_kbps": "<long>",
                      "resourceUri": "<string>",
                      "savings": "<long>",
                      "savings_clone": "<long>",
                      "savings_compression": "<long>",
                      "savings_data_reduction": "<long>",
                      "savings_dedupe": "<long>",
                      "savings_ratio": "<number>",
                      "savings_vol_thin_provisioning": "<long>",
                      "scsi_vendor_id": "<string>",
                      "send_alert_to_support": "<boolean>",
                      "smtp_port": "<long>",
                      "smtp_server": "<string>",
                      "snap_compression_ratio": "<number>",
                      "snap_retn_meter_high": "<long>",
                      "snap_retn_meter_very_high": "<long>",
                      "snap_usage_populated": "<long>",
                      "snmp_community": "<string>",
                      "snmp_get_enabled": "<boolean>",
                      "snmp_get_port": "<long>",
                      "snmp_sys_contact": "<string>",
                      "snmp_sys_location": "<string>",
                      "snmp_trap_enabled": "<boolean>",
                      "snmp_trap_host": "<string>",
                      "snmp_trap_port": "<long>",
                      "space_info_valid": "<boolean>",
                      "syslogd_enabled": "<boolean>",
                      "syslogd_port": "<long>",
                      "syslogd_server": "<string>",
                      "syslogd_servers": [
                        {
                          "syslog_port": "<long>",
                          "syslog_server": "<string>"
                        },
                        {
                          "syslog_port": "<long>",
                          "syslog_server": "<string>"
                        }
                      ],
                      "systemHeadroom": {
                        "performance": {
                          "availableHeadroom": "<string>",
                          "utilization": "<number>"
                        }
                      },
                      "tdz_enabled": "<boolean>",
                      "tdz_prefix": "<string>",
                      "timezone": "<string>",
                      "tlsv1_enabled": "<boolean>",
                      "uncompressed_snap_usage_bytes": "<long>",
                      "uncompressed_vol_usage_bytes": "<long>",
                      "unique_name_enabled": "<boolean>",
                      "unused_reserve_bytes": "<long>",
                      "update_array_names": "<string>",
                      "update_download_end_time": "<long>",
                      "update_download_error_code": "<string>",
                      "update_download_start_time": "<long>",
                      "update_downloading": "<boolean>",
                      "update_end_time": "<long>",
                      "update_error_code": "<string>",
                      "update_progress_msg": "<string>",
                      "update_start_time": "<long>",
                      "update_state": "<string>",
                      "usable_cache_capacity": "<long>",
                      "usable_capacity_bytes": "<long>",
                      "usage": "<long>",
                      "usage_valid": "<boolean>",
                      "user_inactivity_timeout": "<long>",
                      "version_current": "<string>",
                      "version_rollback": "<string>",
                      "version_target": "<string>",
                      "vol_compression_ratio": "<number>",
                      "vol_thin_provisioning_ratio": "<number>",
                      "volume_migration_status": [
                        {
                          "array_list": [
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            },
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            }
                          ],
                          "dest_pool_id": "<string>",
                          "dest_pool_name": "<string>",
                          "move_bytes_migrated": "<long>",
                          "move_bytes_remaining": "<long>",
                          "move_est_compl_time": "<long>",
                          "move_start_time": "<long>",
                          "root_vol_id": "<string>",
                          "root_vol_name": "<string>",
                          "source_pool_id": "<string>",
                          "source_pool_name": "<string>"
                        },
                        {
                          "array_list": [
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            },
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            }
                          ],
                          "dest_pool_id": "<string>",
                          "dest_pool_name": "<string>",
                          "move_bytes_migrated": "<long>",
                          "move_bytes_remaining": "<long>",
                          "move_est_compl_time": "<long>",
                          "move_start_time": "<long>",
                          "root_vol_id": "<string>",
                          "root_vol_name": "<string>",
                          "source_pool_id": "<string>",
                          "source_pool_name": "<string>"
                        }
                      ],
                      "vss_validation_timeout": "<long>",
                      "vvol_enabled": "<boolean>",
                      "witness_status": [
                        {
                          "array_name": "<string>",
                          "role": "<string>",
                          "witness_connectivity_message": "<string>",
                          "witness_connectivity_state": "<string>"
                        },
                        {
                          "array_name": "<string>",
                          "role": "<string>",
                          "witness_connectivity_message": "<string>",
                          "witness_connectivity_state": "<string>"
                        }
                      ]
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "access_protocol_list": [
                        "<string>",
                        "<string>"
                      ],
                      "alarms_enabled": "<boolean>",
                      "alert_from_email_addr": "<string>",
                      "alert_min_level": "<string>",
                      "alert_to_email_addrs": "<string>",
                      "allow_support_tunnel": "<boolean>",
                      "array_unassign_migration_status": [
                        {
                          "bytes_migrated": "<long>",
                          "bytes_remaining": "<long>",
                          "destination_arrays": [
                            {
                              "array_id": "<string>",
                              "array_name": "<string>",
                              "id": "<string>",
                              "name": "<string>"
                            },
                            {
                              "array_id": "<string>",
                              "array_name": "<string>",
                              "id": "<string>",
                              "name": "<string>"
                            }
                          ],
                          "estimated_completion_time": "<long>",
                          "id": "<string>",
                          "name": "<string>",
                          "start_time": "<long>"
                        },
                        {
                          "bytes_migrated": "<long>",
                          "bytes_remaining": "<long>",
                          "destination_arrays": [
                            {
                              "array_id": "<string>",
                              "array_name": "<string>",
                              "id": "<string>",
                              "name": "<string>"
                            },
                            {
                              "array_id": "<string>",
                              "array_name": "<string>",
                              "id": "<string>",
                              "name": "<string>"
                            }
                          ],
                          "estimated_completion_time": "<long>",
                          "id": "<string>",
                          "name": "<string>",
                          "start_time": "<long>"
                        }
                      ],
                      "arrays": {
                        "items": [
                          {
                            "all_flash": "<boolean>",
                            "allow_lower_limits": "<boolean>",
                            "available_bytes": "<long>",
                            "create_pool": "<boolean>",
                            "creation_time": "<long>",
                            "ctrlr_a_support_ip": "<string>",
                            "ctrlr_b_support_ip": "<string>",
                            "customerId": "<string>",
                            "dedupe_capacity_bytes": "<long>",
                            "dedupe_usage_bytes": "<long>",
                            "extended_model": "<string>",
                            "fc_port_count": "<long>",
                            "force": "<boolean>",
                            "full_name": "<string>",
                            "generation": "<integer>",
                            "gig_nic_port_count": "<long>",
                            "group_state": "<string>",
                            "id": "<string>",
                            "is_fully_dedupe_capable": "<boolean>",
                            "is_sfa": "<boolean>",
                            "is_supported_hw_config": "<boolean>",
                            "last_modified": "<long>",
                            "model": "<string>",
                            "model_sub_type": "<string>",
                            "name": "<string>",
                            "nic_list": [
                              {
                                "data_ip": "<string>",
                                "name": "<string>",
                                "subnet_label": "<string>",
                                "tagged": "<boolean>"
                              },
                              {
                                "data_ip": "<string>",
                                "name": "<string>",
                                "subnet_label": "<string>",
                                "tagged": "<boolean>"
                              }
                            ],
                            "pending_delete_bytes": "<long>",
                            "pool_description": "<string>",
                            "pool_id": "<string>",
                            "pool_name": "<string>",
                            "public_key": {
                              "key": "<string>",
                              "key_name": "<string>",
                              "key_type": "<string>"
                            },
                            "raw_capacity_bytes": "<long>",
                            "resourceUri": "<string>",
                            "role": "<string>",
                            "search_name": "<string>",
                            "secondary_mgmt_ip": "<string>",
                            "serial": "<string>",
                            "snap_compression": "<number>",
                            "snap_saved_bytes": "<long>",
                            "snap_space_reduction": "<number>",
                            "snap_usage_bytes": "<long>",
                            "snap_usage_uncompressed_bytes": "<long>",
                            "status": "<string>",
                            "ten_gig_sfp_nic_port_count": "<long>",
                            "ten_gig_t_nic_port_count": "<long>",
                            "upgrade": {
                              "messages": [
                                {
                                  "code": "<long>",
                                  "severity": "<string>",
                                  "text": "<string>"
                                },
                                {
                                  "code": "<long>",
                                  "severity": "<string>",
                                  "text": "<string>"
                                }
                              ],
                              "stage": "<string>",
                              "state": "<string>",
                              "type": "<string>"
                            },
                            "usable_cache_capacity_bytes": "<long>",
                            "usable_capacity_bytes": "<long>",
                            "usage": "<long>",
                            "usage_valid": "<boolean>",
                            "version": "<string>",
                            "vol_compression": "<number>",
                            "vol_saved_bytes": "<long>",
                            "vol_usage_bytes": "<long>",
                            "vol_usage_uncompressed_bytes": "<long>",
                            "zconf_ipaddrs": [
                              {
                                "ip_addr": "<string>"
                              },
                              {
                                "ip_addr": "<string>"
                              }
                            ]
                          },
                          {
                            "all_flash": "<boolean>",
                            "allow_lower_limits": "<boolean>",
                            "available_bytes": "<long>",
                            "create_pool": "<boolean>",
                            "creation_time": "<long>",
                            "ctrlr_a_support_ip": "<string>",
                            "ctrlr_b_support_ip": "<string>",
                            "customerId": "<string>",
                            "dedupe_capacity_bytes": "<long>",
                            "dedupe_usage_bytes": "<long>",
                            "extended_model": "<string>",
                            "fc_port_count": "<long>",
                            "force": "<boolean>",
                            "full_name": "<string>",
                            "generation": "<integer>",
                            "gig_nic_port_count": "<long>",
                            "group_state": "<string>",
                            "id": "<string>",
                            "is_fully_dedupe_capable": "<boolean>",
                            "is_sfa": "<boolean>",
                            "is_supported_hw_config": "<boolean>",
                            "last_modified": "<long>",
                            "model": "<string>",
                            "model_sub_type": "<string>",
                            "name": "<string>",
                            "nic_list": [
                              {
                                "data_ip": "<string>",
                                "name": "<string>",
                                "subnet_label": "<string>",
                                "tagged": "<boolean>"
                              },
                              {
                                "data_ip": "<string>",
                                "name": "<string>",
                                "subnet_label": "<string>",
                                "tagged": "<boolean>"
                              }
                            ],
                            "pending_delete_bytes": "<long>",
                            "pool_description": "<string>",
                            "pool_id": "<string>",
                            "pool_name": "<string>",
                            "public_key": {
                              "key": "<string>",
                              "key_name": "<string>",
                              "key_type": "<string>"
                            },
                            "raw_capacity_bytes": "<long>",
                            "resourceUri": "<string>",
                            "role": "<string>",
                            "search_name": "<string>",
                            "secondary_mgmt_ip": "<string>",
                            "serial": "<string>",
                            "snap_compression": "<number>",
                            "snap_saved_bytes": "<long>",
                            "snap_space_reduction": "<number>",
                            "snap_usage_bytes": "<long>",
                            "snap_usage_uncompressed_bytes": "<long>",
                            "status": "<string>",
                            "ten_gig_sfp_nic_port_count": "<long>",
                            "ten_gig_t_nic_port_count": "<long>",
                            "upgrade": {
                              "messages": [
                                {
                                  "code": "<long>",
                                  "severity": "<string>",
                                  "text": "<string>"
                                },
                                {
                                  "code": "<long>",
                                  "severity": "<string>",
                                  "text": "<string>"
                                }
                              ],
                              "stage": "<string>",
                              "state": "<string>",
                              "type": "<string>"
                            },
                            "usable_cache_capacity_bytes": "<long>",
                            "usable_capacity_bytes": "<long>",
                            "usage": "<long>",
                            "usage_valid": "<boolean>",
                            "version": "<string>",
                            "vol_compression": "<number>",
                            "vol_saved_bytes": "<long>",
                            "vol_usage_bytes": "<long>",
                            "vol_usage_uncompressed_bytes": "<long>",
                            "zconf_ipaddrs": [
                              {
                                "ip_addr": "<string>"
                              },
                              {
                                "ip_addr": "<string>"
                              }
                            ]
                          }
                        ],
                        "pageLimit": "<integer>",
                        "pageOffset": "<integer>",
                        "total": "<integer>"
                      },
                      "associated_links": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "auto_switchover_enabled": "<boolean>",
                      "auto_switchover_messages": [
                        {
                          "code": "<long>",
                          "severity": "<string>",
                          "text": "<string>"
                        },
                        {
                          "code": "<long>",
                          "severity": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "autoclean_unmanaged_snapshots_enabled": "<boolean>",
                      "autoclean_unmanaged_snapshots_ttl_unit": "<long>",
                      "autosupport_enabled": "<boolean>",
                      "cc_mode_enabled": "<boolean>",
                      "clone_ratio": "<number>",
                      "compressed_snap_usage_bytes": "<long>",
                      "compressed_vol_usage_bytes": "<long>",
                      "compression_ratio": "<number>",
                      "customerId": "<string>",
                      "data_rebalance_status": [
                        {
                          "array_data_migration_status": [
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            },
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            }
                          ],
                          "id": "<string>",
                          "name": "<string>",
                          "pool_avg_space_utilization": "<long>"
                        },
                        {
                          "array_data_migration_status": [
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            },
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            }
                          ],
                          "id": "<string>",
                          "name": "<string>",
                          "pool_avg_space_utilization": "<long>"
                        }
                      ],
                      "data_reduction_ratio": "<number>",
                      "date": "<long>",
                      "dedupe_ratio": "<number>",
                      "default_iscsi_target_scope": "<string>",
                      "default_snap_limit_percent": "<long>",
                      "default_snap_reserve": "<long>",
                      "default_snap_warn_level": "<long>",
                      "default_volume_limit": "<long>",
                      "default_volume_reserve": "<long>",
                      "default_volume_warn_level": "<long>",
                      "dns_servers": [
                        {
                          "ip_addr": "<string>"
                        },
                        {
                          "ip_addr": "<string>"
                        }
                      ],
                      "domain_name": "<string>",
                      "encryption_config": {
                        "cipher": "<string>",
                        "encryption_active": "<boolean>",
                        "encryption_key_manager": "<string>",
                        "master_key_set": "<boolean>",
                        "mode": "<string>",
                        "scope": "<string>"
                      },
                      "failover_mode": "<string>",
                      "fc_enabled": "<boolean>",
                      "free_space": "<long>",
                      "generation": "<integer>",
                      "group_snapshot_ttl": "<long>",
                      "group_target_enabled": "<boolean>",
                      "group_target_name": "<string>",
                      "iscsi_automatic_connection_method": "<boolean>",
                      "iscsi_connection_rebalancing": "<boolean>",
                      "iscsi_enabled": "<boolean>",
                      "isns_enabled": "<boolean>",
                      "isns_port": "<long>",
                      "isns_server": "<string>",
                      "last_login": "<string>",
                      "leader_array_name": "<string>",
                      "leader_array_serial": "<string>",
                      "management_service_backup_array_name": "<string>",
                      "management_service_backup_status": "<string>",
                      "member_list": [
                        "<string>",
                        "<string>"
                      ],
                      "merge_group_name": "<string>",
                      "merge_state": "<string>",
                      "ntp_server": "<string>",
                      "num_connections": "<long>",
                      "num_snapcolls": "<long>",
                      "num_snaps": "<long>",
                      "pending_deletes": "<long>",
                      "proxy_port": "<long>",
                      "proxy_server": "<string>",
                      "proxy_username": "<string>",
                      "raw_cache_capacity": "<long>",
                      "raw_capacity": "<long>",
                      "repl_throttle_list": [
                        {
                          "creation_time": "<long>",
                          "days": "<string>",
                          "description": "<string>",
                          "id": "<string>",
                          "last_modified": "<long>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_bandwidth_kbps": "<long>",
                          "thr_bandwidth_limit_kbps": "<long>",
                          "thr_day_mask": "<long>",
                          "thr_partner_id": "<string>",
                          "thr_until_time": "<long>"
                        },
                        {
                          "creation_time": "<long>",
                          "days": "<string>",
                          "description": "<string>",
                          "id": "<string>",
                          "last_modified": "<long>",
                          "name": "<string>",
                          "thr_at_time": "<long>",
                          "thr_bandwidth": "<long>",
                          "thr_bandwidth_kbps": "<long>",
                          "thr_bandwidth_limit_kbps": "<long>",
                          "thr_day_mask": "<long>",
                          "thr_partner_id": "<string>",
                          "thr_until_time": "<long>"
                        }
                      ],
                      "repl_throttled_bandwidth": "<long>",
                      "repl_throttled_bandwidth_kbps": "<long>",
                      "resourceUri": "<string>",
                      "savings": "<long>",
                      "savings_clone": "<long>",
                      "savings_compression": "<long>",
                      "savings_data_reduction": "<long>",
                      "savings_dedupe": "<long>",
                      "savings_ratio": "<number>",
                      "savings_vol_thin_provisioning": "<long>",
                      "scsi_vendor_id": "<string>",
                      "send_alert_to_support": "<boolean>",
                      "smtp_port": "<long>",
                      "smtp_server": "<string>",
                      "snap_compression_ratio": "<number>",
                      "snap_retn_meter_high": "<long>",
                      "snap_retn_meter_very_high": "<long>",
                      "snap_usage_populated": "<long>",
                      "snmp_community": "<string>",
                      "snmp_get_enabled": "<boolean>",
                      "snmp_get_port": "<long>",
                      "snmp_sys_contact": "<string>",
                      "snmp_sys_location": "<string>",
                      "snmp_trap_enabled": "<boolean>",
                      "snmp_trap_host": "<string>",
                      "snmp_trap_port": "<long>",
                      "space_info_valid": "<boolean>",
                      "syslogd_enabled": "<boolean>",
                      "syslogd_port": "<long>",
                      "syslogd_server": "<string>",
                      "syslogd_servers": [
                        {
                          "syslog_port": "<long>",
                          "syslog_server": "<string>"
                        },
                        {
                          "syslog_port": "<long>",
                          "syslog_server": "<string>"
                        }
                      ],
                      "systemHeadroom": {
                        "performance": {
                          "availableHeadroom": "<string>",
                          "utilization": "<number>"
                        }
                      },
                      "tdz_enabled": "<boolean>",
                      "tdz_prefix": "<string>",
                      "timezone": "<string>",
                      "tlsv1_enabled": "<boolean>",
                      "uncompressed_snap_usage_bytes": "<long>",
                      "uncompressed_vol_usage_bytes": "<long>",
                      "unique_name_enabled": "<boolean>",
                      "unused_reserve_bytes": "<long>",
                      "update_array_names": "<string>",
                      "update_download_end_time": "<long>",
                      "update_download_error_code": "<string>",
                      "update_download_start_time": "<long>",
                      "update_downloading": "<boolean>",
                      "update_end_time": "<long>",
                      "update_error_code": "<string>",
                      "update_progress_msg": "<string>",
                      "update_start_time": "<long>",
                      "update_state": "<string>",
                      "usable_cache_capacity": "<long>",
                      "usable_capacity_bytes": "<long>",
                      "usage": "<long>",
                      "usage_valid": "<boolean>",
                      "user_inactivity_timeout": "<long>",
                      "version_current": "<string>",
                      "version_rollback": "<string>",
                      "version_target": "<string>",
                      "vol_compression_ratio": "<number>",
                      "vol_thin_provisioning_ratio": "<number>",
                      "volume_migration_status": [
                        {
                          "array_list": [
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            },
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            }
                          ],
                          "dest_pool_id": "<string>",
                          "dest_pool_name": "<string>",
                          "move_bytes_migrated": "<long>",
                          "move_bytes_remaining": "<long>",
                          "move_est_compl_time": "<long>",
                          "move_start_time": "<long>",
                          "root_vol_id": "<string>",
                          "root_vol_name": "<string>",
                          "source_pool_id": "<string>",
                          "source_pool_name": "<string>"
                        },
                        {
                          "array_list": [
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            },
                            {
                              "id": "<string>",
                              "is_data_source": "<boolean>",
                              "name": "<string>",
                              "space_utilization": "<long>"
                            }
                          ],
                          "dest_pool_id": "<string>",
                          "dest_pool_name": "<string>",
                          "move_bytes_migrated": "<long>",
                          "move_bytes_remaining": "<long>",
                          "move_est_compl_time": "<long>",
                          "move_start_time": "<long>",
                          "root_vol_id": "<string>",
                          "root_vol_name": "<string>",
                          "source_pool_id": "<string>",
                          "source_pool_name": "<string>"
                        }
                      ],
                      "vss_validation_timeout": "<long>",
                      "vvol_enabled": "<boolean>",
                      "witness_status": [
                        {
                          "array_name": "<string>",
                          "role": "<string>",
                          "witness_connectivity_message": "<string>",
                          "witness_connectivity_state": "<string>"
                        },
                        {
                          "array_name": "<string>",
                          "role": "<string>",
                          "witness_connectivity_message": "<string>",
                          "witness_connectivity_state": "<string>"
                        }
                      ]
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/vluns/{id}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > vluns > {id}"
        ],
        "summary": "Remove vlun idenfied by {id} form volume identified by {volumeId} from Primera / Alletra 9K",
        "description": "Remove vlun idenfied by {id} form volume identified by {volumeId} from Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > vluns > {id}"
        ],
        "summary": "Get details of vlun identified by {id} for Volume identified by {volumeId} for Primera / Alletra 9K",
        "description": "Get details of vlun identified by {id} for Volume identified by {volumeId} for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "active": "<boolean>",
                  "consoleUri": "<string>",
                  "deviceWWNs": "<string>",
                  "diskPartition": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "failedPathInterval": "<integer>",
                  "failedPathPolicy": "<string>",
                  "id": "<string>",
                  "initiators": {
                    "deviceDiscoveredName": "<string>",
                    "id": "<string>",
                    "resourceUri": "<string>",
                    "type": "<string>"
                  },
                  "lun": "<long>",
                  "mountPoint": "<string>",
                  "mountPointFsau": "<long>",
                  "multiPathType": "<string>",
                  "portPos": {
                    "node": "<long>",
                    "port": "<long>",
                    "slot": "<long>"
                  },
                  "rawVolume": "<string>",
                  "remoteName": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_NEW"
                  },
                  "status": "<string>",
                  "systemId": "<string>",
                  "tpgId": "<long>",
                  "type": "<string>",
                  "usedSpace": "<long>",
                  "volumeGroup": "<string>",
                  "volumeManager": "<string>",
                  "volumeName": "<string>",
                  "volumeWWN": "<string>",
                  "vvReservedUserSpace": "<long>",
                  "vvSize": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/snapshots/{snapshotId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId}"
        ],
        "summary": "Remove Primera / Alletra 9K snapshot in system identified by {snapshotId}",
        "description": "Remove Primera / Alletra 9K snapshot in system identified by {snapshotId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Make snapshot offline and remove.",
            "example": "<boolean>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId}"
        ],
        "summary": "Get details of snapshot identified by {snapshotId} for Volume identified by {volumeId} for Primera / Alletra 9K",
        "description": "Get details of vlun identified by {id} for Volume identified by {volumeId} for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "adminAllocationSettings": {
                    "HA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "RAIDType": "<string>",
                    "deviceSpeed": {
                      "text": "<string>",
                      "value": "<integer>"
                    },
                    "deviceType": "<string>",
                    "diskFilter": "<string>",
                    "requestedHA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "setSize": "<string>",
                    "stepSize": "<long>"
                  },
                  "adminSpace": {
                    "freeMiB": "<number>",
                    "grownMiB": "<number>",
                    "rawReservedMiB": "<number>",
                    "reclaimedMiB": "<number>",
                    "reservedMiB": "<number>",
                    "totalMiB": "<number>",
                    "usedMiB": "<number>"
                  },
                  "baseId": "<long>",
                  "comment": "<string>",
                  "compactEfficiency": "<number>",
                  "compressionEfficiency": "<number>",
                  "compressionPolicy": "<string>",
                  "consoleUri": "<string>",
                  "conversionType": "CONVERSIONTYPE_V2",
                  "copiedMB": "<number>",
                  "copiedPerc": "<integer>",
                  "copyOfID": "<long>",
                  "creationTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "customerId": "<string>",
                  "dataReduction": "<string>",
                  "ddcSize": "<number>",
                  "ddsSize": "<number>",
                  "dedup": "<string>",
                  "dedupSavingsSize": "<number>",
                  "dedupWrittenSize": "<number>",
                  "devType": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "efficiencyUpdateTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "expirationTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "fullyProvisioned": "<boolean>",
                  "generation": "<integer>",
                  "headsPerCylinder": "<integer>",
                  "healthState": "<long>",
                  "hidden": "<boolean>",
                  "hostWrittenMiB": "<number>",
                  "hostWrittenToVirtualPercent": "<number>",
                  "id": "<string>",
                  "initiators": [
                    {
                      "deviceDiscoveredName": "<string>",
                      "id": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "deviceDiscoveredName": "<string>",
                      "id": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "name": "<string>",
                  "parentID": "<long>",
                  "physParentID": "<long>",
                  "physicalCopy": "<boolean>",
                  "policy": {
                    "fileService": "<boolean>",
                    "hostDif3par": "<boolean>",
                    "hostDifStd": "<boolean>",
                    "noCache": "<boolean>",
                    "oneHost": "<boolean>",
                    "staleSnapshot": "<boolean>",
                    "system": "<boolean>",
                    "zeroDetect": "<boolean>",
                    "zeroFill": "<boolean>"
                  },
                  "provType": "<string>",
                  "raid": "<string>",
                  "rcopyStatus": "<string>",
                  "readOnly": "<boolean>",
                  "retentionTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "roChildID": "<long>",
                  "rwChildID": "<long>",
                  "sectorsPerTrack": "<integer>",
                  "sharedParentId": "<long>",
                  "sizeMiB": "<number>",
                  "snapshotAllocLimit": "<long>",
                  "snapshotAllocWarning": "<long>",
                  "snapshotAllocationSettings": {
                    "HA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "RAIDType": "<string>",
                    "deviceSpeed": {
                      "text": "<string>",
                      "value": "<integer>"
                    },
                    "deviceType": "<string>",
                    "diskFilter": "<string>",
                    "requestedHA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "setSize": "<string>",
                    "stepSize": "<long>"
                  },
                  "snapshotCpgID": "<long>",
                  "snapshotCpgName": "<string>",
                  "snapshotId": "<long>",
                  "snapshotSpace": {
                    "freeMiB": "<number>",
                    "grownMiB": "<number>",
                    "rawReservedMiB": "<number>",
                    "reclaimedMiB": "<number>",
                    "reservedMiB": "<number>",
                    "totalMiB": "<number>",
                    "usedMiB": "<number>"
                  },
                  "snapshotTdvvSize": {
                    "ddcSizeMiB": "<number>",
                    "ddsSizeMiB": "<number>",
                    "virtualSizeMiB": "<number>",
                    "writtenSizeMiB": "<number>"
                  },
                  "snapshotType": "<string>",
                  "snapshotUsedToVirtualPercent": "<number>",
                  "spaceCalculationTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "started": "<boolean>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_NORMAL"
                  },
                  "systemId": "<string>",
                  "thinProvisioned": "<boolean>",
                  "totalRawReservedMiB": "<number>",
                  "totalReservedMiB": "<number>",
                  "totalSpaceMiB": "<number>",
                  "type": "<string>",
                  "unrefSpaceFreedTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "usedCapacity": "<number>",
                  "usedSizeMiB": "<number>",
                  "userAllocLimit": "<long>",
                  "userAllocWarning": "<long>",
                  "userAllocationSettings": {
                    "HA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "RAIDType": "<string>",
                    "deviceSpeed": {
                      "text": "<string>",
                      "value": "<integer>"
                    },
                    "deviceType": "<string>",
                    "diskFilter": "<string>",
                    "requestedHA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "setSize": "<string>",
                    "stepSize": "<long>"
                  },
                  "userCpgID": "<long>",
                  "userCpgName": "<string>",
                  "userReservedToVirtualPercent": "<number>",
                  "userSpace": {
                    "freeMiB": "<number>",
                    "grownMiB": "<number>",
                    "rawReservedMiB": "<number>",
                    "reclaimedMiB": "<number>",
                    "reservedMiB": "<number>",
                    "totalMiB": "<number>",
                    "usedMiB": "<number>"
                  },
                  "userUsedToVirtualPercent": "<number>",
                  "vlunSectorSize": "<integer>",
                  "wwn": "<string>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > snapshots > {snapshotId}"
        ],
        "summary": "Promote a snapshot identified by {snapshotId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Promote a snapshot identified by {snapshotId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "pri": "PRIORITYTYPE_MED",
                  "target": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/clones/{cloneId}/resync": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > clones > {cloneId} > resync"
        ],
        "summary": "Resynchronize a clone volume identified by {cloneId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Resynchronize a clone volume identified by {cloneId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "priority": "PRIORITYTYPE_HIGH"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "cloneId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/clones/{cloneId}/promote": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > clones > {cloneId} > promote"
        ],
        "summary": "Promote a clone volume identified by {cloneId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Promote a clone volume identified by {cloneId} of a volume identified by {volumeId} on storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "priority": "PRIORITYTYPE_HIGH"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "cloneId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{volumeId}/clones": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {volumeId} > clones"
        ],
        "summary": "Get the details of the clone volumes associated with a base volume identified by {volumeId} for Primera / Alletra 9K systems.",
        "description": "Get the details of the clone volumes associated with a base volume identified by {volumeId} for Primera / Alletra 9K systems.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "volumeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "adminAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "adminSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "baseId": "<long>",
                      "comment": "<string>",
                      "compactEfficiency": "<number>",
                      "compressionEfficiency": "<number>",
                      "compressionPolicy": "<string>",
                      "conversionType": "CONVERSIONTYPE_V2",
                      "copiedMB": "<number>",
                      "copiedPerc": "<integer>",
                      "copyOfID": "<long>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "dataReduction": "<string>",
                      "ddcSize": "<number>",
                      "ddsSize": "<number>",
                      "dedup": "<string>",
                      "dedupSavingsSize": "<number>",
                      "dedupWrittenSize": "<number>",
                      "devType": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "efficiencyUpdateTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "expirationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "fullyProvisioned": "<boolean>",
                      "generation": "<integer>",
                      "headsPerCylinder": "<integer>",
                      "healthState": "<long>",
                      "hidden": "<boolean>",
                      "hostWrittenMiB": "<number>",
                      "hostWrittenToVirtualPercent": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "name": "<string>",
                      "parentID": "<long>",
                      "physParentID": "<long>",
                      "physicalCopy": "<boolean>",
                      "policy": {
                        "fileService": "<boolean>",
                        "hostDif3par": "<boolean>",
                        "hostDifStd": "<boolean>",
                        "noCache": "<boolean>",
                        "oneHost": "<boolean>",
                        "staleSnapshot": "<boolean>",
                        "system": "<boolean>",
                        "zeroDetect": "<boolean>",
                        "zeroFill": "<boolean>"
                      },
                      "provType": "<string>",
                      "raid": "<string>",
                      "rcopyStatus": "<string>",
                      "readOnly": "<boolean>",
                      "resourceUri": "<string>",
                      "retentionTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "roChildID": "<long>",
                      "rwChildID": "<long>",
                      "sectorsPerTrack": "<integer>",
                      "sharedParentId": "<long>",
                      "sizeMiB": "<number>",
                      "snapShotTier": "<string>",
                      "snapshotAllocLimit": "<long>",
                      "snapshotAllocWarning": "<long>",
                      "snapshotAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "snapshotCpgID": "<long>",
                      "snapshotCpgName": "<string>",
                      "snapshotSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "snapshotTdvvSize": {
                        "ddcSizeMiB": "<number>",
                        "ddsSizeMiB": "<number>",
                        "virtualSizeMiB": "<number>",
                        "writtenSizeMiB": "<number>"
                      },
                      "snapshotUsedToVirtualPercent": "<number>",
                      "spaceCalculationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "started": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "storageTier": "<string>",
                      "systemId": "<string>",
                      "thinProvisioned": "<boolean>",
                      "thinSavings": "<string>",
                      "totalRawReservedMiB": "<number>",
                      "totalReservedMiB": "<number>",
                      "totalSpaceMiB": "<number>",
                      "type": "<string>",
                      "unrefSpaceFreedTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "usedCapacity": "<number>",
                      "usedSizeMiB": "<number>",
                      "userAllocLimit": "<long>",
                      "userAllocWarning": "<long>",
                      "userAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "userCpgID": "<long>",
                      "userCpgName": "<string>",
                      "userReservedToVirtualPercent": "<number>",
                      "userSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "userUsedToVirtualPercent": "<number>",
                      "vlunSectorSize": "<integer>",
                      "volumeId": "<long>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "adminAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "adminSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "baseId": "<long>",
                      "comment": "<string>",
                      "compactEfficiency": "<number>",
                      "compressionEfficiency": "<number>",
                      "compressionPolicy": "<string>",
                      "conversionType": null,
                      "copiedMB": "<number>",
                      "copiedPerc": "<integer>",
                      "copyOfID": "<long>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "dataReduction": "<string>",
                      "ddcSize": "<number>",
                      "ddsSize": "<number>",
                      "dedup": "<string>",
                      "dedupSavingsSize": "<number>",
                      "dedupWrittenSize": "<number>",
                      "devType": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "efficiencyUpdateTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "expirationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "fullyProvisioned": "<boolean>",
                      "generation": "<integer>",
                      "headsPerCylinder": "<integer>",
                      "healthState": "<long>",
                      "hidden": "<boolean>",
                      "hostWrittenMiB": "<number>",
                      "hostWrittenToVirtualPercent": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "name": "<string>",
                      "parentID": "<long>",
                      "physParentID": "<long>",
                      "physicalCopy": "<boolean>",
                      "policy": {
                        "fileService": "<boolean>",
                        "hostDif3par": "<boolean>",
                        "hostDifStd": "<boolean>",
                        "noCache": "<boolean>",
                        "oneHost": "<boolean>",
                        "staleSnapshot": "<boolean>",
                        "system": "<boolean>",
                        "zeroDetect": "<boolean>",
                        "zeroFill": "<boolean>"
                      },
                      "provType": "<string>",
                      "raid": "<string>",
                      "rcopyStatus": "<string>",
                      "readOnly": "<boolean>",
                      "resourceUri": "<string>",
                      "retentionTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "roChildID": "<long>",
                      "rwChildID": "<long>",
                      "sectorsPerTrack": "<integer>",
                      "sharedParentId": "<long>",
                      "sizeMiB": "<number>",
                      "snapShotTier": "<string>",
                      "snapshotAllocLimit": "<long>",
                      "snapshotAllocWarning": "<long>",
                      "snapshotAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "snapshotCpgID": "<long>",
                      "snapshotCpgName": "<string>",
                      "snapshotSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "snapshotTdvvSize": {
                        "ddcSizeMiB": "<number>",
                        "ddsSizeMiB": "<number>",
                        "virtualSizeMiB": "<number>",
                        "writtenSizeMiB": "<number>"
                      },
                      "snapshotUsedToVirtualPercent": "<number>",
                      "spaceCalculationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "started": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "storageTier": "<string>",
                      "systemId": "<string>",
                      "thinProvisioned": "<boolean>",
                      "thinSavings": "<string>",
                      "totalRawReservedMiB": "<number>",
                      "totalReservedMiB": "<number>",
                      "totalSpaceMiB": "<number>",
                      "type": "<string>",
                      "unrefSpaceFreedTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "usedCapacity": "<number>",
                      "usedSizeMiB": "<number>",
                      "userAllocLimit": "<long>",
                      "userAllocWarning": "<long>",
                      "userAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "userCpgID": "<long>",
                      "userCpgName": "<string>",
                      "userReservedToVirtualPercent": "<number>",
                      "userSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "userUsedToVirtualPercent": "<number>",
                      "vlunSectorSize": "<integer>",
                      "volumeId": "<long>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/vluns": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > vluns"
        ],
        "summary": "Get details of vluns for Volume identified by {volumeId} for Primera / Alletra 9K",
        "description": "Get details of vluns for Volume identified by {volumeId} for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to sort the response with specified key and order",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "active": "<boolean>",
                      "customerId": "<string>",
                      "deviceWWNs": "<string>",
                      "diskPartition": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "failedPathInterval": "<integer>",
                      "failedPathPolicy": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "initiators": {
                        "deviceDiscoveredName": "<string>",
                        "id": "<string>",
                        "resourceUri": "<string>",
                        "type": "<string>"
                      },
                      "lun": "<long>",
                      "mountPoint": "<string>",
                      "mountPointFsau": "<long>",
                      "multiPathType": "<string>",
                      "portPos": {
                        "node": "<long>",
                        "port": "<long>",
                        "slot": "<long>"
                      },
                      "rawVolume": "<string>",
                      "remoteName": "<string>",
                      "resourceUri": "<string>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": null
                      },
                      "status": "<string>",
                      "systemId": "<string>",
                      "tpgId": "<long>",
                      "type": "<string>",
                      "usedSpace": "<long>",
                      "vlunType": "<string>",
                      "volumeGroup": "<string>",
                      "volumeManager": "<string>",
                      "volumeName": "<string>",
                      "volumeWWN": "<string>",
                      "vvReservedUserSpace": "<long>",
                      "vvSize": "<long>"
                    },
                    {
                      "active": "<boolean>",
                      "customerId": "<string>",
                      "deviceWWNs": "<string>",
                      "diskPartition": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "failedPathInterval": "<integer>",
                      "failedPathPolicy": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "initiators": {
                        "deviceDiscoveredName": "<string>",
                        "id": "<string>",
                        "resourceUri": "<string>",
                        "type": "<string>"
                      },
                      "lun": "<long>",
                      "mountPoint": "<string>",
                      "mountPointFsau": "<long>",
                      "multiPathType": "<string>",
                      "portPos": {
                        "node": "<long>",
                        "port": "<long>",
                        "slot": "<long>"
                      },
                      "rawVolume": "<string>",
                      "remoteName": "<string>",
                      "resourceUri": "<string>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NOT_APPLICABLE"
                      },
                      "status": "<string>",
                      "systemId": "<string>",
                      "tpgId": "<long>",
                      "type": "<string>",
                      "usedSpace": "<long>",
                      "vlunType": "<string>",
                      "volumeGroup": "<string>",
                      "volumeManager": "<string>",
                      "volumeName": "<string>",
                      "volumeWWN": "<string>",
                      "vvReservedUserSpace": "<long>",
                      "vvSize": "<long>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/un-export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > un-export"
        ],
        "summary": "Unexport vlun for volume identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Unexport vlun for volume identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroupIds": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/snapshots": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > snapshots"
        ],
        "summary": "Get snapshot details of volume identified by {id} for Primera / Alletra 9K",
        "description": "Get snapshot details of volume identified by {id} for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "adminAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "adminSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "baseId": "<long>",
                      "comment": "<string>",
                      "compactEfficiency": "<number>",
                      "compressionEfficiency": "<number>",
                      "compressionPolicy": "<string>",
                      "conversionType": "CONVERSIONTYPE_THIN",
                      "copiedMB": "<number>",
                      "copiedPerc": "<integer>",
                      "copyOfID": "<long>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "dataReduction": "<string>",
                      "ddcSize": "<number>",
                      "ddsSize": "<number>",
                      "dedup": "<string>",
                      "dedupSavingsSize": "<number>",
                      "dedupWrittenSize": "<number>",
                      "devType": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "efficiencyUpdateTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "expirationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "fullyProvisioned": "<boolean>",
                      "generation": "<integer>",
                      "headsPerCylinder": "<integer>",
                      "healthState": "<long>",
                      "hidden": "<boolean>",
                      "hostWrittenMiB": "<number>",
                      "hostWrittenToVirtualPercent": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "name": "<string>",
                      "parentID": "<long>",
                      "physParentID": "<long>",
                      "physicalCopy": "<boolean>",
                      "policy": {
                        "fileService": "<boolean>",
                        "hostDif3par": "<boolean>",
                        "hostDifStd": "<boolean>",
                        "noCache": "<boolean>",
                        "oneHost": "<boolean>",
                        "staleSnapshot": "<boolean>",
                        "system": "<boolean>",
                        "zeroDetect": "<boolean>",
                        "zeroFill": "<boolean>"
                      },
                      "provType": "<string>",
                      "raid": "<string>",
                      "rcopyStatus": "<string>",
                      "readOnly": "<boolean>",
                      "retentionTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "roChildID": "<long>",
                      "rwChildID": "<long>",
                      "sectorsPerTrack": "<integer>",
                      "sharedParentId": "<long>",
                      "sizeMiB": "<number>",
                      "snapshotAllocLimit": "<long>",
                      "snapshotAllocWarning": "<long>",
                      "snapshotAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "snapshotCpgID": "<long>",
                      "snapshotCpgName": "<string>",
                      "snapshotId": "<long>",
                      "snapshotSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "snapshotTdvvSize": {
                        "ddcSizeMiB": "<number>",
                        "ddsSizeMiB": "<number>",
                        "virtualSizeMiB": "<number>",
                        "writtenSizeMiB": "<number>"
                      },
                      "snapshotType": "<string>",
                      "snapshotUsedToVirtualPercent": "<number>",
                      "spaceCalculationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "started": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_DEGRADED"
                      },
                      "systemId": "<string>",
                      "thinProvisioned": "<boolean>",
                      "totalRawReservedMiB": "<number>",
                      "totalReservedMiB": "<number>",
                      "totalSpaceMiB": "<number>",
                      "type": "<string>",
                      "unrefSpaceFreedTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "usedCapacity": "<number>",
                      "usedSizeMiB": "<number>",
                      "userAllocLimit": "<long>",
                      "userAllocWarning": "<long>",
                      "userAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "userCpgID": "<long>",
                      "userCpgName": "<string>",
                      "userReservedToVirtualPercent": "<number>",
                      "userSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "userUsedToVirtualPercent": "<number>",
                      "vlunSectorSize": "<integer>",
                      "wwn": "<string>"
                    },
                    {
                      "adminAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "adminSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "baseId": "<long>",
                      "comment": "<string>",
                      "compactEfficiency": "<number>",
                      "compressionEfficiency": "<number>",
                      "compressionPolicy": "<string>",
                      "conversionType": "CONVERSIONTYPE_V1",
                      "copiedMB": "<number>",
                      "copiedPerc": "<integer>",
                      "copyOfID": "<long>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "dataReduction": "<string>",
                      "ddcSize": "<number>",
                      "ddsSize": "<number>",
                      "dedup": "<string>",
                      "dedupSavingsSize": "<number>",
                      "dedupWrittenSize": "<number>",
                      "devType": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "efficiencyUpdateTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "expirationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "fullyProvisioned": "<boolean>",
                      "generation": "<integer>",
                      "headsPerCylinder": "<integer>",
                      "healthState": "<long>",
                      "hidden": "<boolean>",
                      "hostWrittenMiB": "<number>",
                      "hostWrittenToVirtualPercent": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "name": "<string>",
                      "parentID": "<long>",
                      "physParentID": "<long>",
                      "physicalCopy": "<boolean>",
                      "policy": {
                        "fileService": "<boolean>",
                        "hostDif3par": "<boolean>",
                        "hostDifStd": "<boolean>",
                        "noCache": "<boolean>",
                        "oneHost": "<boolean>",
                        "staleSnapshot": "<boolean>",
                        "system": "<boolean>",
                        "zeroDetect": "<boolean>",
                        "zeroFill": "<boolean>"
                      },
                      "provType": "<string>",
                      "raid": "<string>",
                      "rcopyStatus": "<string>",
                      "readOnly": "<boolean>",
                      "retentionTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "roChildID": "<long>",
                      "rwChildID": "<long>",
                      "sectorsPerTrack": "<integer>",
                      "sharedParentId": "<long>",
                      "sizeMiB": "<number>",
                      "snapshotAllocLimit": "<long>",
                      "snapshotAllocWarning": "<long>",
                      "snapshotAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "snapshotCpgID": "<long>",
                      "snapshotCpgName": "<string>",
                      "snapshotId": "<long>",
                      "snapshotSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "snapshotTdvvSize": {
                        "ddcSizeMiB": "<number>",
                        "ddsSizeMiB": "<number>",
                        "virtualSizeMiB": "<number>",
                        "writtenSizeMiB": "<number>"
                      },
                      "snapshotType": "<string>",
                      "snapshotUsedToVirtualPercent": "<number>",
                      "spaceCalculationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "started": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_FAILED"
                      },
                      "systemId": "<string>",
                      "thinProvisioned": "<boolean>",
                      "totalRawReservedMiB": "<number>",
                      "totalReservedMiB": "<number>",
                      "totalSpaceMiB": "<number>",
                      "type": "<string>",
                      "unrefSpaceFreedTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "usedCapacity": "<number>",
                      "usedSizeMiB": "<number>",
                      "userAllocLimit": "<long>",
                      "userAllocWarning": "<long>",
                      "userAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "userCpgID": "<long>",
                      "userCpgName": "<string>",
                      "userReservedToVirtualPercent": "<number>",
                      "userSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "userUsedToVirtualPercent": "<number>",
                      "vlunSectorSize": "<integer>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > snapshots"
        ],
        "summary": "Create snapshot for volumes identified by {id}",
        "description": "Create snapshot for volumes identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "namePattern": "PARENT_TIMESTAMP",
                  "comment": "<string>",
                  "customName": "<string>",
                  "expireSecs": "<integer>",
                  "readOnly": "<boolean>",
                  "retainSecs": "<long>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/performance-statistics": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > performance-statistics"
        ],
        "summary": "Get performance statistics of Primera / Alletra 9K Volume identified by {id}",
        "description": "Get performance statistics of Primera / Alletra 9K Volume identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "iops": {
                    "read": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    },
                    "total": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    },
                    "write": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    }
                  },
                  "latencyMs": {
                    "read": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    },
                    "total": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    },
                    "write": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    }
                  },
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "throughputKbps": {
                    "read": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    },
                    "total": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    },
                    "write": {
                      "avgOf1day": "<number>",
                      "avgOf1hour": "<number>",
                      "avgOf8hours": "<number>",
                      "avgOfLatest": "<number>"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/performance-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > performance-history"
        ],
        "summary": "Get performance trend data of Primera / Alletra 9K Volume identified by {id}",
        "description": "Get performance trend data of Primera / Alletra 9K Volume identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "customerId": "<string>",
                  "endTime": "<integer>",
                  "historyData": {
                    "iopsMetricsData": {
                      "items": [
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        },
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        }
                      ],
                      "total": "<integer>"
                    },
                    "latencyMetricsDataMs": {
                      "items": [
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        },
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        }
                      ],
                      "total": "<integer>"
                    },
                    "throughputMetricsDataKbps": {
                      "items": [
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        },
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        }
                      ],
                      "total": "<integer>"
                    }
                  },
                  "requestUri": "<string>",
                  "startTime": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > export"
        ],
        "summary": "Export vlun for volume identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Export vlun for volume identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "autoLun": "<boolean>",
                  "hostGroupIds": [
                    "<string>",
                    "<string>"
                  ],
                  "maxAutoLun": "<long>",
                  "noVcn": "<boolean>",
                  "override": "<boolean>",
                  "position": "<string>",
                  "proximity": "SECONDARY"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/clone": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > clone"
        ],
        "summary": "Create a clone volume identified by {id} for Primera / Alletra 9K systems.",
        "description": "Create a clone volume identified by {id} for Primera / Alletra 9K systems.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "destinationVolume": "<string>",
                  "online": "<boolean>",
                  "priority": "PRIORITYTYPE_MED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}/capacity-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id} > capacity-history"
        ],
        "summary": "Get volume capacity trend data of Primera / Alletra 9K Volume identified by {id}",
        "description": "Get volume capacity trend data of Primera / Alletra 9K Volume identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "capacityData": {
                    "customerId": "<string>",
                    "items": [
                      {
                        "actualUsageMiB": "<number>",
                        "hostWrittenCapacityMiB": "<number>",
                        "timestampMs": "<long>"
                      },
                      {
                        "actualUsageMiB": "<number>",
                        "hostWrittenCapacityMiB": "<number>",
                        "timestampMs": "<long>"
                      }
                    ],
                    "total": "<integer>"
                  },
                  "endTime": "<integer>",
                  "requestUri": "<string>",
                  "startTime": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes/{id}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id}"
        ],
        "summary": "Remove volume identified by {volumeId} from Primera / Alletra 9K",
        "description": "Remove volume identified by {volumeId} from Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "unExport",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UnExport Host,HostSet and delete volume",
            "example": "<boolean>"
          },
          {
            "name": "cascade",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Delete snapshot and volume",
            "example": "<boolean>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Volume identified by {id}",
        "description": "Get details of Primera / Alletra 9K Volume identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "adminAllocationSettings": {
                    "HA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "RAIDType": "<string>",
                    "deviceSpeed": {
                      "text": "<string>",
                      "value": "<integer>"
                    },
                    "deviceType": "<string>",
                    "diskFilter": "<string>",
                    "requestedHA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "setSize": "<string>",
                    "stepSize": "<long>"
                  },
                  "adminSpace": {
                    "freeMiB": "<number>",
                    "grownMiB": "<number>",
                    "rawReservedMiB": "<number>",
                    "reclaimedMiB": "<number>",
                    "reservedMiB": "<number>",
                    "totalMiB": "<number>",
                    "usedMiB": "<number>"
                  },
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "baseId": "<long>",
                  "comment": "<string>",
                  "compactEfficiency": "<number>",
                  "compressionEfficiency": "<number>",
                  "compressionPolicy": "<string>",
                  "consoleUri": "<string>",
                  "conversionType": "CONVERSIONTYPE_DDS",
                  "copiedMB": "<number>",
                  "copiedPerc": "<integer>",
                  "copyOfID": "<long>",
                  "creationTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "customerId": "<string>",
                  "dataReduction": "<string>",
                  "ddcSize": "<number>",
                  "ddsSize": "<number>",
                  "dedup": "<string>",
                  "dedupSavingsSize": "<number>",
                  "dedupWrittenSize": "<number>",
                  "devType": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "efficiencyUpdateTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "expirationTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "fullyProvisioned": "<boolean>",
                  "generation": "<integer>",
                  "headsPerCylinder": "<integer>",
                  "healthState": "<long>",
                  "hidden": "<boolean>",
                  "hostWrittenMiB": "<number>",
                  "hostWrittenToVirtualPercent": "<number>",
                  "id": "<string>",
                  "initiators": [
                    {
                      "deviceDiscoveredName": "<string>",
                      "id": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "deviceDiscoveredName": "<string>",
                      "id": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "name": "<string>",
                  "parentID": "<long>",
                  "physParentID": "<long>",
                  "physicalCopy": "<boolean>",
                  "policy": {
                    "fileService": "<boolean>",
                    "hostDif3par": "<boolean>",
                    "hostDifStd": "<boolean>",
                    "noCache": "<boolean>",
                    "oneHost": "<boolean>",
                    "staleSnapshot": "<boolean>",
                    "system": "<boolean>",
                    "zeroDetect": "<boolean>",
                    "zeroFill": "<boolean>"
                  },
                  "provType": "<string>",
                  "raid": "<string>",
                  "rcopyStatus": "<string>",
                  "readOnly": "<boolean>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "retentionTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "roChildID": "<long>",
                  "rwChildID": "<long>",
                  "sectorsPerTrack": "<integer>",
                  "sharedParentId": "<long>",
                  "sizeMiB": "<number>",
                  "snapShotTier": "<string>",
                  "snapshotAllocLimit": "<long>",
                  "snapshotAllocWarning": "<long>",
                  "snapshotAllocationSettings": {
                    "HA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "RAIDType": "<string>",
                    "deviceSpeed": {
                      "text": "<string>",
                      "value": "<integer>"
                    },
                    "deviceType": "<string>",
                    "diskFilter": "<string>",
                    "requestedHA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "setSize": "<string>",
                    "stepSize": "<long>"
                  },
                  "snapshotCpgID": "<long>",
                  "snapshotCpgName": "<string>",
                  "snapshotSpace": {
                    "freeMiB": "<number>",
                    "grownMiB": "<number>",
                    "rawReservedMiB": "<number>",
                    "reclaimedMiB": "<number>",
                    "reservedMiB": "<number>",
                    "totalMiB": "<number>",
                    "usedMiB": "<number>"
                  },
                  "snapshotTdvvSize": {
                    "ddcSizeMiB": "<number>",
                    "ddsSizeMiB": "<number>",
                    "virtualSizeMiB": "<number>",
                    "writtenSizeMiB": "<number>"
                  },
                  "snapshotUsedToVirtualPercent": "<number>",
                  "spaceCalculationTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "started": "<boolean>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_FAILED"
                  },
                  "storageTier": "<string>",
                  "systemId": "<string>",
                  "thinProvisioned": "<boolean>",
                  "thinSavings": "<string>",
                  "totalRawReservedMiB": "<number>",
                  "totalReservedMiB": "<number>",
                  "totalSpaceMiB": "<number>",
                  "type": "<string>",
                  "unrefSpaceFreedTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "usedCapacity": "<number>",
                  "usedSizeMiB": "<number>",
                  "userAllocLimit": "<long>",
                  "userAllocWarning": "<long>",
                  "userAllocationSettings": {
                    "HA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "RAIDType": "<string>",
                    "deviceSpeed": {
                      "text": "<string>",
                      "value": "<integer>"
                    },
                    "deviceType": "<string>",
                    "diskFilter": "<string>",
                    "requestedHA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "setSize": "<string>",
                    "stepSize": "<long>"
                  },
                  "userCpgID": "<long>",
                  "userCpgName": "<string>",
                  "userReservedToVirtualPercent": "<number>",
                  "userSpace": {
                    "freeMiB": "<number>",
                    "grownMiB": "<number>",
                    "rawReservedMiB": "<number>",
                    "reclaimedMiB": "<number>",
                    "reservedMiB": "<number>",
                    "totalMiB": "<number>",
                    "usedMiB": "<number>"
                  },
                  "userUsedToVirtualPercent": "<number>",
                  "vlunSectorSize": "<integer>",
                  "volumeId": "<long>",
                  "volumePerformance": {
                    "iops": {
                      "read": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      },
                      "total": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      },
                      "write": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      }
                    },
                    "latencyMs": {
                      "read": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      },
                      "total": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      },
                      "write": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      }
                    },
                    "requestUri": "<string>",
                    "resourceUri": "<string>",
                    "throughputKbps": {
                      "read": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      },
                      "total": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      },
                      "write": {
                        "avgOf1day": "<number>",
                        "avgOf1hour": "<number>",
                        "avgOf8hours": "<number>",
                        "avgOfLatest": "<number>"
                      }
                    }
                  },
                  "volumeType": "<string>",
                  "wwn": "<string>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes > {id}"
        ],
        "summary": "Edit volume identified by {volumeId} from Primera / Alletra 9K",
        "description": "Edit volume identified by {volumeId} from Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "conversionType": "CONVERSIONTYPE_V1",
                  "dataReduction": "<boolean>",
                  "name": "<string>",
                  "sizeMib": "<number>",
                  "snapshotAllocWarning": "<long>",
                  "userAllocWarning": "<long>",
                  "userCpgName": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes"
        ],
        "summary": "Get all volumes details for Primera / Alletra 9K",
        "description": "Get all volumes details for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "adminAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "adminSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "baseId": "<long>",
                      "comment": "<string>",
                      "compactEfficiency": "<number>",
                      "compressionEfficiency": "<number>",
                      "compressionPolicy": "<string>",
                      "conversionType": "CONVERSIONTYPE_V2",
                      "copiedMB": "<number>",
                      "copiedPerc": "<integer>",
                      "copyOfID": "<long>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "dataReduction": "<string>",
                      "ddcSize": "<number>",
                      "ddsSize": "<number>",
                      "dedup": "<string>",
                      "dedupSavingsSize": "<number>",
                      "dedupWrittenSize": "<number>",
                      "devType": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "efficiencyUpdateTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "expirationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "fullyProvisioned": "<boolean>",
                      "generation": "<integer>",
                      "headsPerCylinder": "<integer>",
                      "healthState": "<long>",
                      "hidden": "<boolean>",
                      "hostWrittenMiB": "<number>",
                      "hostWrittenToVirtualPercent": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "name": "<string>",
                      "parentID": "<long>",
                      "physParentID": "<long>",
                      "physicalCopy": "<boolean>",
                      "policy": {
                        "fileService": "<boolean>",
                        "hostDif3par": "<boolean>",
                        "hostDifStd": "<boolean>",
                        "noCache": "<boolean>",
                        "oneHost": "<boolean>",
                        "staleSnapshot": "<boolean>",
                        "system": "<boolean>",
                        "zeroDetect": "<boolean>",
                        "zeroFill": "<boolean>"
                      },
                      "provType": "<string>",
                      "raid": "<string>",
                      "rcopyStatus": "<string>",
                      "readOnly": "<boolean>",
                      "resourceUri": "<string>",
                      "retentionTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "roChildID": "<long>",
                      "rwChildID": "<long>",
                      "sectorsPerTrack": "<integer>",
                      "sharedParentId": "<long>",
                      "sizeMiB": "<number>",
                      "snapShotTier": "<string>",
                      "snapshotAllocLimit": "<long>",
                      "snapshotAllocWarning": "<long>",
                      "snapshotAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "snapshotCpgID": "<long>",
                      "snapshotCpgName": "<string>",
                      "snapshotSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "snapshotTdvvSize": {
                        "ddcSizeMiB": "<number>",
                        "ddsSizeMiB": "<number>",
                        "virtualSizeMiB": "<number>",
                        "writtenSizeMiB": "<number>"
                      },
                      "snapshotUsedToVirtualPercent": "<number>",
                      "spaceCalculationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "started": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "storageTier": "<string>",
                      "systemId": "<string>",
                      "thinProvisioned": "<boolean>",
                      "thinSavings": "<string>",
                      "totalRawReservedMiB": "<number>",
                      "totalReservedMiB": "<number>",
                      "totalSpaceMiB": "<number>",
                      "type": "<string>",
                      "unrefSpaceFreedTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "usedCapacity": "<number>",
                      "usedSizeMiB": "<number>",
                      "userAllocLimit": "<long>",
                      "userAllocWarning": "<long>",
                      "userAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "userCpgID": "<long>",
                      "userCpgName": "<string>",
                      "userReservedToVirtualPercent": "<number>",
                      "userSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "userUsedToVirtualPercent": "<number>",
                      "vlunSectorSize": "<integer>",
                      "volumeId": "<long>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "adminAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "adminSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "baseId": "<long>",
                      "comment": "<string>",
                      "compactEfficiency": "<number>",
                      "compressionEfficiency": "<number>",
                      "compressionPolicy": "<string>",
                      "conversionType": null,
                      "copiedMB": "<number>",
                      "copiedPerc": "<integer>",
                      "copyOfID": "<long>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "dataReduction": "<string>",
                      "ddcSize": "<number>",
                      "ddsSize": "<number>",
                      "dedup": "<string>",
                      "dedupSavingsSize": "<number>",
                      "dedupWrittenSize": "<number>",
                      "devType": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "efficiencyUpdateTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "expirationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "fullyProvisioned": "<boolean>",
                      "generation": "<integer>",
                      "headsPerCylinder": "<integer>",
                      "healthState": "<long>",
                      "hidden": "<boolean>",
                      "hostWrittenMiB": "<number>",
                      "hostWrittenToVirtualPercent": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "name": "<string>",
                      "parentID": "<long>",
                      "physParentID": "<long>",
                      "physicalCopy": "<boolean>",
                      "policy": {
                        "fileService": "<boolean>",
                        "hostDif3par": "<boolean>",
                        "hostDifStd": "<boolean>",
                        "noCache": "<boolean>",
                        "oneHost": "<boolean>",
                        "staleSnapshot": "<boolean>",
                        "system": "<boolean>",
                        "zeroDetect": "<boolean>",
                        "zeroFill": "<boolean>"
                      },
                      "provType": "<string>",
                      "raid": "<string>",
                      "rcopyStatus": "<string>",
                      "readOnly": "<boolean>",
                      "resourceUri": "<string>",
                      "retentionTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "roChildID": "<long>",
                      "rwChildID": "<long>",
                      "sectorsPerTrack": "<integer>",
                      "sharedParentId": "<long>",
                      "sizeMiB": "<number>",
                      "snapShotTier": "<string>",
                      "snapshotAllocLimit": "<long>",
                      "snapshotAllocWarning": "<long>",
                      "snapshotAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "snapshotCpgID": "<long>",
                      "snapshotCpgName": "<string>",
                      "snapshotSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "snapshotTdvvSize": {
                        "ddcSizeMiB": "<number>",
                        "ddsSizeMiB": "<number>",
                        "virtualSizeMiB": "<number>",
                        "writtenSizeMiB": "<number>"
                      },
                      "snapshotUsedToVirtualPercent": "<number>",
                      "spaceCalculationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "started": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "storageTier": "<string>",
                      "systemId": "<string>",
                      "thinProvisioned": "<boolean>",
                      "thinSavings": "<string>",
                      "totalRawReservedMiB": "<number>",
                      "totalReservedMiB": "<number>",
                      "totalSpaceMiB": "<number>",
                      "type": "<string>",
                      "unrefSpaceFreedTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "usedCapacity": "<number>",
                      "usedSizeMiB": "<number>",
                      "userAllocLimit": "<long>",
                      "userAllocWarning": "<long>",
                      "userAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "userCpgID": "<long>",
                      "userCpgName": "<string>",
                      "userReservedToVirtualPercent": "<number>",
                      "userSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "userUsedToVirtualPercent": "<number>",
                      "vlunSectorSize": "<integer>",
                      "volumeId": "<long>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > volumes"
        ],
        "summary": "Create volume for a storage system Primera / Alletra 9K",
        "description": "Create volume for a storage system Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "userCpg": "<string>",
                  "sizeMib": "<integer>",
                  "comments": "<string>",
                  "count": "<integer>",
                  "dataReduction": "<boolean>",
                  "snapCpg": "<string>",
                  "snapshotAllocWarning": "<integer>",
                  "userAllocWarning": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/vm-manager-settings/{vcenterSettingId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > vm-manager-settings > {vcenterSettingId}"
        ],
        "summary": "Delete vcenter setting identified by {vcenterSettingId} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Delete vcenter setting identified by {vcenterSettingId} on storage system Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "vcenterSettingId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > vm-manager-settings > {vcenterSettingId}"
        ],
        "summary": "Get vcenter setting detail for a given vcenter setting of a storage system Primera / Alletra 9K",
        "description": "Get vcenter setting detail for a given vcenter setting of a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "vcenterSettingId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "description": "<string>",
                  "friendlyCert": {
                    "ValidFrom": {
                      "ms": "<integer>",
                      "tz": "<string>"
                    },
                    "ValidUntil": {
                      "ms": "<integer>",
                      "tz": "<string>"
                    },
                    "issuedTo": "<string>",
                    "issuer": "<string>"
                  },
                  "generation": "<long>",
                  "id": "<string>",
                  "inetaddress": "<string>",
                  "name": "<string>",
                  "port": "<long>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "status": {
                    "default": "<string>",
                    "key": "<string>"
                  },
                  "systemId": "<string>",
                  "type": "<string>",
                  "username": "<string>",
                  "vmManagerType": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > vm-manager-settings > {vcenterSettingId}"
        ],
        "summary": "Edit vCenter setting identified by {vcenterSettingId} on Primera / Alletra 9K identified by {systemId}",
        "description": "Edit vCenter setting identified by {vcenterSettingId} on Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "certChainPem": "<string>",
                  "description": "<string>",
                  "inetaddress": "<string>",
                  "name": "<string>",
                  "password": "<string>",
                  "port": "<long>",
                  "username": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "vcenterSettingId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/vm-manager-settings": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > vm-manager-settings"
        ],
        "summary": "Get vcenter settings for a storage system Primera / Alletra 9K",
        "description": "Get vcenter settings for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "friendlyCert": {
                        "ValidFrom": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "ValidUntil": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "issuedTo": "<string>",
                        "issuer": "<string>"
                      },
                      "generation": "<long>",
                      "id": "<string>",
                      "inetaddress": "<string>",
                      "name": "<string>",
                      "port": "<long>",
                      "resourceUri": "<string>",
                      "status": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "systemId": "<string>",
                      "type": "<string>",
                      "username": "<string>",
                      "vmManagerType": "<string>"
                    },
                    {
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "description": "<string>",
                      "friendlyCert": {
                        "ValidFrom": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "ValidUntil": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "issuedTo": "<string>",
                        "issuer": "<string>"
                      },
                      "generation": "<long>",
                      "id": "<string>",
                      "inetaddress": "<string>",
                      "name": "<string>",
                      "port": "<long>",
                      "resourceUri": "<string>",
                      "status": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "systemId": "<string>",
                      "type": "<string>",
                      "username": "<string>",
                      "vmManagerType": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > vm-manager-settings"
        ],
        "summary": "Add vCenter settings to storage system Primera / Alletra 9K",
        "description": "Add vCenter settings to storage system Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "inetaddress": "<string>",
                  "port": "<long>",
                  "username": "<string>",
                  "password": "<string>",
                  "certChainPem": "<string>",
                  "description": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/trust-certificates/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > trust-certificates > {id}"
        ],
        "summary": "Get certificates trusted by Primera / Alletra 9K identified by {id}",
        "description": "Get certificates trusted by Primera / Alletra 9K identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "commonname": "<string>",
                  "detail": {
                    "default": "<string>",
                    "key": "<string>"
                  },
                  "domain": "<string>",
                  "enddate": {
                    "ms": "<long>",
                    "tz": "<string>"
                  },
                  "fingerprint": "<string>",
                  "hash": "<string>",
                  "id": "<string>",
                  "issuer": "<string>",
                  "isvalid": "<boolean>",
                  "keyUsage": "<string>",
                  "pem": "<string>",
                  "serial": "<string>",
                  "signaturetype": "<string>",
                  "startdate": {
                    "ms": "<long>",
                    "tz": "<string>"
                  },
                  "subject": "<string>",
                  "systemId": "<string>",
                  "type": "<string>",
                  "uri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/trust-certificates/remove": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > trust-certificates > remove"
        ],
        "summary": "Delete trusted certificates from storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Delete trusted certificates from storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "trustedCertificates": [
                    {
                      "trustedCertificate": "<string>"
                    },
                    {
                      "trustedCertificate": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/trust-certificates": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > trust-certificates"
        ],
        "summary": "Get certificates trusted by Primera / Alletra 9K",
        "description": "Get certificates trusted by Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Certificates by Key.",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "commonname": "<string>",
                      "detail": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "domain": "<string>",
                      "enddate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "fingerprint": "<string>",
                      "hash": "<string>",
                      "id": "<string>",
                      "issuer": "<string>",
                      "isvalid": "<boolean>",
                      "keyUsage": "<string>",
                      "pem": "<string>",
                      "serial": "<string>",
                      "signaturetype": "<string>",
                      "startdate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "subject": "<string>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "uri": "<string>"
                    },
                    {
                      "commonname": "<string>",
                      "detail": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "domain": "<string>",
                      "enddate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "fingerprint": "<string>",
                      "hash": "<string>",
                      "id": "<string>",
                      "issuer": "<string>",
                      "isvalid": "<boolean>",
                      "keyUsage": "<string>",
                      "pem": "<string>",
                      "serial": "<string>",
                      "signaturetype": "<string>",
                      "startdate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "subject": "<string>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "uri": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > trust-certificates"
        ],
        "summary": "Add trusted certificates for storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Add trusted certificates for storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "action": "VERIFY_CERT_CHAIN",
                  "parameters": {
                    "type": "<string>",
                    "certificates": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/telemetry": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > telemetry"
        ],
        "summary": "Get telemetry status for a storage system Primera / Alletra 9K",
        "description": "Get telemetry status for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "collectionServer": "<string>",
                  "connectivityStatus": "DISABLED",
                  "connectivityTestTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "details": [
                    {
                      "args": [
                        {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        {
                          "ms": "<integer>",
                          "tz": "<string>"
                        }
                      ],
                      "default": "<string>",
                      "key": "<string>"
                    },
                    {
                      "args": [
                        {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        {
                          "ms": "<integer>",
                          "tz": "<string>"
                        }
                      ],
                      "default": "<string>",
                      "key": "<string>"
                    }
                  ],
                  "id": "<string>",
                  "lastFileSent": "<string>",
                  "lastFileTransferTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "lastSuccessfulConnectivityTestTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "proxyConnectivity": "FAILED",
                  "rDAConfigured": "NORMAL",
                  "rDAStatus": null,
                  "rSvSStatus": "NOT_APPLICABLE",
                  "rTSStatus": "NOT_APPLICABLE",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "rolledUpStatus": null,
                  "sharedVolumeStatus": "NORMAL",
                  "transferStatus": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/targets/{targetName}/performance-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > targets > {targetName} > performance-history"
        ],
        "summary": "Get QoS performance trend data of Primera / Alletra 9K target identified by {targetName}",
        "description": "Get QoS performance trend data of Primera / Alletra 9K target identified by {targetName}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "targetName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "qosMetricsData": {
                    "customerId": "<string>",
                    "items": [
                      {
                        "bwLimitKbps": "<number>",
                        "consoleUri": "<string>",
                        "generation": "<integer>",
                        "timestampms": "<long>",
                        "type": "<string>",
                        "wqlen": "<number>"
                      },
                      {
                        "bwLimitKbps": "<number>",
                        "consoleUri": "<string>",
                        "generation": "<integer>",
                        "timestampms": "<long>",
                        "type": "<string>",
                        "wqlen": "<number>"
                      }
                    ],
                    "pageLimit": "<integer>",
                    "pageOffset": "<integer>",
                    "total": "<integer>"
                  },
                  "requestURI": "<string>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/replication-partners/{replicationPartnerId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > replication-partners > {replicationPartnerId}"
        ],
        "summary": "Get details of replication partner identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Get details of replication partner identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "replicationPartnerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "consoleUri": "occaecat ullamco",
                  "requestUri": "sit aute nostrud nulla incididunt",
                  "id": "<string>",
                  "name": "<string>",
                  "replicationPartnerType": "<string>",
                  "status": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "bufferSizeB": "<long>",
                  "customerId": "<string>",
                  "displayName": "<string>",
                  "domain": "<string>",
                  "flags": "<long>",
                  "generation": "<integer>",
                  "health": "<long>",
                  "isRemoteArraySupportReplication": "<boolean>",
                  "minPeriodSecs": "<long>",
                  "nodeWWN": "<string>",
                  "numSockets": "<long>",
                  "policies": {
                    "mirrorConfig": "<boolean>"
                  },
                  "quorumATFTimeout": "<long>",
                  "quorumIpAddress": "<string>",
                  "quorumSSLPort": "<long>",
                  "quorumStatus": "<string>",
                  "quorumStatusQual": "<string>",
                  "quorumVersion": "<string>",
                  "remoteId": "<string>",
                  "remoteName": "<string>",
                  "remoteReplicationId": "<long>",
                  "remoteSystemId": "<string>",
                  "remoteSystemName": "<string>",
                  "replicationId": "<long>",
                  "replicationPartnerLinks": {
                    "items": [
                      {
                        "IPC": "<string>",
                        "displayName": "<string>",
                        "domain": "<string>",
                        "id": "<string>",
                        "name": "<string>",
                        "partnerName": "<string>",
                        "port": "<string>",
                        "portPos": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "rcLinkId": "<long>",
                        "remoteAddress": "<string>",
                        "remoteId": "<string>",
                        "remotePortPos": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "remoteState": "<string>",
                        "remoteStatus": "<string>",
                        "sourceAddress": "<string>",
                        "state": "<string>",
                        "status": "<string>",
                        "systemId": "<string>",
                        "systemWWN": "<string>",
                        "throughputKByteSec": "<long>",
                        "type": "<long>"
                      },
                      {
                        "IPC": "<string>",
                        "displayName": "<string>",
                        "domain": "<string>",
                        "id": "<string>",
                        "name": "<string>",
                        "partnerName": "<string>",
                        "port": "<string>",
                        "portPos": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "rcLinkId": "<long>",
                        "remoteAddress": "<string>",
                        "remoteId": "<string>",
                        "remotePortPos": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "remoteState": "<string>",
                        "remoteStatus": "<string>",
                        "sourceAddress": "<string>",
                        "state": "<string>",
                        "status": "<string>",
                        "systemId": "<string>",
                        "systemWWN": "<string>",
                        "throughputKByteSec": "<long>",
                        "type": "<long>"
                      }
                    ],
                    "total": "<long>"
                  },
                  "replicationSystemId": "<long>",
                  "resourceUri": "<string>",
                  "state": "<string>",
                  "systemId": "<string>",
                  "systemName": "<string>",
                  "systemWWN": "<string>",
                  "type": "<string>",
                  "version": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > replication-partners > {replicationPartnerId}"
        ],
        "summary": "Edit replication partner identified by {replicationPartnerId} on Primera / Alletra 9K identified by {systemId}",
        "description": "Edit replication partner identified by {replicationPartnerId} on Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "addRcLinks": {
                    "source": [
                      {
                        "address": "<string>",
                        "portPos": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "targetName": "<string>",
                        "type": "<long>"
                      },
                      {
                        "address": "<string>",
                        "portPos": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "targetName": "<string>",
                        "type": "<long>"
                      }
                    ],
                    "replicationPartnerSystemId": "<string>",
                    "target": [
                      {
                        "address": "<string>",
                        "portPos": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "targetName": "<string>",
                        "type": "<long>"
                      },
                      {
                        "address": "<string>",
                        "portPos": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "targetName": "<string>",
                        "type": "<long>"
                      }
                    ]
                  },
                  "removeRcLinks": {
                    "source": [
                      {
                        "rcLinkId": "<string>"
                      },
                      {
                        "rcLinkId": "<string>"
                      }
                    ],
                    "replicationPartnerSystemId": "<string>",
                    "target": [
                      {
                        "rcLinkId": "<string>"
                      },
                      {
                        "rcLinkId": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "replicationPartnerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/replication-partners/remove": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > replication-partners > remove"
        ],
        "summary": "Delete replication partner from storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Delete replication partner from storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartners": [
                    {
                      "srcReplicationId": "<string>",
                      "replicationPartnerSystemId": "<string>",
                      "targetReplicationId": "<string>"
                    },
                    {
                      "srcReplicationId": "<string>",
                      "replicationPartnerSystemId": "<string>",
                      "targetReplicationId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/replication-partners": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > replication-partners"
        ],
        "summary": "Get details of replication partners on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Get details of replication partners on storage system Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter replication partners by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "includeIndirectPartners",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Include indirect partners. Indirect partners are excluded by default. This parameter cannot be used with other query parameters.",
            "example": "<boolean>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "replicationPartnerType": "<string>",
                      "status": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "bufferSizeB": "<long>",
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "flags": "<long>",
                      "generation": "<integer>",
                      "health": "<long>",
                      "isRemoteArraySupportReplication": "<boolean>",
                      "minPeriodSecs": "<long>",
                      "nodeWWN": "<string>",
                      "numSockets": "<long>",
                      "policies": {
                        "mirrorConfig": "<boolean>"
                      },
                      "quorumATFTimeout": "<long>",
                      "quorumIpAddress": "<string>",
                      "quorumSSLPort": "<long>",
                      "quorumStatus": "<string>",
                      "quorumStatusQual": "<string>",
                      "quorumVersion": "<string>",
                      "remoteId": "<string>",
                      "remoteName": "<string>",
                      "remoteReplicationId": "<long>",
                      "remoteSystemId": "<string>",
                      "remoteSystemName": "<string>",
                      "replicationId": "<long>",
                      "replicationPartnerLinks": {
                        "items": [
                          {
                            "IPC": "<string>",
                            "displayName": "<string>",
                            "domain": "<string>",
                            "id": "<string>",
                            "name": "<string>",
                            "partnerName": "<string>",
                            "port": "<string>",
                            "portPos": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            },
                            "rcLinkId": "<long>",
                            "remoteAddress": "<string>",
                            "remoteId": "<string>",
                            "remotePortPos": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            },
                            "remoteState": "<string>",
                            "remoteStatus": "<string>",
                            "sourceAddress": "<string>",
                            "state": "<string>",
                            "status": "<string>",
                            "systemId": "<string>",
                            "systemWWN": "<string>",
                            "throughputKByteSec": "<long>",
                            "type": "<long>"
                          },
                          {
                            "IPC": "<string>",
                            "displayName": "<string>",
                            "domain": "<string>",
                            "id": "<string>",
                            "name": "<string>",
                            "partnerName": "<string>",
                            "port": "<string>",
                            "portPos": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            },
                            "rcLinkId": "<long>",
                            "remoteAddress": "<string>",
                            "remoteId": "<string>",
                            "remotePortPos": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            },
                            "remoteState": "<string>",
                            "remoteStatus": "<string>",
                            "sourceAddress": "<string>",
                            "state": "<string>",
                            "status": "<string>",
                            "systemId": "<string>",
                            "systemWWN": "<string>",
                            "throughputKByteSec": "<long>",
                            "type": "<long>"
                          }
                        ],
                        "total": "<long>"
                      },
                      "replicationSystemId": "<long>",
                      "resourceUri": "<string>",
                      "state": "<string>",
                      "systemId": "<string>",
                      "systemName": "<string>",
                      "systemWWN": "<string>",
                      "type": "<string>",
                      "version": "<long>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "replicationPartnerType": "<string>",
                      "status": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "bufferSizeB": "<long>",
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "flags": "<long>",
                      "generation": "<integer>",
                      "health": "<long>",
                      "isRemoteArraySupportReplication": "<boolean>",
                      "minPeriodSecs": "<long>",
                      "nodeWWN": "<string>",
                      "numSockets": "<long>",
                      "policies": {
                        "mirrorConfig": "<boolean>"
                      },
                      "quorumATFTimeout": "<long>",
                      "quorumIpAddress": "<string>",
                      "quorumSSLPort": "<long>",
                      "quorumStatus": "<string>",
                      "quorumStatusQual": "<string>",
                      "quorumVersion": "<string>",
                      "remoteId": "<string>",
                      "remoteName": "<string>",
                      "remoteReplicationId": "<long>",
                      "remoteSystemId": "<string>",
                      "remoteSystemName": "<string>",
                      "replicationId": "<long>",
                      "replicationPartnerLinks": {
                        "items": [
                          {
                            "IPC": "<string>",
                            "displayName": "<string>",
                            "domain": "<string>",
                            "id": "<string>",
                            "name": "<string>",
                            "partnerName": "<string>",
                            "port": "<string>",
                            "portPos": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            },
                            "rcLinkId": "<long>",
                            "remoteAddress": "<string>",
                            "remoteId": "<string>",
                            "remotePortPos": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            },
                            "remoteState": "<string>",
                            "remoteStatus": "<string>",
                            "sourceAddress": "<string>",
                            "state": "<string>",
                            "status": "<string>",
                            "systemId": "<string>",
                            "systemWWN": "<string>",
                            "throughputKByteSec": "<long>",
                            "type": "<long>"
                          },
                          {
                            "IPC": "<string>",
                            "displayName": "<string>",
                            "domain": "<string>",
                            "id": "<string>",
                            "name": "<string>",
                            "partnerName": "<string>",
                            "port": "<string>",
                            "portPos": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            },
                            "rcLinkId": "<long>",
                            "remoteAddress": "<string>",
                            "remoteId": "<string>",
                            "remotePortPos": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            },
                            "remoteState": "<string>",
                            "remoteStatus": "<string>",
                            "sourceAddress": "<string>",
                            "state": "<string>",
                            "status": "<string>",
                            "systemId": "<string>",
                            "systemWWN": "<string>",
                            "throughputKByteSec": "<long>",
                            "type": "<long>"
                          }
                        ],
                        "total": "<long>"
                      },
                      "replicationSystemId": "<long>",
                      "resourceUri": "<string>",
                      "state": "<string>",
                      "systemId": "<string>",
                      "systemName": "<string>",
                      "systemWWN": "<string>",
                      "type": "<string>",
                      "version": "<long>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > replication-partners"
        ],
        "summary": "Create replication partners on Primera / Alletra 9K identified by {systemId}",
        "description": "Create replication partners on Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartners": [
                    {
                      "source": {
                        "name": "<string>",
                        "type": "<long>",
                        "portPosAndLink": [
                          {
                            "link": "<string>",
                            "portPosition": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            }
                          },
                          {
                            "link": "<string>",
                            "portPosition": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            }
                          }
                        ],
                        "disabled": "<boolean>",
                        "nodeWWN": "<string>"
                      },
                      "replicationPartnerSystemId": "<string>",
                      "target": {
                        "name": "<string>",
                        "type": "<long>",
                        "portPosAndLink": [
                          {
                            "link": "<string>",
                            "portPosition": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            }
                          },
                          {
                            "link": "<string>",
                            "portPosition": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            }
                          }
                        ],
                        "disabled": "<boolean>",
                        "nodeWWN": "<string>"
                      }
                    },
                    {
                      "source": {
                        "name": "<string>",
                        "type": "<long>",
                        "portPosAndLink": [
                          {
                            "link": "<string>",
                            "portPosition": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            }
                          },
                          {
                            "link": "<string>",
                            "portPosition": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            }
                          }
                        ],
                        "disabled": "<boolean>",
                        "nodeWWN": "<string>"
                      },
                      "replicationPartnerSystemId": "<string>",
                      "target": {
                        "name": "<string>",
                        "type": "<long>",
                        "portPosAndLink": [
                          {
                            "link": "<string>",
                            "portPosition": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            }
                          },
                          {
                            "link": "<string>",
                            "portPosition": {
                              "node": "<long>",
                              "port": "<long>",
                              "slot": "<long>"
                            }
                          }
                        ],
                        "disabled": "<boolean>",
                        "nodeWWN": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/quorum-witness/{replicationPartnerId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > quorum-witness > {replicationPartnerId}"
        ],
        "summary": "Delete quorum witness identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Delete quorum witness identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "replicationPartnerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > quorum-witness > {replicationPartnerId}"
        ],
        "summary": "Get details of quorum witness configured on replication partner identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Get details of quorum witness configured on replication partner identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "replicationPartnerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "consoleUri": "commodo non occaecat",
                  "requestUri": "exercitation officia dolore",
                  "id": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "customerId": "<string>",
                  "generation": "<integer>",
                  "isRemoteArraySupportReplication": "<boolean>",
                  "name": "<string>",
                  "quorumATFTimeout": "<long>",
                  "quorumIpAddress": "<string>",
                  "quorumSSLPort": "<long>",
                  "quorumStatus": "<string>",
                  "quorumStatusQual": "<string>",
                  "quorumVersion": "<string>",
                  "remoteId": "<string>",
                  "remoteName": "<string>",
                  "remoteSystemId": "<string>",
                  "remoteSystemName": "<string>",
                  "resourceUri": "<string>",
                  "systemId": "<string>",
                  "systemName": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > quorum-witness > {replicationPartnerId}"
        ],
        "summary": "Edit quorum witness identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Edit quorum witness identified by {replicationPartnerId} on storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "replicationPartnerSystemId": "<string>",
                  "targetReplicationId": "<string>",
                  "startQuorumWitness": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "replicationPartnerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings/quorum-witness": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > quorum-witness"
        ],
        "summary": "Get quorum witness configuration details from storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Get quorum witness configuration details from storage system Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter witness by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort witness resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "isRemoteArraySupportReplication": "<boolean>",
                      "name": "<string>",
                      "quorumATFTimeout": "<long>",
                      "quorumIpAddress": "<string>",
                      "quorumSSLPort": "<long>",
                      "quorumStatus": "<string>",
                      "quorumStatusQual": "<string>",
                      "quorumVersion": "<string>",
                      "remoteId": "<string>",
                      "remoteName": "<string>",
                      "remoteSystemId": "<string>",
                      "remoteSystemName": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "systemName": "<string>",
                      "type": "<string>"
                    },
                    {
                      "id": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "isRemoteArraySupportReplication": "<boolean>",
                      "name": "<string>",
                      "quorumATFTimeout": "<long>",
                      "quorumIpAddress": "<string>",
                      "quorumSSLPort": "<long>",
                      "quorumStatus": "<string>",
                      "quorumStatusQual": "<string>",
                      "quorumVersion": "<string>",
                      "remoteId": "<string>",
                      "remoteName": "<string>",
                      "remoteSystemId": "<string>",
                      "remoteSystemName": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "systemName": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings > quorum-witness"
        ],
        "summary": "Create quorum witness on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Create quorum witness on storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "srcReplicationId": "<string>",
                  "targetReplicationId": "<string>",
                  "replicationPartnerSystemId": "<string>",
                  "parameters": {
                    "ipAddress": "<string>",
                    "port": "<integer>",
                    "ssl": "<boolean>"
                  },
                  "startQuorumWitness": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/system-settings": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings"
        ],
        "summary": "Get the system settings configuration details",
        "description": "Get the system settings configuration details",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": {
                    "associatedLinks": [
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      },
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "authMode": "<string>",
                    "consoleUri": "<string>",
                    "customerId": "<string>",
                    "generation": "<long>",
                    "installationsites": {
                      "city": "<string>",
                      "company": "<string>",
                      "country": "<string>",
                      "hpePassportId": "<string>",
                      "hpePassword": "<string>",
                      "id": "<string>",
                      "postalCode": "<string>",
                      "setSystemLocation": "<boolean>",
                      "state": "<string>",
                      "streetAddress": "<string>",
                      "supportProvider": "<string>",
                      "systemId": "<string>"
                    },
                    "isFIPSEnabled": "<boolean>",
                    "name": "<string>",
                    "ntpServer": "<string>",
                    "remoteSyslogSettings": {
                      "remoteSysLog": "<long>",
                      "remoteSysLogHost": "<string>",
                      "remoteSysLogSecurityHost": "<string>"
                    },
                    "srinfo": {
                      "percentUsed": "<number>",
                      "totalCapacityMiB": "<number>",
                      "usedCapacityMiB": "<number>"
                    },
                    "supportcontact": {
                      "company": "<string>",
                      "companyCode": "<string>",
                      "country": "<string>",
                      "fax": "<string>",
                      "firstName": "<string>",
                      "id": "<string>",
                      "includeSvcAlerts": "<boolean>",
                      "lastName": "<string>",
                      "notificationSeverities": [
                        "<integer>",
                        "<integer>"
                      ],
                      "preferredLanguage": "<string>",
                      "primaryEmail": "<string>",
                      "primaryPhone": "<string>",
                      "receiveEmail": "<boolean>",
                      "receiveGrouped": "<boolean>",
                      "secondaryEmail": "<string>",
                      "secondaryPhone": "<string>",
                      "systemId": "<string>",
                      "systemSupportContact": "<boolean>"
                    },
                    "systemDate": "<long>",
                    "systemId": "<string>",
                    "systemParameters": {
                      "allowWrtbackSingleNode": "<number>",
                      "allowWrtbackUpgrade": "<number>",
                      "enableAIQoS": "<string>",
                      "fcRawSpaceAlert": "<integer>",
                      "hostDIF": "<string>",
                      "hostDIFTemplate": "STD_HOST_DIF",
                      "maxVolumeRetention": "<integer>",
                      "overprovRatioLimit": "<number>",
                      "overprovRatioWarning": "<number>"
                    },
                    "timezone": "<string>",
                    "type": "<string>"
                  },
                  "requestUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings"
        ],
        "summary": "Edit system settings configuration",
        "description": "Edit system settings configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authMode": {
                    "authmode": "<string>"
                  },
                  "dateTime": "<string>",
                  "installationSites": {
                    "city": "<string>",
                    "company": "<string>",
                    "country": "<string>",
                    "postalCode": "<string>",
                    "setSystemLocation": "<boolean>",
                    "state": "<string>",
                    "streetAddress": "<string>",
                    "supportProvider": "<string>"
                  },
                  "name": "<string>",
                  "ntpAddresses": [
                    "<string>",
                    "<string>"
                  ],
                  "remoteSyslogSettings": {
                    "remoteSysLog": "<long>",
                    "remoteSysLogHost": [
                      "<string>",
                      "<string>"
                    ],
                    "remoteSysLogSecurityHost": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "srinfo": {
                    "newCapacityMiB": "<number>"
                  },
                  "supportContact": {
                    "company": "<string>",
                    "companyCode": "<string>",
                    "country": "<string>",
                    "fax": "<string>",
                    "firstName": "<string>",
                    "id": "<string>",
                    "includeSvcAlerts": "<boolean>",
                    "lastName": "<string>",
                    "notificationSeverities": [
                      "<integer>",
                      "<integer>"
                    ],
                    "preferredLanguage": "<string>",
                    "primaryEmail": "<string>",
                    "primaryPhone": "<string>",
                    "receiveEmail": "<boolean>",
                    "receiveGrouped": "<boolean>",
                    "secondaryEmail": "<string>",
                    "secondaryPhone": "<string>",
                    "systemId": "<string>"
                  },
                  "systemParameters": {
                    "allowWrtbackSingleNode": "<number>",
                    "enableAIQoS": "<string>",
                    "hostDIF": "<string>",
                    "hostDIFTemplate": "STD_HOST_DIF",
                    "overprovRatioLimit": "<number>",
                    "overprovRatioWarning": "<number>"
                  },
                  "timezone": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > system-settings"
        ],
        "summary": "Edit system settings configuration",
        "description": "Edit system settings configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authMode": {
                    "authmode": "<string>"
                  },
                  "dateTime": "<string>",
                  "installationSites": {
                    "city": "<string>",
                    "company": "<string>",
                    "country": "<string>",
                    "postalCode": "<string>",
                    "setSystemLocation": "<boolean>",
                    "state": "<string>",
                    "streetAddress": "<string>",
                    "supportProvider": "<string>"
                  },
                  "name": "<string>",
                  "ntpAddresses": [
                    "<string>",
                    "<string>"
                  ],
                  "remoteSyslogSettings": {
                    "remoteSysLog": "<long>",
                    "remoteSysLogHost": [
                      "<string>",
                      "<string>"
                    ],
                    "remoteSysLogSecurityHost": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "srinfo": {
                    "newCapacityMiB": "<number>"
                  },
                  "supportContact": {
                    "company": "<string>",
                    "companyCode": "<string>",
                    "country": "<string>",
                    "fax": "<string>",
                    "firstName": "<string>",
                    "id": "<string>",
                    "includeSvcAlerts": "<boolean>",
                    "lastName": "<string>",
                    "notificationSeverities": [
                      "<integer>",
                      "<integer>"
                    ],
                    "preferredLanguage": "<string>",
                    "primaryEmail": "<string>",
                    "primaryPhone": "<string>",
                    "receiveEmail": "<boolean>",
                    "receiveGrouped": "<boolean>",
                    "secondaryEmail": "<string>",
                    "secondaryPhone": "<string>",
                    "systemId": "<string>"
                  },
                  "systemParameters": {
                    "allowWrtbackSingleNode": "<number>",
                    "enableAIQoS": "<string>",
                    "hostDIF": "<string>",
                    "hostDIFTemplate": "STD_HOST_DIF",
                    "overprovRatioLimit": "<number>",
                    "overprovRatioWarning": "<number>"
                  },
                  "timezone": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/support-settings": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > support-settings"
        ],
        "summary": "Get support settings for a storage system Primera / Alletra 9K",
        "description": "Get support settings for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "connectToHPE": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "emailNotifications": "<string>",
                  "enterpriseServerURL": "<string>",
                  "generation": "<long>",
                  "id": "<string>",
                  "miniInsploreEnabled": "<string>",
                  "rapForwarding": "<string>",
                  "remoteAccess": "ENABLE_NONROOT",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "rtsEnabled": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > support-settings"
        ],
        "summary": "Add support settings for a storage system Primera / Alletra 9K",
        "description": "Add support settings for a storage system Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "connectToHPE": "<string>",
                  "rapForwarding": "<string>",
                  "rtsEnabled": "<string>",
                  "remoteAccess": "ENABLE_NONROOT",
                  "deviceId": "<string>",
                  "enterpriseServerURL": "<string>",
                  "miniInsploreEnabled": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > support-settings"
        ],
        "summary": "Edit support settings for a storage system Primera / Alletra 9K",
        "description": "Edit support settings for a storage system Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "connectToHPE": "<string>",
                  "rapForwarding": "<string>",
                  "rtsEnabled": "<string>",
                  "remoteAccess": "ENABLE_NONROOT",
                  "deviceId": "<string>",
                  "enterpriseServerURL": "<string>",
                  "miniInsploreEnabled": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/storage-pools/{id}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > storage-pools > {id} > volumes"
        ],
        "summary": "Get all volumes for storage-pool identified by {uuid} of Primera / Alletra 9K",
        "description": "Get all volumes for storage-pool identified by {uuid} of Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "adminAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "adminSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "baseId": "<long>",
                      "comment": "<string>",
                      "compactEfficiency": "<number>",
                      "compressionEfficiency": "<number>",
                      "compressionPolicy": "<string>",
                      "conversionType": "CONVERSIONTYPE_V2",
                      "copiedMB": "<number>",
                      "copiedPerc": "<integer>",
                      "copyOfID": "<long>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "dataReduction": "<string>",
                      "ddcSize": "<number>",
                      "ddsSize": "<number>",
                      "dedup": "<string>",
                      "dedupSavingsSize": "<number>",
                      "dedupWrittenSize": "<number>",
                      "devType": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "efficiencyUpdateTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "expirationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "fullyProvisioned": "<boolean>",
                      "generation": "<integer>",
                      "headsPerCylinder": "<integer>",
                      "healthState": "<long>",
                      "hidden": "<boolean>",
                      "hostWrittenMiB": "<number>",
                      "hostWrittenToVirtualPercent": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "name": "<string>",
                      "parentID": "<long>",
                      "physParentID": "<long>",
                      "physicalCopy": "<boolean>",
                      "policy": {
                        "fileService": "<boolean>",
                        "hostDif3par": "<boolean>",
                        "hostDifStd": "<boolean>",
                        "noCache": "<boolean>",
                        "oneHost": "<boolean>",
                        "staleSnapshot": "<boolean>",
                        "system": "<boolean>",
                        "zeroDetect": "<boolean>",
                        "zeroFill": "<boolean>"
                      },
                      "provType": "<string>",
                      "raid": "<string>",
                      "rcopyStatus": "<string>",
                      "readOnly": "<boolean>",
                      "resourceUri": "<string>",
                      "retentionTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "roChildID": "<long>",
                      "rwChildID": "<long>",
                      "sectorsPerTrack": "<integer>",
                      "sharedParentId": "<long>",
                      "sizeMiB": "<number>",
                      "snapShotTier": "<string>",
                      "snapshotAllocLimit": "<long>",
                      "snapshotAllocWarning": "<long>",
                      "snapshotAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "snapshotCpgID": "<long>",
                      "snapshotCpgName": "<string>",
                      "snapshotSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "snapshotTdvvSize": {
                        "ddcSizeMiB": "<number>",
                        "ddsSizeMiB": "<number>",
                        "virtualSizeMiB": "<number>",
                        "writtenSizeMiB": "<number>"
                      },
                      "snapshotUsedToVirtualPercent": "<number>",
                      "spaceCalculationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "started": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "storageTier": "<string>",
                      "systemId": "<string>",
                      "thinProvisioned": "<boolean>",
                      "thinSavings": "<string>",
                      "totalRawReservedMiB": "<number>",
                      "totalReservedMiB": "<number>",
                      "totalSpaceMiB": "<number>",
                      "type": "<string>",
                      "unrefSpaceFreedTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "usedCapacity": "<number>",
                      "usedSizeMiB": "<number>",
                      "userAllocLimit": "<long>",
                      "userAllocWarning": "<long>",
                      "userAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "userCpgID": "<long>",
                      "userCpgName": "<string>",
                      "userReservedToVirtualPercent": "<number>",
                      "userSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "userUsedToVirtualPercent": "<number>",
                      "vlunSectorSize": "<integer>",
                      "volumeId": "<long>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "adminAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "adminSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "baseId": "<long>",
                      "comment": "<string>",
                      "compactEfficiency": "<number>",
                      "compressionEfficiency": "<number>",
                      "compressionPolicy": "<string>",
                      "conversionType": null,
                      "copiedMB": "<number>",
                      "copiedPerc": "<integer>",
                      "copyOfID": "<long>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "dataReduction": "<string>",
                      "ddcSize": "<number>",
                      "ddsSize": "<number>",
                      "dedup": "<string>",
                      "dedupSavingsSize": "<number>",
                      "dedupWrittenSize": "<number>",
                      "devType": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "efficiencyUpdateTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "expirationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "fullyProvisioned": "<boolean>",
                      "generation": "<integer>",
                      "headsPerCylinder": "<integer>",
                      "healthState": "<long>",
                      "hidden": "<boolean>",
                      "hostWrittenMiB": "<number>",
                      "hostWrittenToVirtualPercent": "<number>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "name": "<string>",
                      "parentID": "<long>",
                      "physParentID": "<long>",
                      "physicalCopy": "<boolean>",
                      "policy": {
                        "fileService": "<boolean>",
                        "hostDif3par": "<boolean>",
                        "hostDifStd": "<boolean>",
                        "noCache": "<boolean>",
                        "oneHost": "<boolean>",
                        "staleSnapshot": "<boolean>",
                        "system": "<boolean>",
                        "zeroDetect": "<boolean>",
                        "zeroFill": "<boolean>"
                      },
                      "provType": "<string>",
                      "raid": "<string>",
                      "rcopyStatus": "<string>",
                      "readOnly": "<boolean>",
                      "resourceUri": "<string>",
                      "retentionTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "roChildID": "<long>",
                      "rwChildID": "<long>",
                      "sectorsPerTrack": "<integer>",
                      "sharedParentId": "<long>",
                      "sizeMiB": "<number>",
                      "snapShotTier": "<string>",
                      "snapshotAllocLimit": "<long>",
                      "snapshotAllocWarning": "<long>",
                      "snapshotAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "snapshotCpgID": "<long>",
                      "snapshotCpgName": "<string>",
                      "snapshotSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "snapshotTdvvSize": {
                        "ddcSizeMiB": "<number>",
                        "ddsSizeMiB": "<number>",
                        "virtualSizeMiB": "<number>",
                        "writtenSizeMiB": "<number>"
                      },
                      "snapshotUsedToVirtualPercent": "<number>",
                      "spaceCalculationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "started": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "storageTier": "<string>",
                      "systemId": "<string>",
                      "thinProvisioned": "<boolean>",
                      "thinSavings": "<string>",
                      "totalRawReservedMiB": "<number>",
                      "totalReservedMiB": "<number>",
                      "totalSpaceMiB": "<number>",
                      "type": "<string>",
                      "unrefSpaceFreedTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "usedCapacity": "<number>",
                      "usedSizeMiB": "<number>",
                      "userAllocLimit": "<long>",
                      "userAllocWarning": "<long>",
                      "userAllocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "deviceSpeed": {
                          "text": "<string>",
                          "value": "<integer>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<long>"
                      },
                      "userCpgID": "<long>",
                      "userCpgName": "<string>",
                      "userReservedToVirtualPercent": "<number>",
                      "userSpace": {
                        "freeMiB": "<number>",
                        "grownMiB": "<number>",
                        "rawReservedMiB": "<number>",
                        "reclaimedMiB": "<number>",
                        "reservedMiB": "<number>",
                        "totalMiB": "<number>",
                        "usedMiB": "<number>"
                      },
                      "userUsedToVirtualPercent": "<number>",
                      "vlunSectorSize": "<integer>",
                      "volumeId": "<long>",
                      "volumeType": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/storage-pools/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > storage-pools > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K storage-pool identified by {id}",
        "description": "Get details of Primera / Alletra 9K storage-pool identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "alert": {
                    "fail": "<string>",
                    "limit": "<string>",
                    "warn": "<string>",
                    "warnPercent": "<number>"
                  },
                  "allocationSettings": {
                    "HA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "RAIDType": "<string>",
                    "chunkletPosPref": "<string>",
                    "deviceSpeed": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "deviceType": "<string>",
                    "diskFilter": "<string>",
                    "requestedHA": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "setSize": "<string>",
                    "stepSize": "<number>"
                  },
                  "aoConfigID": "<number>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "baseSizeMiB": "<integer>",
                  "baseSizePrivateMiB": "<number>",
                  "baseSizeRawMiB": "<number>",
                  "compactRatio": "<number>",
                  "compressRatio": "<number>",
                  "customerId": "<string>",
                  "dataReduceRatio": "<number>",
                  "dedupCapable": "<boolean>",
                  "dedupRatio": "<number>",
                  "dedupVersion": {
                    "default": "<string>",
                    "key": "<string>"
                  },
                  "displayname": "<string>",
                  "domain": "<string>",
                  "freeForAllocationMiB": "<number>",
                  "freeSizeMiB": "<number>",
                  "freeSizeRawMiB": "<number>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "name": "<string>",
                  "numberOfSnapRC": "<number>",
                  "numberOfTDVV": "<number>",
                  "numberOfTPVV": "<number>",
                  "numberOfUserRC": "<number>",
                  "overProvRatio": "<number>",
                  "resourceUri": "<string>",
                  "saGrow": {
                    "args": "<string>",
                    "limitMiB": "<number>",
                    "sizeMiB": "<number>",
                    "warnMiB": "<number>"
                  },
                  "sdGrow": {
                    "args": "<string>",
                    "limitMiB": "<number>",
                    "sizeMiB": "<number>",
                    "warnMiB": "<number>"
                  },
                  "sharedSizeMiB": "<number>",
                  "snapSizePrivateMiB": "<number>",
                  "snapSizeRawMiB": "<number>",
                  "snapSpaceAdmin": {
                    "ldCount": "<number>",
                    "totalMiB": "<number>",
                    "totalRawMiB": "<number>",
                    "usedMiB": "<number>",
                    "usedRawMiB": "<number>"
                  },
                  "snapSpaceData": {
                    "ldCount": "<number>",
                    "totalMiB": "<number>",
                    "totalRawMiB": "<number>",
                    "usedMiB": "<number>",
                    "usedRawMiB": "<number>"
                  },
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_NEW"
                  },
                  "storagePoolId": "<number>",
                  "systemId": "<string>",
                  "totalReservedMiB": "<number>",
                  "totalSizeMiB": "<integer>",
                  "totalSizeRawMiB": "<number>",
                  "type": "<string>",
                  "userSpace": {
                    "ldCount": "<number>",
                    "totalMiB": "<number>",
                    "totalRawMiB": "<number>",
                    "usedMiB": "<number>",
                    "usedRawMiB": "<number>"
                  },
                  "warnPercent": "<number>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/storage-pools": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > storage-pools"
        ],
        "summary": "Get all storage-pools details by Primera / Alletra 9K",
        "description": "Get all storage-pools details by Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter pools by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort pools by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "alert": {
                        "fail": "<string>",
                        "limit": "<string>",
                        "warn": "<string>",
                        "warnPercent": "<number>"
                      },
                      "allocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "chunkletPosPref": "<string>",
                        "deviceSpeed": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<number>"
                      },
                      "aoConfigID": "<number>",
                      "baseSizeMiB": "<integer>",
                      "baseSizePrivateMiB": "<number>",
                      "baseSizeRawMiB": "<number>",
                      "compactRatio": "<number>",
                      "compressRatio": "<number>",
                      "customerId": "<string>",
                      "dataReduceRatio": "<number>",
                      "dedupCapable": "<boolean>",
                      "dedupRatio": "<number>",
                      "dedupVersion": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "freeForAllocationMiB": "<number>",
                      "freeSizeMiB": "<number>",
                      "freeSizeRawMiB": "<number>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "name": "<string>",
                      "numberOfSnapRC": "<number>",
                      "numberOfTDVV": "<number>",
                      "numberOfTPVV": "<number>",
                      "numberOfUserRC": "<number>",
                      "overProvRatio": "<number>",
                      "resourceUri": "<string>",
                      "saGrow": {
                        "args": "<string>",
                        "limitMiB": "<number>",
                        "sizeMiB": "<number>",
                        "warnMiB": "<number>"
                      },
                      "sdGrow": {
                        "args": "<string>",
                        "limitMiB": "<number>",
                        "sizeMiB": "<number>",
                        "warnMiB": "<number>"
                      },
                      "sharedSizeMiB": "<number>",
                      "snapSizePrivateMiB": "<number>",
                      "snapSizeRawMiB": "<number>",
                      "snapSpaceAdmin": {
                        "ldCount": "<number>",
                        "totalMiB": "<number>",
                        "totalRawMiB": "<number>",
                        "usedMiB": "<number>",
                        "usedRawMiB": "<number>"
                      },
                      "snapSpaceData": {
                        "ldCount": "<number>",
                        "totalMiB": "<number>",
                        "totalRawMiB": "<number>",
                        "usedMiB": "<number>",
                        "usedRawMiB": "<number>"
                      },
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_UNKNOWN"
                      },
                      "storagePoolId": "<number>",
                      "systemId": "<string>",
                      "totalReservedMiB": "<number>",
                      "totalSizeMiB": "<integer>",
                      "totalSizeRawMiB": "<number>",
                      "type": "<string>",
                      "userSpace": {
                        "ldCount": "<number>",
                        "totalMiB": "<number>",
                        "totalRawMiB": "<number>",
                        "usedMiB": "<number>",
                        "usedRawMiB": "<number>"
                      },
                      "warnPercent": "<number>"
                    },
                    {
                      "alert": {
                        "fail": "<string>",
                        "limit": "<string>",
                        "warn": "<string>",
                        "warnPercent": "<number>"
                      },
                      "allocationSettings": {
                        "HA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "RAIDType": "<string>",
                        "chunkletPosPref": "<string>",
                        "deviceSpeed": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "deviceType": "<string>",
                        "diskFilter": "<string>",
                        "requestedHA": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "setSize": "<string>",
                        "stepSize": "<number>"
                      },
                      "aoConfigID": "<number>",
                      "baseSizeMiB": "<integer>",
                      "baseSizePrivateMiB": "<number>",
                      "baseSizeRawMiB": "<number>",
                      "compactRatio": "<number>",
                      "compressRatio": "<number>",
                      "customerId": "<string>",
                      "dataReduceRatio": "<number>",
                      "dedupCapable": "<boolean>",
                      "dedupRatio": "<number>",
                      "dedupVersion": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "freeForAllocationMiB": "<number>",
                      "freeSizeMiB": "<number>",
                      "freeSizeRawMiB": "<number>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "name": "<string>",
                      "numberOfSnapRC": "<number>",
                      "numberOfTDVV": "<number>",
                      "numberOfTPVV": "<number>",
                      "numberOfUserRC": "<number>",
                      "overProvRatio": "<number>",
                      "resourceUri": "<string>",
                      "saGrow": {
                        "args": "<string>",
                        "limitMiB": "<number>",
                        "sizeMiB": "<number>",
                        "warnMiB": "<number>"
                      },
                      "sdGrow": {
                        "args": "<string>",
                        "limitMiB": "<number>",
                        "sizeMiB": "<number>",
                        "warnMiB": "<number>"
                      },
                      "sharedSizeMiB": "<number>",
                      "snapSizePrivateMiB": "<number>",
                      "snapSizeRawMiB": "<number>",
                      "snapSpaceAdmin": {
                        "ldCount": "<number>",
                        "totalMiB": "<number>",
                        "totalRawMiB": "<number>",
                        "usedMiB": "<number>",
                        "usedRawMiB": "<number>"
                      },
                      "snapSpaceData": {
                        "ldCount": "<number>",
                        "totalMiB": "<number>",
                        "totalRawMiB": "<number>",
                        "usedMiB": "<number>",
                        "usedRawMiB": "<number>"
                      },
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": null
                      },
                      "storagePoolId": "<number>",
                      "systemId": "<string>",
                      "totalReservedMiB": "<number>",
                      "totalSizeMiB": "<integer>",
                      "totalSizeRawMiB": "<number>",
                      "type": "<string>",
                      "userSpace": {
                        "ldCount": "<number>",
                        "totalMiB": "<number>",
                        "totalRawMiB": "<number>",
                        "usedMiB": "<number>",
                        "usedRawMiB": "<number>"
                      },
                      "warnPercent": "<number>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/snapshots/{snapshotId}/un-export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > snapshots > {snapshotId} > un-export"
        ],
        "summary": "Unexport vlun for snapshot identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Unexport vlun for snapshot identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroupIds": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/snapshots/{snapshotId}/export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > snapshots > {snapshotId} > export"
        ],
        "summary": "Export vlun for snapshot identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Export vlun for snapshot identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "autoLun": "<boolean>",
                  "hostGroupIds": [
                    "<string>",
                    "<string>"
                  ],
                  "maxAutoLun": "<long>",
                  "noVcn": "<boolean>",
                  "override": "<boolean>",
                  "position": "<string>",
                  "proximity": "SECONDARY"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/snapshots/{snapshotId}/clone": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > snapshots > {snapshotId} > clone"
        ],
        "summary": "Create a clone of a snapshot identified by {snapshotId} for Primera / Alletra 9K systems.",
        "description": "Create a clone of a snapshot identified by {snapshotId} for Primera / Alletra 9K systems.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "destinationVolume": "<string>",
                  "autoLun": "<boolean>",
                  "destinationCpg": "<string>",
                  "hostGroupId": "<string>",
                  "lun": "<long>",
                  "priority": "PRIORITYTYPE_HIGH"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/recommendations": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > recommendations"
        ],
        "summary": "Get recommendations for a storage system Primera / Alletra 9K",
        "description": "Get recommendations for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "checkTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "displayname": "<string>",
                  "domain": "<string>",
                  "id": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "systemId": "<string>",
                  "updateTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/qos-policy": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > qos-policy"
        ],
        "summary": "Get QoS policy data for a storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Get QoS policy data for a storage system Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "targetName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "targetName will define the QoS target name in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "targetType",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "targetType will define the QoS target type in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "qospolicyDetails": {
                    "qosCappedObjsData": {
                      "items": [
                        {
                          "customerId": "<string>",
                          "generation": "<integer>",
                          "targetName": "<string>",
                          "targetType": "<string>",
                          "timestampms": [
                            "<long>",
                            "<long>"
                          ],
                          "type": "<string>"
                        },
                        {
                          "customerId": "<string>",
                          "generation": "<integer>",
                          "targetName": "<string>",
                          "targetType": "<string>",
                          "timestampms": [
                            "<long>",
                            "<long>"
                          ],
                          "type": "<string>"
                        }
                      ],
                      "pageLimit": "<integer>",
                      "pageOffset": "<integer>",
                      "total": "<integer>"
                    },
                    "qosUnCappedObjsData": {
                      "items": [
                        {
                          "customerId": "<string>",
                          "generation": "<integer>",
                          "targetName": "<string>",
                          "targetType": "<string>",
                          "timestampms": [
                            "<long>",
                            "<long>"
                          ],
                          "type": "<string>"
                        },
                        {
                          "customerId": "<string>",
                          "generation": "<integer>",
                          "targetName": "<string>",
                          "targetType": "<string>",
                          "timestampms": [
                            "<long>",
                            "<long>"
                          ],
                          "type": "<string>"
                        }
                      ],
                      "pageLimit": "<integer>",
                      "pageOffset": "<integer>",
                      "total": "<integer>"
                    },
                    "recvdTotal": "<integer>",
                    "total": "<integer>"
                  },
                  "requestURI": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/ping-rcip": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > ping-rcip"
        ],
        "summary": "Ping rcip ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Ping rcip ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "PacketSize": "<integer>",
                  "WaitTime": "<integer>",
                  "ipAddress": "<ipv4>",
                  "ipAddressv6": "<ipv6>",
                  "pingCount": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/ping-iscsi": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > ping-iscsi"
        ],
        "summary": "Ping iscsi ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Ping iscsi ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ipAddress": "<ipv4>",
                  "ipAddressv6": "<ipv6>",
                  "pingCount": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/initialize": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > initialize"
        ],
        "summary": "Initialize the details of the ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Initialize the details of the ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/fc": {
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > fc"
        ],
        "summary": "Edit ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Edit ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "configMode": "<string>",
                  "connectionType": "<string>",
                  "interuptCoalesce": "<boolean>",
                  "label": "<string>",
                  "speedConfigured": "<string>",
                  "uniqueWWN": "<boolean>",
                  "vcn": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/edit-rcip": {
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > edit-rcip"
        ],
        "summary": "Edit rcip ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Edit rcip ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "gatewayAddress": "<ipv4>",
                  "gatewayAddressV6": "<string>",
                  "ipAddress": "<ipv4>",
                  "ipAddressV6": "<string>",
                  "label": "<string>",
                  "mtu": "<string>",
                  "netMask": "<ipv4>",
                  "netMaskV6": "<string>",
                  "speedConfigured": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/edit-iscsi": {
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > edit-iscsi"
        ],
        "summary": "Edit iscsi ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Edit iscsi ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "gatewayAddress": "<ipv4>",
                  "ipAddress": "<ipv4>",
                  "label": "<string>",
                  "mtu": "<string>",
                  "netMask": "<ipv4>",
                  "sendTargetGroupTag": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}/clear": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id} > clear"
        ],
        "summary": "Clear the details of the ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Clear the details of the ports identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ipType": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Port identified by {id}",
        "description": "Get details of Primera / Alletra 9K Port identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "cardType": {
                    "default": "<string>",
                    "key": "<string>"
                  },
                  "class": "<integer>",
                  "class2": "<string>",
                  "config": "<string>",
                  "configMode": "<string>",
                  "connectionType": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "devices": [
                    {
                      "name": "<string>",
                      "position": "<integer>"
                    },
                    {
                      "name": "<string>",
                      "position": "<integer>"
                    }
                  ],
                  "displayname": "<string>",
                  "domain": "<string>",
                  "failoverStatus": "<string>",
                  "fcData": {
                    "nodeWWN": "<string>",
                    "portWWN": "<string>"
                  },
                  "fwVersion": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "initiatorPorts": {
                    "aliases": "<string>",
                    "currentSpeed": "<string>",
                    "hbaDriverVersion": "<string>",
                    "hbaFirmwareVersion": "<string>",
                    "hbaManufacturer": "<string>",
                    "hbaModel": "<string>",
                    "hbaOsNameVersion": "<string>",
                    "hostName": "<string>",
                    "number": "<integer>",
                    "osDeviceName": "<string>",
                    "ssanQosSupport": "<string>",
                    "ssanSecuritySupport": "<string>",
                    "supportedSpeeds": "<string>",
                    "wwn": "<string>"
                  },
                  "interuptCoalesce": "<string>",
                  "ipData": {
                    "autoneg": "<boolean>",
                    "duplex": "<string>",
                    "gatewayAddress": "<string>",
                    "gatewayAddressV6": "<string>",
                    "ipAddress": "<string>",
                    "ipAddressV6": "<string>",
                    "macAddress": "<string>",
                    "mtu": "<string>",
                    "subnetMask": "<string>",
                    "subnetMaskV6": "<string>"
                  },
                  "iscsiData": {
                    "gatewayAddress": "<string>",
                    "iSNSPrimaryAddress": "<string>",
                    "iSNSTcpPort": "<integer>",
                    "ipAddress": "<string>",
                    "iscsiName": "<string>",
                    "macAddress": "<string>",
                    "mtu": "<string>",
                    "sendTargetGroupTag": "<integer>",
                    "subnetMask": "<string>",
                    "supportsVlan": "<boolean>",
                    "targetPortalGroupTag": "<integer>"
                  },
                  "label": "<string>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "mode": "<string>",
                  "modeChange": "<string>",
                  "name": "<string>",
                  "nodeCardId": "<string>",
                  "nodeId": "<string>",
                  "partner": {
                    "nodeWwnOrName": "<string>",
                    "portWwnOrIp": "<string>",
                    "position": {
                      "node": "<long>",
                      "port": "<long>",
                      "slot": "<long>"
                    }
                  },
                  "portSfp": {
                    "fwVersion": "<string>",
                    "manufacturing": {
                      "assemblyRev": "<string>",
                      "checkSum": "<string>",
                      "hpeModelName": "<string>",
                      "manufacturer": "<string>",
                      "model": "<string>",
                      "saleablePartNumber": "<string>",
                      "saleableSerialNumber": "<string>",
                      "serialNumber": "<string>",
                      "sparePartNumber": "<string>"
                    },
                    "qualified": "<boolean>",
                    "rxLossPin": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "rxPowerLow": "<boolean>",
                    "speed": "<long>",
                    "state": {
                      "detailed": [
                        "<string>",
                        "<string>"
                      ],
                      "overall": "STATE_FAILED"
                    },
                    "supportDDM": "<boolean>",
                    "txDisablePin": {
                      "default": "<string>",
                      "key": "<string>"
                    },
                    "txFaultPin": {
                      "default": "<string>",
                      "key": "<string>"
                    }
                  },
                  "portType": "<string>",
                  "position": {
                    "node": "<long>",
                    "port": "<long>",
                    "slot": "<long>"
                  },
                  "protocol": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "revision": "<string>",
                  "smartSAN": "<string>",
                  "speedActual": "<string>",
                  "speedConfigured": "<string>",
                  "speedMax": "<string>",
                  "speedMin": "<string>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_NORMAL"
                  },
                  "stateDescription": [
                    "<string>",
                    "<string>"
                  ],
                  "systemId": "<string>",
                  "tgtModeWriteOpt": "<string>",
                  "type": "<string>",
                  "uniqueWWN": "<string>",
                  "vlans": [
                    {
                      "gatewayAddress": "<string>",
                      "iSNSPrimaryAddress": "<string>",
                      "iSNSTcpPort": "<string>",
                      "ipAddress": "<string>",
                      "mtu": "<string>",
                      "sendTargetGroupTag": "<string>",
                      "subnetMask": "<string>",
                      "targetPortalGroupTag": "<string>",
                      "vlanId": "<string>"
                    },
                    {
                      "gatewayAddress": "<string>",
                      "iSNSPrimaryAddress": "<string>",
                      "iSNSTcpPort": "<string>",
                      "ipAddress": "<string>",
                      "mtu": "<string>",
                      "sendTargetGroupTag": "<string>",
                      "subnetMask": "<string>",
                      "targetPortalGroupTag": "<string>",
                      "vlanId": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports > {id}"
        ],
        "summary": "Port enable disable identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Port enable disable identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "portEnable": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/ports": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > ports"
        ],
        "summary": "Get details of Primera / Alletra 9K Ports",
        "description": "Get details of Primera / Alletra 9K Ports",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter ports by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort ports by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "cardType": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "class": "<integer>",
                      "class2": "<string>",
                      "config": "<string>",
                      "configMode": "<string>",
                      "connectionType": "<string>",
                      "customerId": "<string>",
                      "devices": [
                        {
                          "name": "<string>",
                          "position": "<integer>"
                        },
                        {
                          "name": "<string>",
                          "position": "<integer>"
                        }
                      ],
                      "displayname": "<string>",
                      "domain": "<string>",
                      "failoverStatus": "<string>",
                      "fcData": {
                        "nodeWWN": "<string>",
                        "portWWN": "<string>"
                      },
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "initiatorPorts": {
                        "aliases": "<string>",
                        "currentSpeed": "<string>",
                        "hbaDriverVersion": "<string>",
                        "hbaFirmwareVersion": "<string>",
                        "hbaManufacturer": "<string>",
                        "hbaModel": "<string>",
                        "hbaOsNameVersion": "<string>",
                        "hostName": "<string>",
                        "number": "<integer>",
                        "osDeviceName": "<string>",
                        "ssanQosSupport": "<string>",
                        "ssanSecuritySupport": "<string>",
                        "supportedSpeeds": "<string>",
                        "wwn": "<string>"
                      },
                      "interuptCoalesce": "<string>",
                      "ipData": {
                        "autoneg": "<boolean>",
                        "duplex": "<string>",
                        "gatewayAddress": "<string>",
                        "gatewayAddressV6": "<string>",
                        "ipAddress": "<string>",
                        "ipAddressV6": "<string>",
                        "macAddress": "<string>",
                        "mtu": "<string>",
                        "subnetMask": "<string>",
                        "subnetMaskV6": "<string>"
                      },
                      "iscsiData": {
                        "gatewayAddress": "<string>",
                        "iSNSPrimaryAddress": "<string>",
                        "iSNSTcpPort": "<integer>",
                        "ipAddress": "<string>",
                        "iscsiName": "<string>",
                        "macAddress": "<string>",
                        "mtu": "<string>",
                        "sendTargetGroupTag": "<integer>",
                        "subnetMask": "<string>",
                        "supportsVlan": "<boolean>",
                        "targetPortalGroupTag": "<integer>"
                      },
                      "label": "<string>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "mode": "<string>",
                      "modeChange": "<string>",
                      "name": "<string>",
                      "nodeCardId": "<string>",
                      "nodeId": "<string>",
                      "partner": {
                        "nodeWwnOrName": "<string>",
                        "portWwnOrIp": "<string>",
                        "position": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        }
                      },
                      "portSfp": {
                        "fwVersion": "<string>",
                        "manufacturing": {
                          "assemblyRev": "<string>",
                          "checkSum": "<string>",
                          "hpeModelName": "<string>",
                          "manufacturer": "<string>",
                          "model": "<string>",
                          "saleablePartNumber": "<string>",
                          "saleableSerialNumber": "<string>",
                          "serialNumber": "<string>",
                          "sparePartNumber": "<string>"
                        },
                        "qualified": "<boolean>",
                        "rxLossPin": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "rxPowerLow": "<boolean>",
                        "speed": "<long>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_DEGRADED"
                        },
                        "supportDDM": "<boolean>",
                        "txDisablePin": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "txFaultPin": {
                          "default": "<string>",
                          "key": "<string>"
                        }
                      },
                      "portType": "<string>",
                      "position": {
                        "node": "<long>",
                        "port": "<long>",
                        "slot": "<long>"
                      },
                      "protocol": "<string>",
                      "resourceUri": "<string>",
                      "revision": "<string>",
                      "smartSAN": "<string>",
                      "speedActual": "<string>",
                      "speedConfigured": "<string>",
                      "speedMax": "<string>",
                      "speedMin": "<string>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "stateDescription": [
                        "<string>",
                        "<string>"
                      ],
                      "systemId": "<string>",
                      "tgtModeWriteOpt": "<string>",
                      "type": "<string>",
                      "uniqueWWN": "<string>",
                      "vlans": [
                        {
                          "gatewayAddress": "<string>",
                          "iSNSPrimaryAddress": "<string>",
                          "iSNSTcpPort": "<string>",
                          "ipAddress": "<string>",
                          "mtu": "<string>",
                          "sendTargetGroupTag": "<string>",
                          "subnetMask": "<string>",
                          "targetPortalGroupTag": "<string>",
                          "vlanId": "<string>"
                        },
                        {
                          "gatewayAddress": "<string>",
                          "iSNSPrimaryAddress": "<string>",
                          "iSNSTcpPort": "<string>",
                          "ipAddress": "<string>",
                          "mtu": "<string>",
                          "sendTargetGroupTag": "<string>",
                          "subnetMask": "<string>",
                          "targetPortalGroupTag": "<string>",
                          "vlanId": "<string>"
                        }
                      ]
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "cardType": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "class": "<integer>",
                      "class2": "<string>",
                      "config": "<string>",
                      "configMode": "<string>",
                      "connectionType": "<string>",
                      "customerId": "<string>",
                      "devices": [
                        {
                          "name": "<string>",
                          "position": "<integer>"
                        },
                        {
                          "name": "<string>",
                          "position": "<integer>"
                        }
                      ],
                      "displayname": "<string>",
                      "domain": "<string>",
                      "failoverStatus": "<string>",
                      "fcData": {
                        "nodeWWN": "<string>",
                        "portWWN": "<string>"
                      },
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "initiatorPorts": {
                        "aliases": "<string>",
                        "currentSpeed": "<string>",
                        "hbaDriverVersion": "<string>",
                        "hbaFirmwareVersion": "<string>",
                        "hbaManufacturer": "<string>",
                        "hbaModel": "<string>",
                        "hbaOsNameVersion": "<string>",
                        "hostName": "<string>",
                        "number": "<integer>",
                        "osDeviceName": "<string>",
                        "ssanQosSupport": "<string>",
                        "ssanSecuritySupport": "<string>",
                        "supportedSpeeds": "<string>",
                        "wwn": "<string>"
                      },
                      "interuptCoalesce": "<string>",
                      "ipData": {
                        "autoneg": "<boolean>",
                        "duplex": "<string>",
                        "gatewayAddress": "<string>",
                        "gatewayAddressV6": "<string>",
                        "ipAddress": "<string>",
                        "ipAddressV6": "<string>",
                        "macAddress": "<string>",
                        "mtu": "<string>",
                        "subnetMask": "<string>",
                        "subnetMaskV6": "<string>"
                      },
                      "iscsiData": {
                        "gatewayAddress": "<string>",
                        "iSNSPrimaryAddress": "<string>",
                        "iSNSTcpPort": "<integer>",
                        "ipAddress": "<string>",
                        "iscsiName": "<string>",
                        "macAddress": "<string>",
                        "mtu": "<string>",
                        "sendTargetGroupTag": "<integer>",
                        "subnetMask": "<string>",
                        "supportsVlan": "<boolean>",
                        "targetPortalGroupTag": "<integer>"
                      },
                      "label": "<string>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "mode": "<string>",
                      "modeChange": "<string>",
                      "name": "<string>",
                      "nodeCardId": "<string>",
                      "nodeId": "<string>",
                      "partner": {
                        "nodeWwnOrName": "<string>",
                        "portWwnOrIp": "<string>",
                        "position": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        }
                      },
                      "portSfp": {
                        "fwVersion": "<string>",
                        "manufacturing": {
                          "assemblyRev": "<string>",
                          "checkSum": "<string>",
                          "hpeModelName": "<string>",
                          "manufacturer": "<string>",
                          "model": "<string>",
                          "saleablePartNumber": "<string>",
                          "saleableSerialNumber": "<string>",
                          "serialNumber": "<string>",
                          "sparePartNumber": "<string>"
                        },
                        "qualified": "<boolean>",
                        "rxLossPin": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "rxPowerLow": "<boolean>",
                        "speed": "<long>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_NEW"
                        },
                        "supportDDM": "<boolean>",
                        "txDisablePin": {
                          "default": "<string>",
                          "key": "<string>"
                        },
                        "txFaultPin": {
                          "default": "<string>",
                          "key": "<string>"
                        }
                      },
                      "portType": "<string>",
                      "position": {
                        "node": "<long>",
                        "port": "<long>",
                        "slot": "<long>"
                      },
                      "protocol": "<string>",
                      "resourceUri": "<string>",
                      "revision": "<string>",
                      "smartSAN": "<string>",
                      "speedActual": "<string>",
                      "speedConfigured": "<string>",
                      "speedMax": "<string>",
                      "speedMin": "<string>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_DEGRADED"
                      },
                      "stateDescription": [
                        "<string>",
                        "<string>"
                      ],
                      "systemId": "<string>",
                      "tgtModeWriteOpt": "<string>",
                      "type": "<string>",
                      "uniqueWWN": "<string>",
                      "vlans": [
                        {
                          "gatewayAddress": "<string>",
                          "iSNSPrimaryAddress": "<string>",
                          "iSNSTcpPort": "<string>",
                          "ipAddress": "<string>",
                          "mtu": "<string>",
                          "sendTargetGroupTag": "<string>",
                          "subnetMask": "<string>",
                          "targetPortalGroupTag": "<string>",
                          "vlanId": "<string>"
                        },
                        {
                          "gatewayAddress": "<string>",
                          "iSNSPrimaryAddress": "<string>",
                          "iSNSTcpPort": "<string>",
                          "ipAddress": "<string>",
                          "mtu": "<string>",
                          "sendTargetGroupTag": "<string>",
                          "subnetMask": "<string>",
                          "targetPortalGroupTag": "<string>",
                          "vlanId": "<string>"
                        }
                      ]
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/performance-statistics": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > performance-statistics"
        ],
        "summary": "Get performance statistics for a storage system Primera / Alletra 9K",
        "description": "Get performance statistics for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "customerId": "<string>",
                  "iops": {
                    "avgOf1day": "<number>",
                    "avgOf1hour": "<number>",
                    "avgOf8hours": "<number>",
                    "avgOfLatest": "<number>"
                  },
                  "latency": {
                    "avgOf1day": "<number>",
                    "avgOf1hour": "<number>",
                    "avgOf8hours": "<number>",
                    "avgOfLatest": "<number>"
                  },
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "throughput": {
                    "avgOf1day": "<number>",
                    "avgOf1hour": "<number>",
                    "avgOf8hours": "<number>",
                    "avgOfLatest": "<number>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/performance-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > performance-history"
        ],
        "summary": "Get performance trend data for a storage system Primera / Alletra 9K",
        "description": "Get performance trend data for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "customerId": "<string>",
                  "endTime": "<integer>",
                  "historyData": {
                    "iopsMetricsData": {
                      "items": [
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        },
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        }
                      ],
                      "total": "<integer>"
                    },
                    "latencyMetricsDataMs": {
                      "items": [
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        },
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        }
                      ],
                      "total": "<integer>"
                    },
                    "throughputMetricsDataKbps": {
                      "items": [
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        },
                        {
                          "readValue": "<number>",
                          "timestampms": "<long>",
                          "totalValue": "<number>",
                          "writeValue": "<number>"
                        }
                      ],
                      "total": "<integer>"
                    }
                  },
                  "requestUri": "<string>",
                  "startTime": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/service-ports": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > service-ports"
        ],
        "summary": "Get service ports for nodes of all storage systems of Primera / Alletra 9K identified by {systemId} and {nodeId }",
        "description": "Get service ports for nodes of all storage systems of Primera / Alletra 9K identified by {systemId} and {nodeId }",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter systems by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "customerId": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "ipv4address": "<string>",
                      "ipv4netmask": "<string>",
                      "ipv6address": "<string>",
                      "ipv6vnetmask": "<string>",
                      "mode": "<string>",
                      "name": "<string>",
                      "node": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "customerId": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "ipv4address": "<string>",
                      "ipv4netmask": "<string>",
                      "ipv6address": "<string>",
                      "ipv6vnetmask": "<string>",
                      "mode": "<string>",
                      "name": "<string>",
                      "node": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/nodes-batteries/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > nodes-batteries > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Battery identified by {nodeId} and {id}",
        "description": "Get details of Primera / Alletra 9K Node Battery identified by {nodeId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "chargeLevel": "<long>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "dischargeLED": "LED_GREEN_BLNK",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "expirationDate": {
                    "ms": "<long>",
                    "tz": "<string>"
                  },
                  "faultLED": null,
                  "fullyCharged": "<boolean>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "life": "<long>",
                  "locateEnabled": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "maxLife": "<long>",
                  "name": "<string>",
                  "nodeBatteryId": "<long>",
                  "powerSupplyId": "<long>",
                  "primaryNodeId": "<long>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "safeToRemove": "<boolean>",
                  "secondaryNodeId": "<long>",
                  "serviceLED": "LED_GREEN_BLNK",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_DEGRADED"
                  },
                  "statusLED": "LED_BLUE_BLNK",
                  "systemId": "<string>",
                  "testInProgress": "<boolean>",
                  "timeToCharge": "<long>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/nodes-batteries": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > nodes-batteries"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Batteries identified by {nodeId}",
        "description": "Get details of Primera / Alletra 9K Node Batteries identified by {nodeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "chargeLevel": "<long>",
                      "customerId": "<string>",
                      "dischargeLED": "LED_GREEN_BLNK",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "expirationDate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "faultLED": "LED_GREEN_BLNK",
                      "fullyCharged": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "life": "<long>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "maxLife": "<long>",
                      "name": "<string>",
                      "nodeBatteryId": "<long>",
                      "powerSupplyId": "<long>",
                      "primaryNodeId": "<long>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "secondaryNodeId": "<long>",
                      "serviceLED": "LED_AMBER",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": null
                      },
                      "statusLED": "LED_BLUE_BLNK",
                      "systemId": "<string>",
                      "testInProgress": "<boolean>",
                      "timeToCharge": "<long>",
                      "type": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "chargeLevel": "<long>",
                      "customerId": "<string>",
                      "dischargeLED": "LED_BLUE",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "expirationDate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "faultLED": null,
                      "fullyCharged": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "life": "<long>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "maxLife": "<long>",
                      "name": "<string>",
                      "nodeBatteryId": "<long>",
                      "powerSupplyId": "<long>",
                      "primaryNodeId": "<long>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "secondaryNodeId": "<long>",
                      "serviceLED": "LED_AMBER",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NEW"
                      },
                      "statusLED": "LED_GREEN",
                      "systemId": "<string>",
                      "testInProgress": "<boolean>",
                      "timeToCharge": "<long>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-powers/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-powers > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Power Supply identified by {nodeId} and {id}",
        "description": "Get details of Primera / Alletra 9K Node Power Supply identified by {nodeId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "fanspeed": "<string>",
                  "fanstate": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_NOT_APPLICABLE"
                  },
                  "generation": "<integer>",
                  "id": "<string>",
                  "locateEnabled": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "nodePowerId": "<integer>",
                  "primaryNodeId": "<long>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "safeToRemove": "<boolean>",
                  "secondaryNodeId": "<long>",
                  "serviceLED": "LED_BLUE",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_DEGRADED"
                  },
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-powers > {id}"
        ],
        "summary": "Locate PCBM of Primera / Alletra 9K identified by {id}",
        "description": "Locate PCBM of Primera / Alletra 9K identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "locate": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-powers": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-powers"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Power Supplies identified by {nodeId}",
        "description": "Get details of Primera / Alletra 9K Node Power Supplies identified by {nodeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "fanspeed": "<string>",
                      "fanstate": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodePowerId": "<integer>",
                      "primaryNodeId": "<long>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "secondaryNodeId": "<long>",
                      "serviceLED": "LED_BLUE",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_UNKNOWN"
                      },
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "fanspeed": "<string>",
                      "fanstate": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_UNKNOWN"
                      },
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodePowerId": "<integer>",
                      "primaryNodeId": "<long>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "secondaryNodeId": "<long>",
                      "serviceLED": null,
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NEW"
                      },
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-mems/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-mems > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Memory identified by {nodeId} and {id}",
        "description": "Get details of Primera / Alletra 9K Node Memory identified by {nodeId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "cacheType": "<string>",
                  "casLatency": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "jedecId": "<string>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "nodeDeviceId": "<long>",
                  "nodeId": "<string>",
                  "nodeMemoryType": "<string>",
                  "partNumber": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "revision": "<string>",
                  "riser": "<string>",
                  "size": "<string>",
                  "slot": "<integer>",
                  "slotId": "<string>",
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-mems": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-mems"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Memories identified by {nodeId}",
        "description": "Get details of Primera / Alletra 9K Node Memories identified by {nodeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "cacheType": "<string>",
                      "casLatency": "<string>",
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "jedecId": "<string>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodeDeviceId": "<long>",
                      "nodeId": "<string>",
                      "nodeMemoryType": "<string>",
                      "partNumber": "<string>",
                      "resourceUri": "<string>",
                      "revision": "<string>",
                      "riser": "<string>",
                      "size": "<string>",
                      "slot": "<integer>",
                      "slotId": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "cacheType": "<string>",
                      "casLatency": "<string>",
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "jedecId": "<string>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodeDeviceId": "<long>",
                      "nodeId": "<string>",
                      "nodeMemoryType": "<string>",
                      "partNumber": "<string>",
                      "resourceUri": "<string>",
                      "revision": "<string>",
                      "riser": "<string>",
                      "size": "<string>",
                      "slot": "<integer>",
                      "slotId": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-mcus/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-mcus > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Mcu identified by {nodeId} and {id}",
        "description": "Get details of Primera / Alletra 9K Node Mcu identified by {nodeId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "domain": "<string>",
                  "fwVersion": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "model": "<string>",
                  "name": "<string>",
                  "nodeDeviceId": "<long>",
                  "nodeId": "<string>",
                  "requestUri": "<string>",
                  "resetReason": "<string>",
                  "resourceUri": "<string>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": null
                  },
                  "systemId": "<string>",
                  "type": "<string>",
                  "uptime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-mcus": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-mcus"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Mcus identified by {nodeId}",
        "description": "Get details of Primera / Alletra 9K Node Mcus identified by {nodeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "domain": "<string>",
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "model": "<string>",
                      "name": "<string>",
                      "nodeDeviceId": "<long>",
                      "nodeId": "<string>",
                      "resetReason": "<string>",
                      "resourceUri": "<string>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_DEGRADED"
                      },
                      "systemId": "<string>",
                      "type": "<string>",
                      "uptime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      }
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "domain": "<string>",
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "model": "<string>",
                      "name": "<string>",
                      "nodeDeviceId": "<long>",
                      "nodeId": "<string>",
                      "resetReason": "<string>",
                      "resourceUri": "<string>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NOT_APPLICABLE"
                      },
                      "systemId": "<string>",
                      "type": "<string>",
                      "uptime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      }
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-drives/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-drives > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Drive identified by {nodeId} and {id}",
        "description": "Get details of Primera / Alletra 9K Node Drive identified by {nodeId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "fwVersion": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "maxLBA": "<string>",
                  "name": "<string>",
                  "nodeDeviceId": "<long>",
                  "nodeDriveId": "<long>",
                  "nodeDriveType": "<string>",
                  "nodeId": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "sedState": "<string>",
                  "sizeMiB": "<integer>",
                  "systemId": "<string>",
                  "type": "<string>",
                  "wwn": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-drives": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-drives"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Drives identified by {nodeId}",
        "description": "Get details of Primera / Alletra 9K Node Drives identified by {nodeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "maxLBA": "<string>",
                      "name": "<string>",
                      "nodeDeviceId": "<long>",
                      "nodeDriveId": "<long>",
                      "nodeDriveType": "<string>",
                      "nodeId": "<string>",
                      "resourceUri": "<string>",
                      "sedState": "<string>",
                      "sizeMiB": "<integer>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "maxLBA": "<string>",
                      "name": "<string>",
                      "nodeDeviceId": "<long>",
                      "nodeDriveId": "<long>",
                      "nodeDriveType": "<string>",
                      "nodeId": "<string>",
                      "resourceUri": "<string>",
                      "sedState": "<string>",
                      "sizeMiB": "<integer>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-cpus/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-cpus > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Cpu identified by {nodeId} and {id}",
        "description": "Get details of Primera / Alletra 9K Node Cpu identified by {nodeId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "busSpeed": "<float>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "displayName": "<string>",
                  "domain": "<string>",
                  "family": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "nodeCpuId": "<long>",
                  "nodeDeviceId": "<string>",
                  "nodeId": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "speed": "<long>",
                  "stepping": "<string>",
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-cpus": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-cpus"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Cpus identified by {nodeId}",
        "description": "Get details of Primera / Alletra 9K Node Cpus identified by {nodeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "busSpeed": "<float>",
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "family": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodeCpuId": "<long>",
                      "nodeDeviceId": "<string>",
                      "nodeId": "<string>",
                      "resourceUri": "<string>",
                      "speed": "<long>",
                      "stepping": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "busSpeed": "<float>",
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "family": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodeCpuId": "<long>",
                      "nodeDeviceId": "<string>",
                      "nodeId": "<string>",
                      "resourceUri": "<string>",
                      "speed": "<long>",
                      "stepping": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-cards/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-cards > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Card identified by {nodeId} and {id}",
        "description": "Get details of Primera / Alletra 9K Node Card identified by {nodeId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "fwVersion": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "locateEnabled": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "nodeCardType": "<string>",
                  "nodeDeviceId": "<long>",
                  "nodeId": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "revision": "<string>",
                  "safeToRemove": "<boolean>",
                  "serviceLED": "LED_GREEN_BLNK",
                  "slot": "<integer>",
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/node-cards": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > node-cards"
        ],
        "summary": "Get details of Primera / Alletra 9K Node Cards identified by {nodeId}",
        "description": "Get details of Primera / Alletra 9K Node Cards identified by {nodeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodeCardType": "<string>",
                      "nodeDeviceId": "<long>",
                      "nodeId": "<string>",
                      "resourceUri": "<string>",
                      "revision": "<string>",
                      "safeToRemove": "<boolean>",
                      "serviceLED": "LED_UNKNOWN",
                      "slot": "<integer>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodeCardType": "<string>",
                      "nodeDeviceId": "<long>",
                      "nodeId": "<string>",
                      "resourceUri": "<string>",
                      "revision": "<string>",
                      "safeToRemove": "<boolean>",
                      "serviceLED": "LED_GREEN_BLNK",
                      "slot": "<integer>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{nodeId}/component-performance-statistics": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {nodeId} > component-performance-statistics"
        ],
        "summary": "Get component performance statistics details of Primera / Alletra 9K node idenfified by {nodeId}",
        "description": "Get component performance statistics details of Primera / Alletra 9K node idenfified by {nodeId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cachePercentage": {
                    "avgOf1day": "<number>",
                    "avgOf1hour": "<number>",
                    "avgOf8hours": "<number>",
                    "avgOflatest": "<number>"
                  },
                  "cpuPercentage": {
                    "avgOf1day": "<number>",
                    "avgOf1hour": "<number>",
                    "avgOf8hours": "<number>",
                    "avgOflatest": "<number>"
                  },
                  "customerId": "<string>",
                  "requestUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Node identified by {id}",
        "description": "Get details of Primera / Alletra 9K Node identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "NodeId": "<long>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "biosVersion": "<string>",
                  "cacheAvailablePct": "<integer>",
                  "cacheEnabled": "<integer>",
                  "consoleUri": "<string>",
                  "controlMemoryMiB": "<integer>",
                  "customerId": "<string>",
                  "dataMemoryMiB": "<integer>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "inCluster": "<boolean>",
                  "kernelVersion": "<string>",
                  "locateEnabled": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "master": "<boolean>",
                  "name": "<string>",
                  "online": "<boolean>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "safeToRemove": "<boolean>",
                  "serviceLED": null,
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_NORMAL"
                  },
                  "stateDescription": "<string>",
                  "systemId": "<string>",
                  "systemLED": "LED_OFF",
                  "type": "<string>",
                  "uptime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > {id}"
        ],
        "summary": "Locate node of Primera / Alletra 9K identified by {id}",
        "description": "Locate node of Primera / Alletra 9K identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "locate": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes/service-ports": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes > service-ports"
        ],
        "summary": "Get service ports for nodes of all storage systems of Primera / Alletra 9K identified by {systemId}",
        "description": "Get service ports for nodes of all storage systems of Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter systems by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "customerId": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "ipv4address": "<string>",
                      "ipv4netmask": "<string>",
                      "ipv6address": "<string>",
                      "ipv6vnetmask": "<string>",
                      "mode": "<string>",
                      "name": "<string>",
                      "node": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "customerId": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "ipv4address": "<string>",
                      "ipv4netmask": "<string>",
                      "ipv6address": "<string>",
                      "ipv6vnetmask": "<string>",
                      "mode": "<string>",
                      "name": "<string>",
                      "node": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/nodes": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > nodes"
        ],
        "summary": "Get details of Primera / Alletra 9K Nodes",
        "description": "Get details of Primera / Alletra 9K Nodes",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort nodes resource by key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "NodeId": "<long>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "biosVersion": "<string>",
                      "cacheAvailablePct": "<integer>",
                      "cacheEnabled": "<integer>",
                      "controlMemoryMiB": "<integer>",
                      "customerId": "<string>",
                      "dataMemoryMiB": "<integer>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "inCluster": "<boolean>",
                      "kernelVersion": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "master": "<boolean>",
                      "name": "<string>",
                      "online": "<boolean>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "serviceLED": "LED_BLUE",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_FAILED"
                      },
                      "stateDescription": "<string>",
                      "systemId": "<string>",
                      "systemLED": "LED_BLUE_BLNK",
                      "type": "<string>",
                      "uptime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      }
                    },
                    {
                      "NodeId": "<long>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "biosVersion": "<string>",
                      "cacheAvailablePct": "<integer>",
                      "cacheEnabled": "<integer>",
                      "controlMemoryMiB": "<integer>",
                      "customerId": "<string>",
                      "dataMemoryMiB": "<integer>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "inCluster": "<boolean>",
                      "kernelVersion": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "master": "<boolean>",
                      "name": "<string>",
                      "online": "<boolean>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "serviceLED": "LED_GREEN_BLNK",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "stateDescription": "<string>",
                      "systemId": "<string>",
                      "systemLED": "LED_AMBER_BLNK",
                      "type": "<string>",
                      "uptime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      }
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-settings": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-settings"
        ],
        "summary": "Get Network-Settings details for a storage system Primera / Alletra 9K",
        "description": "Get Network-Settings details for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "portManagement": {
                    "associatedLinks": [
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      },
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "authenticationRequired": "<string>",
                    "consoleUri": "<string>",
                    "customerId": "<string>",
                    "defaultRouteIPv4": "<string>",
                    "defaultRouteIPv6": "<string>",
                    "displayname": "<string>",
                    "dnsServer": "<string>",
                    "domain": "<string>",
                    "generation": "<long>",
                    "id": "<string>",
                    "ipV4Data": {
                      "activeNode": "<integer>",
                      "autoSense": "<boolean>",
                      "fullDuplex": "<boolean>",
                      "ipAddress": "<string>",
                      "netMask": "<string>",
                      "speed": "<integer>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_FAILED"
                      },
                      "status": "<string>"
                    },
                    "ipV6Data": {
                      "activeNode": "<integer>",
                      "autoSense": "<boolean>",
                      "fullDuplex": "<boolean>",
                      "ipAddress": "<string>",
                      "netMask": "<string>",
                      "speed": "<integer>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_DEGRADED"
                      },
                      "status": "<string>"
                    },
                    "newDefaultRouteIPv4": "<string>",
                    "newDefaultRouteIPv6": "<string>",
                    "newIpV4Data": {
                      "activeNode": "<integer>",
                      "autoSense": "<boolean>",
                      "fullDuplex": "<boolean>",
                      "ipAddress": "<string>",
                      "netMask": "<string>",
                      "speed": "<integer>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_UNKNOWN"
                      },
                      "status": "<string>"
                    },
                    "newIpv6Data": {
                      "activeNode": "<integer>",
                      "autoSense": "<boolean>",
                      "fullDuplex": "<boolean>",
                      "ipAddress": "<string>",
                      "netMask": "<string>",
                      "speed": "<integer>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "status": "<string>"
                    },
                    "ntpServer": "<string>",
                    "proxyPort": "<integer>",
                    "proxyProtocol": "<string>",
                    "proxyServer": "<string>",
                    "proxyUser": "<string>",
                    "systemId": "<string>",
                    "type": "<string>"
                  },
                  "requestUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-settings"
        ],
        "summary": "Post Network-Settings details for a storage system Primera / Alletra 9K",
        "description": "Post Network-Settings details for a storage system Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "dnsAddresses": [
                    "<string>",
                    "<string>"
                  ],
                  "ipv4Address": "<string>",
                  "ipv4Gateway": "<string>",
                  "ipv4SubnetMask": "<string>",
                  "ipv6Address": "<string>",
                  "ipv6Gateway": "<string>",
                  "ipv6PrefixLen": "<string>",
                  "proxyParams": {
                    "authenticationRequired": "<string>",
                    "proxyPassword": "<string>",
                    "proxyPort": "<integer>",
                    "proxyProtocol": "<string>",
                    "proxyServer": "<string>",
                    "proxyUser": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/vasa/{vasaId}": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > vasa > {vasaId}"
        ],
        "summary": "Configures vasa service for the specified id.",
        "description": "Enables or disable vasa service  on a storage system Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "action": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "vasaId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/vasa": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > vasa"
        ],
        "summary": "Get VASA Network-Service details for a storage system Primera / Alletra 9K",
        "description": "Get VASA Network-Service details for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": {
                    "associatedLinks": [
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      },
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "systemId": "<string>",
                    "vasa": {
                      "certMgmt": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "certSubject": "<string>",
                      "certThumbprint": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "enabled": "<boolean>",
                      "generation": "<long>",
                      "httpsEnabled": "<boolean>",
                      "httpsPort": "<long>",
                      "id": "<string>",
                      "memUsageMiB": "<long>",
                      "moreUris": [
                        {
                          "isValid": "<long>",
                          "uri": "<string>"
                        },
                        {
                          "isValid": "<long>",
                          "uri": "<string>"
                        }
                      ],
                      "serverName": "<string>",
                      "systemId": "<string>",
                      "systemWWN": "<string>",
                      "type": "<string>",
                      "version": "<string>"
                    }
                  },
                  "requestUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/snmp-mgr/{id}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > snmp-mgr > {id}"
        ],
        "summary": "Delete SNMP manager settings identified by {id}",
        "description": "Delete SNMP manager settings identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > snmp-mgr > {id}"
        ],
        "summary": "Get a specific SNMP-Manager Network-Service details for a storage system Primera / Alletra 9K",
        "description": "Get a specific SNMP-Manager Network-Service details for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": {
                    "associatedLinks": [
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      },
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "snmp": {
                      "items": [
                        {
                          "consoleUri": "<string>",
                          "customerId": "<string>",
                          "generation": "<long>",
                          "id": "<string>",
                          "managerIP": "<string>",
                          "notify": "ALL",
                          "port": "<long>",
                          "systemId": "<string>",
                          "systemWWN": "<string>",
                          "type": "<string>",
                          "user": "<string>",
                          "version": "<integer>"
                        },
                        {
                          "consoleUri": "<string>",
                          "customerId": "<string>",
                          "generation": "<long>",
                          "id": "<string>",
                          "managerIP": "<string>",
                          "notify": "STANDARD",
                          "port": "<long>",
                          "systemId": "<string>",
                          "systemWWN": "<string>",
                          "type": "<string>",
                          "user": "<string>",
                          "version": "<integer>"
                        }
                      ],
                      "pageLimit": "<integer>",
                      "pageOffset": "<integer>",
                      "total": "<integer>"
                    },
                    "systemId": "<string>"
                  },
                  "requestUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > snmp-mgr > {id}"
        ],
        "summary": "Edit SNMP Manager settings for the specified Id",
        "description": "Edit SNMP Manager settings for the specified Id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "managerIP": "<string>",
                  "notify": "STANDARD",
                  "port": "<long>",
                  "retry": "<long>",
                  "timeoutSecs": "<long>",
                  "user": "<string>",
                  "version": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/snmp-mgr": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > snmp-mgr"
        ],
        "summary": "Get SNMP-Manager Network-Service details for a storage system Primera / Alletra 9K",
        "description": "Get SNMP-Manager Network-Service details for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": {
                    "associatedLinks": [
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      },
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "snmp": {
                      "items": [
                        {
                          "consoleUri": "<string>",
                          "customerId": "<string>",
                          "generation": "<long>",
                          "id": "<string>",
                          "managerIP": "<string>",
                          "notify": "ALL",
                          "port": "<long>",
                          "systemId": "<string>",
                          "systemWWN": "<string>",
                          "type": "<string>",
                          "user": "<string>",
                          "version": "<integer>"
                        },
                        {
                          "consoleUri": "<string>",
                          "customerId": "<string>",
                          "generation": "<long>",
                          "id": "<string>",
                          "managerIP": "<string>",
                          "notify": "STANDARD",
                          "port": "<long>",
                          "systemId": "<string>",
                          "systemWWN": "<string>",
                          "type": "<string>",
                          "user": "<string>",
                          "version": "<integer>"
                        }
                      ],
                      "pageLimit": "<integer>",
                      "pageOffset": "<integer>",
                      "total": "<integer>"
                    },
                    "systemId": "<string>"
                  },
                  "requestUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > snmp-mgr"
        ],
        "summary": "Add SNMP Manager settings",
        "description": "Add SNMP Manager settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "snmpConfig": [
                    {
                      "managerIP": "<string>",
                      "notify": "NODUP",
                      "port": "<long>",
                      "retry": "<long>",
                      "timeoutSecs": "<long>",
                      "user": "<string>",
                      "version": "<integer>"
                    },
                    {
                      "managerIP": "<string>",
                      "notify": "ALL",
                      "port": "<long>",
                      "retry": "<long>",
                      "timeoutSecs": "<long>",
                      "user": "<string>",
                      "version": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/network-services/cim": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > cim"
        ],
        "summary": "Get CIM Network-Service details for a storage system Primera / Alletra 9K",
        "description": "Get CIM Network-Service details for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": {
                    "associatedLinks": [
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      },
                      {
                        "resourceUri": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "cim": {
                      "cimPolicy": "<string>",
                      "cimState": "<string>",
                      "cimVersion": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "generation": "<long>",
                      "httpPort": "<long>",
                      "httpState": "<boolean>",
                      "httpsPort": "<long>",
                      "httpsState": "<boolean>",
                      "id": "<string>",
                      "pgVersion": "<string>",
                      "serviceState": "<boolean>",
                      "slpPort": "<long>",
                      "slpState": "<boolean>",
                      "systemId": "<string>",
                      "systemWWN": "<string>",
                      "type": "<string>"
                    },
                    "systemId": "<string>"
                  },
                  "requestUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > network-services > cim"
        ],
        "summary": "Edit CIM network service configuration",
        "description": "Edit CIM network service configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "cim": {
                    "cimPolicy": "<boolean>",
                    "enableCimService": "<boolean>",
                    "httpState": "<boolean>",
                    "httpsState": "<boolean>",
                    "id": "<string>",
                    "slpState": "<boolean>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/mail-settings": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > mail-settings"
        ],
        "summary": "Delete SMTP/mail server settings",
        "description": "Delete SMTP/mail server settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > mail-settings"
        ],
        "summary": "Get the system's SMTP/Mail server settigs",
        "description": "Get the system's SMTP/Mail server settigs",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "authenticationRequired": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "friendlyCert": {
                    "ValidFrom": {
                      "ms": "<long>",
                      "tz": "<string>"
                    },
                    "ValidUntil": {
                      "ms": "<long>",
                      "tz": "<string>"
                    },
                    "issuedTo": "<string>",
                    "issuer": "<string>"
                  },
                  "generation": "<long>",
                  "mailHostDomain": "<string>",
                  "mailHostServer": "<string>",
                  "port": 25,
                  "requestUri": "<string>",
                  "senderEmailId": "<string>",
                  "type": "<string>",
                  "username": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > mail-settings"
        ],
        "summary": "Add SMTP/Mail server settigs",
        "description": "Add SMTP/Mail server settigs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "mailHostDomain": "<string>",
                  "mailHostServer": "<string>",
                  "port": 587,
                  "senderEmailId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > mail-settings"
        ],
        "summary": "Edit SMTP/Mail server settigs",
        "description": "Edit SMTP/Mail server settigs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "mailHostDomain": "<string>",
                  "mailHostServer": "<string>",
                  "port": 587,
                  "senderEmailId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/hosts/{hostId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > hosts > {hostId}"
        ],
        "summary": "Get details of Primera / Alletra 9K Host identified by {HostId}",
        "description": "Get details of Primera / Alletra 9K Host identified by {HostId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "hostId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "agent": {
                    "IPAddr": "<string>",
                    "architecture": "<string>",
                    "bootFromSan": "<string>",
                    "clusterID": "<string>",
                    "clusterName": "<string>",
                    "clusterSoftware": "<string>",
                    "clusterVersion": "<string>",
                    "hostApps": "<string>",
                    "lastUpdated": {
                      "ms": "<integer>",
                      "tz": "<string>"
                    },
                    "multiPathSoftware": "<string>",
                    "multiPathSoftwareVersion": "<string>",
                    "os": "<string>",
                    "osPatch": "<string>",
                    "osVersion": "<string>",
                    "reportedName": "<string>"
                  },
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "descriptors": {
                    "IPAddr": "<string>",
                    "comment": "<string>",
                    "contact": "<string>",
                    "location": "<string>",
                    "model": "<string>",
                    "os": "<string>"
                  },
                  "displayname": "<string>",
                  "domain": "<string>",
                  "generation": "<integer>",
                  "hostId": "<integer>",
                  "hostpaths": [
                    {
                      "IPAddr": "<string>",
                      "address": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "displayname": "<string>",
                      "domain": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "generation": "<integer>",
                      "hostId": "<integer>",
                      "hostName": "<string>",
                      "hostSpeed": "<integer>",
                      "id": "<string>",
                      "model": "<string>",
                      "pathType": "<string>",
                      "portPos": {
                        "node": "<integer>",
                        "port": "<integer>",
                        "slot": "<integer>"
                      },
                      "resourceUri": "<string>",
                      "sc_HostInitiatorId": "<string>",
                      "switchPortWWN": "<string>",
                      "systemUid": "<string>",
                      "systemWWN": "<string>",
                      "uri": "<string>",
                      "vendor": "<string>"
                    },
                    {
                      "IPAddr": "<string>",
                      "address": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "displayname": "<string>",
                      "domain": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "generation": "<integer>",
                      "hostId": "<integer>",
                      "hostName": "<string>",
                      "hostSpeed": "<integer>",
                      "id": "<string>",
                      "model": "<string>",
                      "pathType": "<string>",
                      "portPos": {
                        "node": "<integer>",
                        "port": "<integer>",
                        "slot": "<integer>"
                      },
                      "resourceUri": "<string>",
                      "sc_HostInitiatorId": "<string>",
                      "switchPortWWN": "<string>",
                      "systemUid": "<string>",
                      "systemWWN": "<string>",
                      "uri": "<string>",
                      "vendor": "<string>"
                    }
                  ],
                  "id": "<string>",
                  "initiatorChapEnabled": "<boolean>",
                  "initiatorChapName": "<string>",
                  "initiatorEncryptedChapSecret": "<string>",
                  "minLunId": "<integer>",
                  "name": "<string>",
                  "persona": {
                    "capabilities": [
                      "<string>",
                      "<string>"
                    ],
                    "id": "<integer>",
                    "name": "<string>"
                  },
                  "resourceUri": "<string>",
                  "sc_HostId": "<string>",
                  "state": {
                    "detailed": {
                      "args": [
                        "<string>",
                        "<string>"
                      ],
                      "default": "<string>",
                      "key": "<string>",
                      "localized_text": "<string>"
                    },
                    "overallState": "<string>"
                  },
                  "stateDescription": [
                    "<string>",
                    "<string>"
                  ],
                  "stateVal": "<integer>",
                  "systemUid": "<string>",
                  "systemWWN": "<string>",
                  "targetChapEnabled": "<boolean>",
                  "targetChapName": "<string>",
                  "targetEncryptedChapSecret": "<string>",
                  "uaRepLun": "<boolean>",
                  "uri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/hosts": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > hosts"
        ],
        "summary": "Get details of Primera / Alletra 9K Hosts",
        "description": "Get details of Primera / Alletra 9K Hosts",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter host by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort host resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "agent": {
                        "IPAddr": "<string>",
                        "architecture": "<string>",
                        "bootFromSan": "<string>",
                        "clusterID": "<string>",
                        "clusterName": "<string>",
                        "clusterSoftware": "<string>",
                        "clusterVersion": "<string>",
                        "hostApps": "<string>",
                        "lastUpdated": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "multiPathSoftware": "<string>",
                        "multiPathSoftwareVersion": "<string>",
                        "os": "<string>",
                        "osPatch": "<string>",
                        "osVersion": "<string>",
                        "reportedName": "<string>"
                      },
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "descriptors": {
                        "IPAddr": "<string>",
                        "comment": "<string>",
                        "contact": "<string>",
                        "location": "<string>",
                        "model": "<string>",
                        "os": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "hostId": "<integer>",
                      "hostpaths": [
                        {
                          "IPAddr": "<string>",
                          "address": "<string>",
                          "associatedLinks": [
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            },
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            }
                          ],
                          "displayname": "<string>",
                          "domain": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "generation": "<integer>",
                          "hostId": "<integer>",
                          "hostName": "<string>",
                          "hostSpeed": "<integer>",
                          "id": "<string>",
                          "model": "<string>",
                          "pathType": "<string>",
                          "portPos": {
                            "node": "<integer>",
                            "port": "<integer>",
                            "slot": "<integer>"
                          },
                          "resourceUri": "<string>",
                          "sc_HostInitiatorId": "<string>",
                          "switchPortWWN": "<string>",
                          "systemUid": "<string>",
                          "systemWWN": "<string>",
                          "uri": "<string>",
                          "vendor": "<string>"
                        },
                        {
                          "IPAddr": "<string>",
                          "address": "<string>",
                          "associatedLinks": [
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            },
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            }
                          ],
                          "displayname": "<string>",
                          "domain": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "generation": "<integer>",
                          "hostId": "<integer>",
                          "hostName": "<string>",
                          "hostSpeed": "<integer>",
                          "id": "<string>",
                          "model": "<string>",
                          "pathType": "<string>",
                          "portPos": {
                            "node": "<integer>",
                            "port": "<integer>",
                            "slot": "<integer>"
                          },
                          "resourceUri": "<string>",
                          "sc_HostInitiatorId": "<string>",
                          "switchPortWWN": "<string>",
                          "systemUid": "<string>",
                          "systemWWN": "<string>",
                          "uri": "<string>",
                          "vendor": "<string>"
                        }
                      ],
                      "id": "<string>",
                      "initiatorChapEnabled": "<boolean>",
                      "initiatorChapName": "<string>",
                      "initiatorEncryptedChapSecret": "<string>",
                      "minLunId": "<integer>",
                      "name": "<string>",
                      "persona": {
                        "capabilities": [
                          "<string>",
                          "<string>"
                        ],
                        "id": "<integer>",
                        "name": "<string>"
                      },
                      "resourceUri": "<string>",
                      "sc_HostId": "<string>",
                      "state": {
                        "detailed": {
                          "args": [
                            "<string>",
                            "<string>"
                          ],
                          "default": "<string>",
                          "key": "<string>",
                          "localized_text": "<string>"
                        },
                        "overallState": "<string>"
                      },
                      "stateDescription": [
                        "<string>",
                        "<string>"
                      ],
                      "stateVal": "<integer>",
                      "systemUid": "<string>",
                      "systemWWN": "<string>",
                      "targetChapEnabled": "<boolean>",
                      "targetChapName": "<string>",
                      "targetEncryptedChapSecret": "<string>",
                      "uaRepLun": "<boolean>",
                      "uri": "<string>"
                    },
                    {
                      "agent": {
                        "IPAddr": "<string>",
                        "architecture": "<string>",
                        "bootFromSan": "<string>",
                        "clusterID": "<string>",
                        "clusterName": "<string>",
                        "clusterSoftware": "<string>",
                        "clusterVersion": "<string>",
                        "hostApps": "<string>",
                        "lastUpdated": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "multiPathSoftware": "<string>",
                        "multiPathSoftwareVersion": "<string>",
                        "os": "<string>",
                        "osPatch": "<string>",
                        "osVersion": "<string>",
                        "reportedName": "<string>"
                      },
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "descriptors": {
                        "IPAddr": "<string>",
                        "comment": "<string>",
                        "contact": "<string>",
                        "location": "<string>",
                        "model": "<string>",
                        "os": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "hostId": "<integer>",
                      "hostpaths": [
                        {
                          "IPAddr": "<string>",
                          "address": "<string>",
                          "associatedLinks": [
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            },
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            }
                          ],
                          "displayname": "<string>",
                          "domain": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "generation": "<integer>",
                          "hostId": "<integer>",
                          "hostName": "<string>",
                          "hostSpeed": "<integer>",
                          "id": "<string>",
                          "model": "<string>",
                          "pathType": "<string>",
                          "portPos": {
                            "node": "<integer>",
                            "port": "<integer>",
                            "slot": "<integer>"
                          },
                          "resourceUri": "<string>",
                          "sc_HostInitiatorId": "<string>",
                          "switchPortWWN": "<string>",
                          "systemUid": "<string>",
                          "systemWWN": "<string>",
                          "uri": "<string>",
                          "vendor": "<string>"
                        },
                        {
                          "IPAddr": "<string>",
                          "address": "<string>",
                          "associatedLinks": [
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            },
                            {
                              "resourceUri": "<string>",
                              "type": "<string>"
                            }
                          ],
                          "displayname": "<string>",
                          "domain": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "generation": "<integer>",
                          "hostId": "<integer>",
                          "hostName": "<string>",
                          "hostSpeed": "<integer>",
                          "id": "<string>",
                          "model": "<string>",
                          "pathType": "<string>",
                          "portPos": {
                            "node": "<integer>",
                            "port": "<integer>",
                            "slot": "<integer>"
                          },
                          "resourceUri": "<string>",
                          "sc_HostInitiatorId": "<string>",
                          "switchPortWWN": "<string>",
                          "systemUid": "<string>",
                          "systemWWN": "<string>",
                          "uri": "<string>",
                          "vendor": "<string>"
                        }
                      ],
                      "id": "<string>",
                      "initiatorChapEnabled": "<boolean>",
                      "initiatorChapName": "<string>",
                      "initiatorEncryptedChapSecret": "<string>",
                      "minLunId": "<integer>",
                      "name": "<string>",
                      "persona": {
                        "capabilities": [
                          "<string>",
                          "<string>"
                        ],
                        "id": "<integer>",
                        "name": "<string>"
                      },
                      "resourceUri": "<string>",
                      "sc_HostId": "<string>",
                      "state": {
                        "detailed": {
                          "args": [
                            "<string>",
                            "<string>"
                          ],
                          "default": "<string>",
                          "key": "<string>",
                          "localized_text": "<string>"
                        },
                        "overallState": "<string>"
                      },
                      "stateDescription": [
                        "<string>",
                        "<string>"
                      ],
                      "stateVal": "<integer>",
                      "systemUid": "<string>",
                      "systemWWN": "<string>",
                      "targetChapEnabled": "<boolean>",
                      "targetChapName": "<string>",
                      "targetEncryptedChapSecret": "<string>",
                      "uaRepLun": "<boolean>",
                      "uri": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/host-sets/{hostSetId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > host-sets > {hostSetId}"
        ],
        "summary": "Get details of Primera / Alletra 9K Host Set identified by {HostSetId}",
        "description": "Get details of Primera / Alletra 9K Host Set identified by {HostSetId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "hostSetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "comment": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "generation": "<integer>",
                  "hostSetId": "<integer>",
                  "id": "<string>",
                  "members": [
                    "<string>",
                    "<string>"
                  ],
                  "name": "<string>",
                  "resourceUri": "<string>",
                  "sc_HostGroupId": "<string>",
                  "systemUid": "<string>",
                  "systemWWN": "<string>",
                  "uri": "<string>",
                  "uuid": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/host-sets": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > host-sets"
        ],
        "summary": "Get details of Primera / Alletra 9K Host Sets",
        "description": "Get details of Primera / Alletra 9K Host Sets",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter host set by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort host set resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "comment": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "hostSetId": "<integer>",
                      "id": "<string>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "sc_HostGroupId": "<string>",
                      "systemUid": "<string>",
                      "systemWWN": "<string>",
                      "uri": "<string>",
                      "uuid": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "comment": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "hostSetId": "<integer>",
                      "id": "<string>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "sc_HostGroupId": "<string>",
                      "systemUid": "<string>",
                      "systemWWN": "<string>",
                      "uri": "<string>",
                      "uuid": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/host-paths/{hostPathId}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > host-paths > {hostPathId}"
        ],
        "summary": "Get details of Primera / Alletra 9K Host Path identified by {HostPathId}",
        "description": "Get details of Primera / Alletra 9K Host Path identified by {HostPathId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "hostPathId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "IPAddr": "<string>",
                  "address": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "displayname": "<string>",
                  "domain": "<string>",
                  "driverVersion": "<string>",
                  "firmwareVersion": "<string>",
                  "generation": "<integer>",
                  "hostId": "<integer>",
                  "hostName": "<string>",
                  "hostSpeed": "<integer>",
                  "id": "<string>",
                  "model": "<string>",
                  "pathType": "<string>",
                  "portPos": {
                    "node": "<integer>",
                    "port": "<integer>",
                    "slot": "<integer>"
                  },
                  "resourceUri": "<string>",
                  "sc_HostInitiatorId": "<string>",
                  "switchPortWWN": "<string>",
                  "systemUid": "<string>",
                  "systemWWN": "<string>",
                  "uri": "<string>",
                  "vendor": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/host-paths": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > host-paths"
        ],
        "summary": "Get details of Primera / Alletra 9K Host Paths",
        "description": "Get details of Primera / Alletra 9K Host Paths",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter host path by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort host path resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "IPAddr": "<string>",
                      "address": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "displayname": "<string>",
                      "domain": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "generation": "<integer>",
                      "hostId": "<integer>",
                      "hostName": "<string>",
                      "hostSpeed": "<integer>",
                      "id": "<string>",
                      "model": "<string>",
                      "pathType": "<string>",
                      "portPos": {
                        "node": "<integer>",
                        "port": "<integer>",
                        "slot": "<integer>"
                      },
                      "resourceUri": "<string>",
                      "sc_HostInitiatorId": "<string>",
                      "switchPortWWN": "<string>",
                      "systemUid": "<string>",
                      "systemWWN": "<string>",
                      "uri": "<string>",
                      "vendor": "<string>"
                    },
                    {
                      "IPAddr": "<string>",
                      "address": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "displayname": "<string>",
                      "domain": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "generation": "<integer>",
                      "hostId": "<integer>",
                      "hostName": "<string>",
                      "hostSpeed": "<integer>",
                      "id": "<string>",
                      "model": "<string>",
                      "pathType": "<string>",
                      "portPos": {
                        "node": "<integer>",
                        "port": "<integer>",
                        "slot": "<integer>"
                      },
                      "resourceUri": "<string>",
                      "sc_HostInitiatorId": "<string>",
                      "switchPortWWN": "<string>",
                      "systemUid": "<string>",
                      "systemWWN": "<string>",
                      "uri": "<string>",
                      "vendor": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure identified by {id}",
        "description": "Get details of Primera / Alletra 9K Enclosure identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "chainPosLoopA": "<integer>",
                  "chainPosLoopB": "<integer>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "dc4data": {
                    "cpuStatus": "<string>",
                    "fwStatus": "<string>",
                    "fwVersion": "<boolean>"
                  },
                  "dcsdata": {
                    "fwStatus": "<string>",
                    "fwVersion": "<string>"
                  },
                  "detailedState": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "enclosureId": "<long>",
                  "enclosureType": "ENCLOSURE_DCN5",
                  "errors": [
                    {
                      "alarmCode": "<string>",
                      "alarmText": "<string>",
                      "iom": "<string>"
                    },
                    {
                      "alarmCode": "<string>",
                      "alarmText": "<string>",
                      "iom": "<string>"
                    }
                  ],
                  "failIndicator": "<boolean>",
                  "failRequested": "<boolean>",
                  "formFactor": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "locateEnabled": "<boolean>",
                  "location": "<string>",
                  "loopSplit": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "nodeWwn": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_FAILED"
                  },
                  "subType": "<string>",
                  "systemId": "<string>",
                  "type": "<string>",
                  "warnIndicator": "<boolean>",
                  "warnRequested": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {id}"
        ],
        "summary": "Locate enclosure drive of Primera / Alletra 9K identified by {id}",
        "description": "Locate enclosure drive of Primera / Alletra 9K identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "locate": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {id}"
        ],
        "summary": "Edit details of Primera / Alletra 9K Enclosure identified by {id}",
        "description": "Edit details of Primera / Alletra 9K Enclosure identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "id": "<string>",
                  "location": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-sleds/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-sleds > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Sled identified by {enclosureId} and {id}",
        "description": "Get details of Primera / Alletra 9K Enclosure Sled identified by {enclosureId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "dc4data": {
                    "hplLED": "LED_BLUE",
                    "left": "<boolean>",
                    "right": "<boolean>",
                    "systemLED": null
                  },
                  "diskCount": "<integer>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "elementStatusCode": "<string>",
                  "enclosureDeviceId": "<integer>",
                  "enclosureId": "<string>",
                  "enclosureName": "<string>",
                  "enclosureType": "ENCLOSURE_DC3",
                  "failIndicator": "<boolean>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "locateEnabled": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "okIndicator": "<boolean>",
                  "portBypassA": "<boolean>",
                  "portBypassB": "<boolean>",
                  "power": "<boolean>",
                  "predFailIndicator": "<boolean>",
                  "protocol": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "safeToRemove": "<boolean>",
                  "sledId": "<long>",
                  "stateLoopA": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_UNKNOWN"
                  },
                  "stateLoopB": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_NOT_APPLICABLE"
                  },
                  "systemId": "<string>",
                  "temperature": "<integer>",
                  "type": "<string>",
                  "wwn": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-sleds > {id}"
        ],
        "summary": "Locate drive of Primera / Alletra 9K identified by {id}",
        "description": "Locate drive of Primera / Alletra 9K identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "locate": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-sleds": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-sleds"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Sleds identified by {enclosureId}",
        "description": "Get details of Primera / Alletra 9K Enclosure Sleds identified by {enclosureId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dc4data": {
                        "hplLED": "LED_AMBER_BLNK",
                        "left": "<boolean>",
                        "right": "<boolean>",
                        "systemLED": "LED_BLUE"
                      },
                      "diskCount": "<integer>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureDeviceId": "<integer>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DC4",
                      "failIndicator": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "okIndicator": "<boolean>",
                      "portBypassA": "<boolean>",
                      "portBypassB": "<boolean>",
                      "power": "<boolean>",
                      "predFailIndicator": "<boolean>",
                      "protocol": "<string>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "sledId": "<long>",
                      "stateLoopA": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_UNKNOWN"
                      },
                      "stateLoopB": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": null
                      },
                      "systemId": "<string>",
                      "temperature": "<integer>",
                      "type": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dc4data": {
                        "hplLED": "LED_GREEN_BLNK",
                        "left": "<boolean>",
                        "right": "<boolean>",
                        "systemLED": "LED_BLUE"
                      },
                      "diskCount": "<integer>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureDeviceId": "<integer>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DC0",
                      "failIndicator": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "okIndicator": "<boolean>",
                      "portBypassA": "<boolean>",
                      "portBypassB": "<boolean>",
                      "power": "<boolean>",
                      "predFailIndicator": "<boolean>",
                      "protocol": "<string>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "sledId": "<long>",
                      "stateLoopA": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NOT_APPLICABLE"
                      },
                      "stateLoopB": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NEW"
                      },
                      "systemId": "<string>",
                      "temperature": "<integer>",
                      "type": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-powers/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-powers > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Power identified by {enclosureId} and {id}",
        "description": "Get details of Primera / Alletra 9K Enclosure Power identified by {enclosureId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "acStatus": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "dcStatus": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "elementStatusCode": "<string>",
                  "enclosureDeviceId": "<long>",
                  "enclosureId": "<string>",
                  "enclosureName": "<string>",
                  "enclosurePowerId": "<long>",
                  "enclosureType": "ENCLOSURE_DCS3",
                  "failIndicator": "<boolean>",
                  "failInput": "<boolean>",
                  "failOutput": "<boolean>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "locateEnabled": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "modelReadOnly": "<boolean>",
                  "name": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "safeToRemove": "<boolean>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": null
                  },
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-powers > {id}"
        ],
        "summary": "Locate PCM of Primera / Alletra 9K identified by {id}",
        "description": "Locate PCM of Primera / Alletra 9K identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "locate": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-powers": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-powers"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Powers identified by {enclosureId}",
        "description": "Get details of Primera / Alletra 9K Enclosure Powers identified by {enclosureId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "acStatus": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dcStatus": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureDeviceId": "<long>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosurePowerId": "<long>",
                      "enclosureType": "ENCLOSURE_DCS7",
                      "failIndicator": "<boolean>",
                      "failInput": "<boolean>",
                      "failOutput": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "modelReadOnly": "<boolean>",
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NORMAL"
                      },
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "acStatus": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dcStatus": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureDeviceId": "<long>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosurePowerId": "<long>",
                      "enclosureType": "ENCLOSURE_DCN3",
                      "failIndicator": "<boolean>",
                      "failInput": "<boolean>",
                      "failOutput": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "modelReadOnly": "<boolean>",
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_DEGRADED"
                      },
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-fans/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-fans > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Fan identified by {enclosureId} and {id}",
        "description": "Get details of Primera / Alletra 9K Enclosure Fan identified by {enclosureId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "elementStatusCode": "<string>",
                  "enclosureCoolingFanId": "<long>",
                  "enclosureDeviceId": "<integer>",
                  "enclosureId": "<string>",
                  "enclosureName": "<string>",
                  "enclosureType": "ENCLOSURE_DCS1",
                  "failIndicator": "<boolean>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "locateEnabled": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "partNumber": "<string>",
                  "protocol": "<string>",
                  "psId": "<long>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "safeToRemove": "<boolean>",
                  "speed": "<string>",
                  "speedRpm": "<integer>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_UNKNOWN"
                  },
                  "systemId": "<string>",
                  "type": "<string>",
                  "wwn": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-fans": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-fans"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Fans identified by {enclosureId}",
        "description": "Get details of Primera / Alletra 9K Enclosure Fans identified by {enclosureId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureCoolingFanId": "<long>",
                      "enclosureDeviceId": "<integer>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DCS9",
                      "failIndicator": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "partNumber": "<string>",
                      "protocol": "<string>",
                      "psId": "<long>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "speed": "<string>",
                      "speedRpm": "<integer>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_DEGRADED"
                      },
                      "systemId": "<string>",
                      "type": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureCoolingFanId": "<long>",
                      "enclosureDeviceId": "<integer>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DCN6",
                      "failIndicator": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "partNumber": "<string>",
                      "protocol": "<string>",
                      "psId": "<long>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "speed": "<string>",
                      "speedRpm": "<integer>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NEW"
                      },
                      "systemId": "<string>",
                      "type": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-expanders/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-expanders > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Expander identified by {enclosureId} and {id}",
        "description": "Get details of Primera / Alletra 9K Enclosure Expander identified by {enclosureId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "address": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "domain": "<string>",
                  "elementStatusCode": "<string>",
                  "enclosureDeviceId": "<long>",
                  "enclosureExpanderId": "<long>",
                  "enclosureId": "<string>",
                  "enclosureName": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "name": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-expanders": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-expanders"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Expanders identified by {enclosureId}",
        "description": "Get details of Primera / Alletra 9K Enclosure Expanders identified by {enclosureId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "address": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureDeviceId": "<long>",
                      "enclosureExpanderId": "<long>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "address": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureDeviceId": "<long>",
                      "enclosureExpanderId": "<long>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-disks/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-disks > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Disk identified by {enclosureId} and {id}",
        "description": "Get details of Primera / Alletra 9K Enclosure Disk identified by {enclosureId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "dc4data": {
                    "esi": "<boolean>",
                    "esiStatus": "<string>",
                    "systemLED": "LED_GREEN"
                  },
                  "dcsdata": {
                    "esi": "<boolean>",
                    "esiStatus": "<string>"
                  },
                  "displayname": "<string>",
                  "domain": "<string>",
                  "enclosureDeviceId": "<long>",
                  "enclosureId": "<string>",
                  "enclosureName": "<string>",
                  "enclosureType": "ENCLOSURE_UNKNOWN",
                  "generation": "<integer>",
                  "id": "<string>",
                  "loopA": {
                    "alpa": "<integer>",
                    "state": {
                      "detailed": [
                        "<string>",
                        "<string>"
                      ],
                      "overall": "STATE_NEW"
                    }
                  },
                  "loopB": {
                    "alpa": "<integer>",
                    "state": {
                      "detailed": [
                        "<string>",
                        "<string>"
                      ],
                      "overall": "STATE_DEGRADED"
                    }
                  },
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "position": {
                    "cage": "<integer>",
                    "disk": "<integer>",
                    "side": "SIDE_RIGHT",
                    "sled": "<integer>"
                  },
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "systemId": "<string>",
                  "temperature": "<integer>",
                  "type": "<string>",
                  "wwn": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-disks": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-disks"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Disks identified by {enclosureId}",
        "description": "Get details of Primera / Alletra 9K Enclosure Disks identified by {enclosureId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dc4data": {
                        "esi": "<boolean>",
                        "esiStatus": "<string>",
                        "systemLED": "LED_BLUE"
                      },
                      "dcsdata": {
                        "esi": "<boolean>",
                        "esiStatus": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "enclosureDeviceId": "<long>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DCS11",
                      "generation": "<integer>",
                      "id": "<string>",
                      "loopA": {
                        "alpa": "<integer>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_NEW"
                        }
                      },
                      "loopB": {
                        "alpa": "<integer>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_NEW"
                        }
                      },
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "position": {
                        "cage": "<integer>",
                        "disk": "<integer>",
                        "side": "SIDE_LEFT",
                        "sled": "<integer>"
                      },
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "temperature": "<integer>",
                      "type": "<string>",
                      "wwn": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dc4data": {
                        "esi": "<boolean>",
                        "esiStatus": "<string>",
                        "systemLED": "LED_AMBER"
                      },
                      "dcsdata": {
                        "esi": "<boolean>",
                        "esiStatus": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "enclosureDeviceId": "<long>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DCS6",
                      "generation": "<integer>",
                      "id": "<string>",
                      "loopA": {
                        "alpa": "<integer>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_NORMAL"
                        }
                      },
                      "loopB": {
                        "alpa": "<integer>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_UNKNOWN"
                        }
                      },
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "position": {
                        "cage": "<integer>",
                        "disk": "<integer>",
                        "side": "SIDE_NONE",
                        "sled": "<integer>"
                      },
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "temperature": "<integer>",
                      "type": "<string>",
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-cards/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-cards > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Card identified by {enclosureId} and {id}",
        "description": "Get details of Primera / Alletra 9K Enclosure Card identified by {enclosureId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "dc4data": {
                    "hplLED": "LED_GREEN_BLNK",
                    "splitLED": null,
                    "systemLED": "LED_BLUE"
                  },
                  "dcsdata": {
                    "fwStatus": "<string>",
                    "fwVersion": "<string>",
                    "master": "<boolean>",
                    "sasStatus": "<string>"
                  },
                  "displayname": "<string>",
                  "domain": "<string>",
                  "elementStatusCode": "<string>",
                  "enclosureCardId": "<long>",
                  "enclosureDeviceId": "<integer>",
                  "enclosureId": "<string>",
                  "enclosureName": "<string>",
                  "enclosureType": "ENCLOSURE_DCS11",
                  "failIndicator": "<boolean>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "locateEnabled": "<boolean>",
                  "loopA": "<boolean>",
                  "loopB": "<boolean>",
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "name": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "safeToRemove": "<boolean>",
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-cards > {id}"
        ],
        "summary": "Locate IO Module of Primera / Alletra 9K identified by {id}",
        "description": "Locate IO Module of Primera / Alletra 9K identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "locate": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-cards": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-cards"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Cards identified by {enclosureId}",
        "description": "Get details of Primera / Alletra 9K Enclosure Cards identified by {enclosureId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dc4data": {
                        "hplLED": "LED_GREEN_BLNK",
                        "splitLED": null,
                        "systemLED": "LED_UNKNOWN"
                      },
                      "dcsdata": {
                        "fwStatus": "<string>",
                        "fwVersion": "<string>",
                        "master": "<boolean>",
                        "sasStatus": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureCardId": "<long>",
                      "enclosureDeviceId": "<integer>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DCS5",
                      "failIndicator": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "loopA": "<boolean>",
                      "loopB": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dc4data": {
                        "hplLED": "LED_OFF",
                        "splitLED": "LED_UNKNOWN",
                        "systemLED": "LED_GREEN_BLNK"
                      },
                      "dcsdata": {
                        "fwStatus": "<string>",
                        "fwVersion": "<string>",
                        "master": "<boolean>",
                        "sasStatus": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureCardId": "<long>",
                      "enclosureDeviceId": "<integer>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DCN2",
                      "failIndicator": "<boolean>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "loopA": "<boolean>",
                      "loopB": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-card-ports/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-card-ports > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Card Port identified by {enclosureId} and {id}",
        "description": "Get details of Primera / Alletra 9K Enclosure Card Port identified by {enclosureId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "dc4data": {
                    "linkRxLED": "LED_AMBER",
                    "linkTxLED": "LED_GREEN_BLNK"
                  },
                  "dcsdata": {
                    "sasLinkEnabled": "<boolean>",
                    "sasLinkOnline": "<boolean>"
                  },
                  "disabled": "<boolean>",
                  "domain": "<string>",
                  "elementStatusCode": "<string>",
                  "enclosureCardDeviceId": "<long>",
                  "enclosureCardId": "<string>",
                  "enclosureCardPortId": "<long>",
                  "enclosureCardPortType": "<string>",
                  "enclosureDeviceId": "<long>",
                  "enclosureId": "<string>",
                  "enclosureName": "<string>",
                  "enclosureType": "ENCLOSURE_DCS4",
                  "generation": "<integer>",
                  "id": "<string>",
                  "linkSpeed": "<string>",
                  "locateEnabled": "<boolean>",
                  "loopA": "<boolean>",
                  "loopIndex": "<integer>",
                  "nodePort": {
                    "node": "<long>",
                    "port": "<long>",
                    "slot": "<long>"
                  },
                  "osDisplayName": "<string>",
                  "portWwn": "<string>",
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "sfp": {
                    "fwVersion": "<string>",
                    "manufacturing": {
                      "assemblyRev": "<string>",
                      "checkSum": "<string>",
                      "hpeModelName": "<string>",
                      "manufacturer": "<string>",
                      "model": "<string>",
                      "saleablePartNumber": "<string>",
                      "saleableSerialNumber": "<string>",
                      "serialNumber": "<string>",
                      "sparePartNumber": "<string>"
                    },
                    "name": "<string>",
                    "qualified": "<boolean>",
                    "rxLossPin": "<string>",
                    "rxPowerLow": "<boolean>",
                    "speed": "<long>",
                    "state": {
                      "detailed": [
                        "<string>",
                        "<string>"
                      ],
                      "overall": "STATE_NOT_APPLICABLE"
                    },
                    "txDisablePin": "<string>",
                    "txFaultPin": "<string>"
                  },
                  "systemId": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{enclosureId}/enclosure-card-ports": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {enclosureId} > enclosure-card-ports"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosure Card Ports identified by {enclosureId}",
        "description": "Get details of Primera / Alletra 9K Enclosure Card Ports identified by {enclosureId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dc4data": {
                        "linkRxLED": "LED_GREEN_BLNK",
                        "linkTxLED": "LED_AMBER"
                      },
                      "dcsdata": {
                        "sasLinkEnabled": "<boolean>",
                        "sasLinkOnline": "<boolean>"
                      },
                      "disabled": "<boolean>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureCardDeviceId": "<long>",
                      "enclosureCardId": "<string>",
                      "enclosureCardPortId": "<long>",
                      "enclosureCardPortType": "<string>",
                      "enclosureDeviceId": "<long>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DCN5",
                      "generation": "<integer>",
                      "id": "<string>",
                      "linkSpeed": "<string>",
                      "locateEnabled": "<boolean>",
                      "loopA": "<boolean>",
                      "loopIndex": "<integer>",
                      "nodePort": {
                        "node": "<long>",
                        "port": "<long>",
                        "slot": "<long>"
                      },
                      "osDisplayName": "<string>",
                      "portWwn": "<string>",
                      "resourceUri": "<string>",
                      "sfp": {
                        "fwVersion": "<string>",
                        "manufacturing": {
                          "assemblyRev": "<string>",
                          "checkSum": "<string>",
                          "hpeModelName": "<string>",
                          "manufacturer": "<string>",
                          "model": "<string>",
                          "saleablePartNumber": "<string>",
                          "saleableSerialNumber": "<string>",
                          "serialNumber": "<string>",
                          "sparePartNumber": "<string>"
                        },
                        "name": "<string>",
                        "qualified": "<boolean>",
                        "rxLossPin": "<string>",
                        "rxPowerLow": "<boolean>",
                        "speed": "<long>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_DEGRADED"
                        },
                        "txDisablePin": "<string>",
                        "txFaultPin": "<string>"
                      },
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "dc4data": {
                        "linkRxLED": "LED_AMBER",
                        "linkTxLED": "LED_BLUE_BLNK"
                      },
                      "dcsdata": {
                        "sasLinkEnabled": "<boolean>",
                        "sasLinkOnline": "<boolean>"
                      },
                      "disabled": "<boolean>",
                      "domain": "<string>",
                      "elementStatusCode": "<string>",
                      "enclosureCardDeviceId": "<long>",
                      "enclosureCardId": "<string>",
                      "enclosureCardPortId": "<long>",
                      "enclosureCardPortType": "<string>",
                      "enclosureDeviceId": "<long>",
                      "enclosureId": "<string>",
                      "enclosureName": "<string>",
                      "enclosureType": "ENCLOSURE_DCS11",
                      "generation": "<integer>",
                      "id": "<string>",
                      "linkSpeed": "<string>",
                      "locateEnabled": "<boolean>",
                      "loopA": "<boolean>",
                      "loopIndex": "<integer>",
                      "nodePort": {
                        "node": "<long>",
                        "port": "<long>",
                        "slot": "<long>"
                      },
                      "osDisplayName": "<string>",
                      "portWwn": "<string>",
                      "resourceUri": "<string>",
                      "sfp": {
                        "fwVersion": "<string>",
                        "manufacturing": {
                          "assemblyRev": "<string>",
                          "checkSum": "<string>",
                          "hpeModelName": "<string>",
                          "manufacturer": "<string>",
                          "model": "<string>",
                          "saleablePartNumber": "<string>",
                          "saleableSerialNumber": "<string>",
                          "serialNumber": "<string>",
                          "sparePartNumber": "<string>"
                        },
                        "name": "<string>",
                        "qualified": "<boolean>",
                        "rxLossPin": "<string>",
                        "rxPowerLow": "<boolean>",
                        "speed": "<long>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_NORMAL"
                        },
                        "txDisablePin": "<string>",
                        "txFaultPin": "<string>"
                      },
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{cageId}/disks/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {cageId} > disks > {id}"
        ],
        "summary": "Get details of Primera / Alletra 9K disk identified by {cageId} and {id}",
        "description": "Get details of Primera / Alletra 9K disk identified by {cageId} and {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "cageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<int64>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "admitTime": {
                    "ms": "<long>",
                    "tz": "<string>"
                  },
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "capacity": {
                    "allocatedMiB": "<integer>",
                    "failedMiB": "<integer>",
                    "freeMiB": "<integer>",
                    "totalMiB": "<integer>",
                    "unavailableMiB": "<integer>"
                  },
                  "consoleUri": "<string>",
                  "consumableSizeMiB": "<integer>",
                  "customerId": "<string>",
                  "devType": "<string>",
                  "diskId": "<long>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "fwStatus": "<string>",
                  "fwVersion": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "lifeLeftPCT": "<number>",
                  "loopA0": {
                    "degraded": "<boolean>",
                    "disabled": "<boolean>",
                    "port": {
                      "node": "<long>",
                      "port": "<long>",
                      "slot": "<long>"
                    },
                    "primary": "<boolean>"
                  },
                  "loopA1": {
                    "degraded": "<boolean>",
                    "disabled": "<boolean>",
                    "port": {
                      "node": "<long>",
                      "port": "<long>",
                      "slot": "<long>"
                    },
                    "primary": "<boolean>"
                  },
                  "loopB0": {
                    "degraded": "<boolean>",
                    "disabled": "<boolean>",
                    "port": {
                      "node": "<long>",
                      "port": "<long>",
                      "slot": "<long>"
                    },
                    "primary": "<boolean>"
                  },
                  "loopB1": {
                    "degraded": "<boolean>",
                    "disabled": "<boolean>",
                    "port": {
                      "node": "<long>",
                      "port": "<long>",
                      "slot": "<long>"
                    },
                    "primary": "<boolean>"
                  },
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "mediaType": "<string>",
                  "mfgCapacityGB": "<integer>",
                  "positionLast": {
                    "cage": "<integer>",
                    "disk": "<integer>",
                    "side": "SIDE_LEFT",
                    "sled": "<integer>"
                  },
                  "positionNow": {
                    "cage": "<long>",
                    "disk": "<long>",
                    "side": "SIDE_RIGHT",
                    "sled": "<long>"
                  },
                  "protocol": "<string>",
                  "rawSizeMiB": "<integer>",
                  "readErrors": {
                    "correctable": "<integer>",
                    "uncorrectable": "<integer>"
                  },
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "sedStatus": "<string>",
                  "speed": "<integer>",
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": "STATE_NEW"
                  },
                  "systemId": "<string>",
                  "tempMax": "<long>",
                  "tempMin": "<long>",
                  "tempNow": "<long>",
                  "type": "<string>",
                  "writeErrors": {
                    "correctable": "<integer>",
                    "uncorrectable": "<integer>"
                  },
                  "wwn": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures/{cageId}/disks": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures > {cageId} > disks"
        ],
        "summary": "Get details of Primera / Alletra 9K disks identified by {cageId}",
        "description": "Get details of Primera / Alletra 9K disks identified by {cageId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter Disk by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort Disk by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "cageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<int64>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "admitTime": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "capacity": {
                        "allocatedMiB": "<integer>",
                        "failedMiB": "<integer>",
                        "freeMiB": "<integer>",
                        "totalMiB": "<integer>",
                        "unavailableMiB": "<integer>"
                      },
                      "consumableSizeMiB": "<integer>",
                      "customerId": "<string>",
                      "devType": "<string>",
                      "diskId": "<long>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "fwStatus": "<string>",
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "lifeLeftPCT": "<number>",
                      "loopA0": {
                        "degraded": "<boolean>",
                        "disabled": "<boolean>",
                        "port": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "primary": "<boolean>"
                      },
                      "loopA1": {
                        "degraded": "<boolean>",
                        "disabled": "<boolean>",
                        "port": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "primary": "<boolean>"
                      },
                      "loopB0": {
                        "degraded": "<boolean>",
                        "disabled": "<boolean>",
                        "port": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "primary": "<boolean>"
                      },
                      "loopB1": {
                        "degraded": "<boolean>",
                        "disabled": "<boolean>",
                        "port": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "primary": "<boolean>"
                      },
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "mediaType": "<string>",
                      "mfgCapacityGB": "<integer>",
                      "positionLast": {
                        "cage": "<integer>",
                        "disk": "<integer>",
                        "side": "SIDE_LEFT",
                        "sled": "<integer>"
                      },
                      "positionNow": {
                        "cage": "<long>",
                        "disk": "<long>",
                        "side": "SIDE_LEFT",
                        "sled": "<long>"
                      },
                      "protocol": "<string>",
                      "rawSizeMiB": "<integer>",
                      "readErrors": {
                        "correctable": "<integer>",
                        "uncorrectable": "<integer>"
                      },
                      "resourceUri": "<string>",
                      "sedStatus": "<string>",
                      "speed": "<integer>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NEW"
                      },
                      "systemId": "<string>",
                      "tempMax": "<long>",
                      "tempMin": "<long>",
                      "tempNow": "<long>",
                      "type": "<string>",
                      "writeErrors": {
                        "correctable": "<integer>",
                        "uncorrectable": "<integer>"
                      },
                      "wwn": "<string>"
                    },
                    {
                      "admitTime": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "capacity": {
                        "allocatedMiB": "<integer>",
                        "failedMiB": "<integer>",
                        "freeMiB": "<integer>",
                        "totalMiB": "<integer>",
                        "unavailableMiB": "<integer>"
                      },
                      "consumableSizeMiB": "<integer>",
                      "customerId": "<string>",
                      "devType": "<string>",
                      "diskId": "<long>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "fwStatus": "<string>",
                      "fwVersion": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "lifeLeftPCT": "<number>",
                      "loopA0": {
                        "degraded": "<boolean>",
                        "disabled": "<boolean>",
                        "port": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "primary": "<boolean>"
                      },
                      "loopA1": {
                        "degraded": "<boolean>",
                        "disabled": "<boolean>",
                        "port": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "primary": "<boolean>"
                      },
                      "loopB0": {
                        "degraded": "<boolean>",
                        "disabled": "<boolean>",
                        "port": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "primary": "<boolean>"
                      },
                      "loopB1": {
                        "degraded": "<boolean>",
                        "disabled": "<boolean>",
                        "port": {
                          "node": "<long>",
                          "port": "<long>",
                          "slot": "<long>"
                        },
                        "primary": "<boolean>"
                      },
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "mediaType": "<string>",
                      "mfgCapacityGB": "<integer>",
                      "positionLast": {
                        "cage": "<integer>",
                        "disk": "<integer>",
                        "side": "SIDE_LEFT",
                        "sled": "<integer>"
                      },
                      "positionNow": {
                        "cage": "<long>",
                        "disk": "<long>",
                        "side": "SIDE_RIGHT",
                        "sled": "<long>"
                      },
                      "protocol": "<string>",
                      "rawSizeMiB": "<integer>",
                      "readErrors": {
                        "correctable": "<integer>",
                        "uncorrectable": "<integer>"
                      },
                      "resourceUri": "<string>",
                      "sedStatus": "<string>",
                      "speed": "<integer>",
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_UNKNOWN"
                      },
                      "systemId": "<string>",
                      "tempMax": "<long>",
                      "tempMin": "<long>",
                      "tempNow": "<long>",
                      "type": "<string>",
                      "writeErrors": {
                        "correctable": "<integer>",
                        "uncorrectable": "<integer>"
                      },
                      "wwn": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/enclosures": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > enclosures"
        ],
        "summary": "Get details of Primera / Alletra 9K Enclosures",
        "description": "Get details of Primera / Alletra 9K Enclosures",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort enclosure resource by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "chainPosLoopA": "<integer>",
                      "chainPosLoopB": "<integer>",
                      "customerId": "<string>",
                      "dc4data": {
                        "cpuStatus": "<string>",
                        "fwStatus": "<string>",
                        "fwVersion": "<boolean>"
                      },
                      "dcsdata": {
                        "fwStatus": "<string>",
                        "fwVersion": "<string>"
                      },
                      "detailedState": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "enclosureId": "<long>",
                      "enclosureType": "ENCLOSURE_DCS2",
                      "errors": [
                        {
                          "alarmCode": "<string>",
                          "alarmText": "<string>",
                          "iom": "<string>"
                        },
                        {
                          "alarmCode": "<string>",
                          "alarmText": "<string>",
                          "iom": "<string>"
                        }
                      ],
                      "failIndicator": "<boolean>",
                      "failRequested": "<boolean>",
                      "formFactor": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "location": "<string>",
                      "loopSplit": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodeWwn": "<string>",
                      "resourceUri": "<string>",
                      "state": {
                        "detailed": "<string>",
                        "overall": null
                      },
                      "subType": "<string>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "warnIndicator": "<boolean>",
                      "warnRequested": "<boolean>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "chainPosLoopA": "<integer>",
                      "chainPosLoopB": "<integer>",
                      "customerId": "<string>",
                      "dc4data": {
                        "cpuStatus": "<string>",
                        "fwStatus": "<string>",
                        "fwVersion": "<boolean>"
                      },
                      "dcsdata": {
                        "fwStatus": "<string>",
                        "fwVersion": "<string>"
                      },
                      "detailedState": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "enclosureId": "<long>",
                      "enclosureType": "ENCLOSURE_DC4",
                      "errors": [
                        {
                          "alarmCode": "<string>",
                          "alarmText": "<string>",
                          "iom": "<string>"
                        },
                        {
                          "alarmCode": "<string>",
                          "alarmText": "<string>",
                          "iom": "<string>"
                        }
                      ],
                      "failIndicator": "<boolean>",
                      "failRequested": "<boolean>",
                      "formFactor": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "locateEnabled": "<boolean>",
                      "location": "<string>",
                      "loopSplit": "<boolean>",
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "name": "<string>",
                      "nodeWwn": "<string>",
                      "resourceUri": "<string>",
                      "state": {
                        "detailed": "<string>",
                        "overall": "STATE_FAILED"
                      },
                      "subType": "<string>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "warnIndicator": "<boolean>",
                      "warnRequested": "<boolean>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/component-performance-statistics": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > component-performance-statistics"
        ],
        "summary": "Get component performance statistics details for a storage system Primera / Alletra 9K idenfified by {systemId}",
        "description": "Get component performance statistics details for a storage system Primera / Alletra 9K idenfified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cachePercentage": {
                    "avgOf1day": "<number>",
                    "avgOf1hour": "<number>",
                    "avgOf8hours": "<number>",
                    "avgOflatest": "<number>"
                  },
                  "cpuPercentage": {
                    "avgOf1day": "<number>",
                    "avgOf1hour": "<number>",
                    "avgOf8hours": "<number>",
                    "avgOflatest": "<number>"
                  },
                  "customerId": "<string>",
                  "requestUri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/collect-support-data": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > collect-support-data"
        ],
        "summary": "Trigger a collection on the storage system Primera / Alletra 9K",
        "description": "Trigger a collection on the storage system Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": [
                  {
                    "action": "CRASHDUMPCOLLECTION",
                    "options": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  {
                    "action": "WEEKLYCOLLECTION",
                    "options": [
                      "<string>",
                      "<string>"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/certificates/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > certificates > {id}"
        ],
        "summary": "Get array certificates by Primera / Alletra 9K identified by {id}",
        "description": "Get array certificates by Primera / Alletra 9K identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "certType": "<string>",
                  "commonname": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "displayname": "<string>",
                  "domain": "<string>",
                  "enddate": {
                    "ms": "<long>",
                    "tz": "<string>"
                  },
                  "fingerprint": "<string>",
                  "generation": "<long>",
                  "id": "<string>",
                  "issuer": "<string>",
                  "pem": "<string>",
                  "requestUri": "<string>",
                  "serial": "<string>",
                  "service": "<string>",
                  "signaturetype": "<string>",
                  "startdate": {
                    "ms": "<long>",
                    "tz": "<string>"
                  },
                  "subject": "<string>",
                  "subjectaltname": "<string>",
                  "systemId": "<string>",
                  "text": "<string>",
                  "type": "<string>",
                  "uri": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > certificates > {id}"
        ],
        "summary": "Import certificate identified by {id} on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Import certificate identified by {id} on storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authorityChain": "<string>",
                  "certificate": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/certificates/remove": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > certificates > remove"
        ],
        "summary": "Delete certificates from storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Delete certificates from storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "certificates": [
                    {
                      "certificate": "<string>"
                    },
                    {
                      "certificate": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/certificates": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > certificates"
        ],
        "summary": "Get array certificates by Primera / Alletra 9K",
        "description": "Get array certificates by Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter Certificates by Key.",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "certType": "<string>",
                      "commonname": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "enddate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "fingerprint": "<string>",
                      "generation": "<long>",
                      "id": "<string>",
                      "issuer": "<string>",
                      "pem": "<string>",
                      "serial": "<string>",
                      "service": "<string>",
                      "signaturetype": "<string>",
                      "startdate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "subject": "<string>",
                      "subjectaltname": "<string>",
                      "systemId": "<string>",
                      "text": "<string>",
                      "type": "<string>",
                      "uri": "<string>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "certType": "<string>",
                      "commonname": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "displayname": "<string>",
                      "domain": "<string>",
                      "enddate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "fingerprint": "<string>",
                      "generation": "<long>",
                      "id": "<string>",
                      "issuer": "<string>",
                      "pem": "<string>",
                      "serial": "<string>",
                      "service": "<string>",
                      "signaturetype": "<string>",
                      "startdate": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "subject": "<string>",
                      "subjectaltname": "<string>",
                      "systemId": "<string>",
                      "text": "<string>",
                      "type": "<string>",
                      "uri": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > certificates"
        ],
        "summary": "Create certificate on storage system Primera / Alletra 9K identified by {systemId}",
        "description": "Create certificate on storage system Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "type": "<string>",
                  "service": "CIM",
                  "authorityChain": "<string>",
                  "commonName": "<string>",
                  "country": "<string>",
                  "days": "<long>",
                  "keyLength": "<long>",
                  "locality": "<string>",
                  "organization": "<string>",
                  "organizationUnit": "<string>",
                  "province": "<string>",
                  "subjectAltName": {
                    "DNS": "<string>",
                    "IP": "<string>",
                    "email": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/capacity-summary": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > capacity-summary"
        ],
        "summary": "Get system capacity for a storage system Primera / Alletra 9K",
        "description": "Get system capacity for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "capacityByTier": {
                    "fcFree": "<number>",
                    "fcUsed": "<number>",
                    "nlFree": "<number>",
                    "nlUsed": "<number>",
                    "ssdFree": "<number>",
                    "ssdUsed": "<number>",
                    "totalUsed": "<number>",
                    "usableCapacity": "<number>"
                  },
                  "capacitySummary": {
                    "allocated": {
                      "cpgs": "<number>",
                      "cpgsFree": "<number>",
                      "cpgsPrivate": "<number>",
                      "cpgsPrivateBase": {
                        "reserved": "<number>",
                        "reservedVVols": "<number>",
                        "total": "<number>"
                      },
                      "cpgsPrivateSnap": {
                        "reserved": "<number>",
                        "reservedVVols": "<number>",
                        "total": "<number>"
                      },
                      "cpgsShared": "<number>",
                      "legacyVolumes": "<number>",
                      "legacyVolumesSnap": "<number>",
                      "legacyVolumesUser": "<number>",
                      "system": "<number>",
                      "systemAdmin": "<number>",
                      "systemInternal": "<number>",
                      "systemSpare": "<number>",
                      "systemSpareUnused": "<number>",
                      "systemSpareUsed": "<number>",
                      "total": "<number>",
                      "unmapped": "<number>"
                    },
                    "allocatedPercentage": "<number>",
                    "compaction": "<number>",
                    "compression": "<number>",
                    "dataReduction": "<number>",
                    "dedup": "<number>",
                    "failed": "<number>",
                    "failedPercentage": "<number>",
                    "free": "<number>",
                    "freeInitialized": "<number>",
                    "freePercentage": "<number>",
                    "freeUninitialized": "<number>",
                    "overProvisioning": "<number>",
                    "total": "<number>",
                    "unavailable": "<number>",
                    "unavailablePercentage": "<number>"
                  },
                  "customerId": "<string>",
                  "fcCapacitySummary": {
                    "allocated": {
                      "cpgs": "<number>",
                      "cpgsFree": "<number>",
                      "cpgsPrivate": "<number>",
                      "cpgsPrivateBase": {
                        "reserved": "<number>",
                        "reservedVVols": "<number>",
                        "total": "<number>"
                      },
                      "cpgsPrivateSnap": {
                        "reserved": "<number>",
                        "reservedVVols": "<number>",
                        "total": "<number>"
                      },
                      "cpgsShared": "<number>",
                      "legacyVolumes": "<number>",
                      "legacyVolumesSnap": "<number>",
                      "legacyVolumesUser": "<number>",
                      "system": "<number>",
                      "systemAdmin": "<number>",
                      "systemInternal": "<number>",
                      "systemSpare": "<number>",
                      "systemSpareUnused": "<number>",
                      "systemSpareUsed": "<number>",
                      "total": "<number>",
                      "unmapped": "<number>"
                    },
                    "allocatedPercentage": "<number>",
                    "compaction": "<number>",
                    "compression": "<number>",
                    "dataReduction": "<number>",
                    "dedup": "<number>",
                    "failed": "<number>",
                    "failedPercentage": "<number>",
                    "free": "<number>",
                    "freeInitialized": "<number>",
                    "freePercentage": "<number>",
                    "freeUninitialized": "<number>",
                    "overProvisioning": "<number>",
                    "total": "<number>",
                    "unavailable": "<number>",
                    "unavailablePercentage": "<number>"
                  },
                  "id": "<string>",
                  "nlCapacitySummary": {
                    "allocated": {
                      "cpgs": "<number>",
                      "cpgsFree": "<number>",
                      "cpgsPrivate": "<number>",
                      "cpgsPrivateBase": {
                        "reserved": "<number>",
                        "reservedVVols": "<number>",
                        "total": "<number>"
                      },
                      "cpgsPrivateSnap": {
                        "reserved": "<number>",
                        "reservedVVols": "<number>",
                        "total": "<number>"
                      },
                      "cpgsShared": "<number>",
                      "legacyVolumes": "<number>",
                      "legacyVolumesSnap": "<number>",
                      "legacyVolumesUser": "<number>",
                      "system": "<number>",
                      "systemAdmin": "<number>",
                      "systemInternal": "<number>",
                      "systemSpare": "<number>",
                      "systemSpareUnused": "<number>",
                      "systemSpareUsed": "<number>",
                      "total": "<number>",
                      "unmapped": "<number>"
                    },
                    "allocatedPercentage": "<number>",
                    "compaction": "<number>",
                    "compression": "<number>",
                    "dataReduction": "<number>",
                    "dedup": "<number>",
                    "failed": "<number>",
                    "failedPercentage": "<number>",
                    "free": "<number>",
                    "freeInitialized": "<number>",
                    "freePercentage": "<number>",
                    "freeUninitialized": "<number>",
                    "overProvisioning": "<number>",
                    "total": "<number>",
                    "unavailable": "<number>",
                    "unavailablePercentage": "<number>"
                  },
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "ssdCapacitySummary": {
                    "allocated": {
                      "cpgs": "<number>",
                      "cpgsFree": "<number>",
                      "cpgsPrivate": "<number>",
                      "cpgsPrivateBase": {
                        "reserved": "<number>",
                        "reservedVVols": "<number>",
                        "total": "<number>"
                      },
                      "cpgsPrivateSnap": {
                        "reserved": "<number>",
                        "reservedVVols": "<number>",
                        "total": "<number>"
                      },
                      "cpgsShared": "<number>",
                      "legacyVolumes": "<number>",
                      "legacyVolumesSnap": "<number>",
                      "legacyVolumesUser": "<number>",
                      "system": "<number>",
                      "systemAdmin": "<number>",
                      "systemInternal": "<number>",
                      "systemSpare": "<number>",
                      "systemSpareUnused": "<number>",
                      "systemSpareUsed": "<number>",
                      "total": "<number>",
                      "unmapped": "<number>"
                    },
                    "allocatedPercentage": "<number>",
                    "compaction": "<number>",
                    "compression": "<number>",
                    "dataReduction": "<number>",
                    "dedup": "<number>",
                    "failed": "<number>",
                    "failedPercentage": "<number>",
                    "free": "<number>",
                    "freeInitialized": "<number>",
                    "freePercentage": "<number>",
                    "freeUninitialized": "<number>",
                    "overProvisioning": "<number>",
                    "total": "<number>",
                    "unavailable": "<number>",
                    "unavailablePercentage": "<number>"
                  },
                  "systemId": "<string>",
                  "utilizationSummary": {
                    "capacityUsageData": {
                      "freeSizeMiB": "<number>",
                      "usedSizeMiB": "<number>"
                    },
                    "provisionedCapacity": "<number>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/capacity-history": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > capacity-history"
        ],
        "summary": "Get capacity trend data for a storage system Primera / Alletra 9K",
        "description": "Get capacity trend data for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "60"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "capacityData": {
                    "customerId": "<string>",
                    "items": [
                      {
                        "timestampMs": "<long>",
                        "usageMiB": "<number>"
                      },
                      {
                        "timestampMs": "<long>",
                        "usageMiB": "<number>"
                      }
                    ],
                    "total": "<integer>"
                  },
                  "endTime": "<integer>",
                  "requestUri": "<string>",
                  "startTime": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}/snapsets": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > snapsets"
        ],
        "summary": "Get snapshot details of volume sets identified by {id} for Primera / Alletra 9K",
        "description": "Get snapshot details of volume sets identified by {id} for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "appSetBusinessUnit": "<string>",
                      "appSetComments": "<string>",
                      "appSetExcludeAIQoS": "<string>",
                      "appSetImportance": "<string>",
                      "appSetName": "<string>",
                      "appSetType": "<string>",
                      "comment": "<string>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "exportStatus": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "kvPairsPresent": "<boolean>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "requestUri": "<string>",
                      "serialNumber": "<string>",
                      "snapSetId": "<integer>",
                      "snapSetParentId": "<long>",
                      "snapSetParentName": "<string>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "vvSetType": "<string>"
                    },
                    {
                      "appSetBusinessUnit": "<string>",
                      "appSetComments": "<string>",
                      "appSetExcludeAIQoS": "<string>",
                      "appSetImportance": "<string>",
                      "appSetName": "<string>",
                      "appSetType": "<string>",
                      "comment": "<string>",
                      "creationTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "exportStatus": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "kvPairsPresent": "<boolean>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "requestUri": "<string>",
                      "serialNumber": "<string>",
                      "snapSetId": "<integer>",
                      "snapSetParentId": "<long>",
                      "snapSetParentName": "<string>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "vvSetType": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > snapsets"
        ],
        "summary": "Create snapshot for application set identified by {id}",
        "description": "Create snapshot for application set identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "vvNamePattern": "PARENT_SEC_SINCE_EPOCH",
                  "comment": "<string>",
                  "expireSecs": "<integer>",
                  "readOnly": "<boolean>",
                  "retainSecs": "<long>",
                  "snapshotName": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}/remote-protection/actions": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > remote-protection > actions"
        ],
        "summary": "Actions on volume set identified by {id} and {systemId} from Primera / Alletra 9K",
        "description": "Actions on volume set identified by {id} and {systemId} from Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "action": "START",
                  "parameters": {
                    "startActionParams": {
                      "targetName": "<string>"
                    },
                    "stopActionParams": {
                      "targetName": "<string>"
                    },
                    "syncActionParams": {
                      "forceFullSync": "<boolean>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}/proximity-settings": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > proximity-settings"
        ],
        "summary": "Get hosts and proximity details identified by application set {id} for Primera / Alletra 9K identified by {systemId}",
        "description": "Get hosts and proximity details identified by application set {id} for Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "hostGroupName": "<string>",
                      "hosts": [
                        {
                          "hostId": "<string>",
                          "name": "<string>",
                          "os": "<string>",
                          "proximity": {
                            "isRemoteArraySupportReplication": "<boolean>",
                            "isSourceArraySupportReplication": "<boolean>",
                            "localSystem": "<string>",
                            "proximityValue": "<string>",
                            "remoteSystem": "<string>"
                          }
                        },
                        {
                          "hostId": "<string>",
                          "name": "<string>",
                          "os": "<string>",
                          "proximity": {
                            "isRemoteArraySupportReplication": "<boolean>",
                            "isSourceArraySupportReplication": "<boolean>",
                            "localSystem": "<string>",
                            "proximityValue": "<string>",
                            "remoteSystem": "<string>"
                          }
                        }
                      ],
                      "systemId": "<string>",
                      "type": "<string>"
                    },
                    {
                      "customerId": "<string>",
                      "generation": "<integer>",
                      "hostGroupName": "<string>",
                      "hosts": [
                        {
                          "hostId": "<string>",
                          "name": "<string>",
                          "os": "<string>",
                          "proximity": {
                            "isRemoteArraySupportReplication": "<boolean>",
                            "isSourceArraySupportReplication": "<boolean>",
                            "localSystem": "<string>",
                            "proximityValue": "<string>",
                            "remoteSystem": "<string>"
                          }
                        },
                        {
                          "hostId": "<string>",
                          "name": "<string>",
                          "os": "<string>",
                          "proximity": {
                            "isRemoteArraySupportReplication": "<boolean>",
                            "isSourceArraySupportReplication": "<boolean>",
                            "localSystem": "<string>",
                            "proximityValue": "<string>",
                            "remoteSystem": "<string>"
                          }
                        }
                      ],
                      "systemId": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "resourceURI": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > proximity-settings"
        ],
        "summary": "Change proximity settings of hosts where volume sets are exported identified by {id} and {systemId} from Primera / Alletra 9K",
        "description": "Change proximity settings of hosts where volume sets are exported identified by {id} and {systemId} from Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hosts": [
                    {
                      "hostName": "<string>",
                      "proximity": "PRIMARY"
                    },
                    {
                      "hostName": "<string>",
                      "proximity": "ALL"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}/capacity-statistics": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id} > capacity-statistics"
        ],
        "summary": "Get capacity details for an applicationset identified by appsetUid",
        "description": "Get capacity details for an applicationset identified by appsetUid",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "capacitySummary": {
                    "freeMiB": "<number>",
                    "sizeMiB": "<number>",
                    "usedSizeMiB": "<number>"
                  },
                  "customerId": "<string>",
                  "id": "<string>",
                  "members": [
                    "<string>",
                    "<string>"
                  ],
                  "name": "<string>",
                  "requestUri": "<string>",
                  "systemId": "<string>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{id}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id}"
        ],
        "summary": "Remove applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Remove applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id}"
        ],
        "summary": "Get applicationset details for an applicationset identified by appsetUid",
        "description": "Get applicationset details for an applicationset identified by appsetUid",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "appSetBusinessUnit": "<string>",
                  "appSetComments": "<string>",
                  "appSetExcludeAIQoS": "<string>",
                  "appSetId": "<integer>",
                  "appSetImportance": "<string>",
                  "appSetName": "<string>",
                  "appSetType": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "comment": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "displayName": "<string>",
                  "domain": "<string>",
                  "exportStatus": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "initiators": [
                    {
                      "deviceDiscoveredName": "<string>",
                      "id": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "deviceDiscoveredName": "<string>",
                      "id": "<string>",
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "isFailoverAllowed": "<boolean>",
                  "isOverrideAllowed": "<boolean>",
                  "isPrimary": "<boolean>",
                  "isSyncAllowed": "<boolean>",
                  "kvPairsPresent": "<boolean>",
                  "members": [
                    "<string>",
                    "<string>"
                  ],
                  "name": "<string>",
                  "nonZeroRtoConfig": "<string>",
                  "remoteRecoveryPoint": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "replicationPartner": [
                    {
                      "partnerSystem": "<string>",
                      "replicationPartner": "<string>"
                    },
                    {
                      "partnerSystem": "<string>",
                      "replicationPartner": "<string>"
                    }
                  ],
                  "replicationState": "<string>",
                  "replicationTraffic": "<string>",
                  "replicationType": "<string>",
                  "requestUri": "<string>",
                  "serialNumber": "<string>",
                  "sizeMiB": "<number>",
                  "snapSetParentId": "<long>",
                  "snapSetParentName": "<string>",
                  "systemId": "<string>",
                  "type": "<string>",
                  "vvSetType": "<string>",
                  "zeroRtoConfig": "<string>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {id}"
        ],
        "summary": "Edit applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "description": "Edit applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "addMembers": [
                    "<string>",
                    "<string>"
                  ],
                  "appSetBusinessUnit": "<string>",
                  "appSetComments": "<string>",
                  "appSetName": "<string>",
                  "appSetType": "<string>",
                  "customAppType": "<string>",
                  "removeMembers": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > volumes"
        ],
        "summary": "Get volumes for an applicationset identified by appsetUid",
        "description": "Get volumes for an applicationset identified by appsetUid",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "appsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "requestUri": "<string>",
                  "volumes": {
                    "items": [
                      {
                        "adminAllocationSettings": {
                          "HA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "RAIDType": "<string>",
                          "deviceSpeed": {
                            "text": "<string>",
                            "value": "<integer>"
                          },
                          "deviceType": "<string>",
                          "diskFilter": "<string>",
                          "requestedHA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "setSize": "<string>",
                          "stepSize": "<long>"
                        },
                        "adminSpace": {
                          "freeMiB": "<number>",
                          "grownMiB": "<number>",
                          "rawReservedMiB": "<number>",
                          "reclaimedMiB": "<number>",
                          "reservedMiB": "<number>",
                          "totalMiB": "<number>",
                          "usedMiB": "<number>"
                        },
                        "associatedLinks": [
                          {
                            "resourceUri": "<string>",
                            "type": "<string>"
                          },
                          {
                            "resourceUri": "<string>",
                            "type": "<string>"
                          }
                        ],
                        "baseId": "<long>",
                        "comment": "<string>",
                        "compactEfficiency": "<number>",
                        "compressionEfficiency": "<number>",
                        "compressionPolicy": "<string>",
                        "conversionType": "CONVERSIONTYPE_DDS",
                        "copiedMB": "<number>",
                        "copiedPerc": "<integer>",
                        "copyOfID": "<long>",
                        "creationTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "customerId": "<string>",
                        "dataReduction": "<string>",
                        "ddcSize": "<number>",
                        "ddsSize": "<number>",
                        "dedup": "<string>",
                        "dedupSavingsSize": "<number>",
                        "dedupWrittenSize": "<number>",
                        "devType": "<string>",
                        "displayname": "<string>",
                        "domain": "<string>",
                        "efficiencyUpdateTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "expirationTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "fullyProvisioned": "<boolean>",
                        "generation": "<integer>",
                        "headsPerCylinder": "<integer>",
                        "healthState": "<long>",
                        "hidden": "<boolean>",
                        "hostWrittenMiB": "<number>",
                        "hostWrittenToVirtualPercent": "<number>",
                        "id": "<string>",
                        "initiators": [
                          {
                            "deviceDiscoveredName": "<string>",
                            "id": "<string>",
                            "resourceUri": "<string>",
                            "type": "<string>"
                          },
                          {
                            "deviceDiscoveredName": "<string>",
                            "id": "<string>",
                            "resourceUri": "<string>",
                            "type": "<string>"
                          }
                        ],
                        "name": "<string>",
                        "parentID": "<long>",
                        "physParentID": "<long>",
                        "physicalCopy": "<boolean>",
                        "policy": {
                          "fileService": "<boolean>",
                          "hostDif3par": "<boolean>",
                          "hostDifStd": "<boolean>",
                          "noCache": "<boolean>",
                          "oneHost": "<boolean>",
                          "staleSnapshot": "<boolean>",
                          "system": "<boolean>",
                          "zeroDetect": "<boolean>",
                          "zeroFill": "<boolean>"
                        },
                        "provType": "<string>",
                        "raid": "<string>",
                        "rcopyStatus": "<string>",
                        "readOnly": "<boolean>",
                        "resourceUri": "<string>",
                        "retentionTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "roChildID": "<long>",
                        "rwChildID": "<long>",
                        "sectorsPerTrack": "<integer>",
                        "sharedParentId": "<long>",
                        "sizeMiB": "<number>",
                        "snapShotTier": "<string>",
                        "snapshotAllocLimit": "<long>",
                        "snapshotAllocWarning": "<long>",
                        "snapshotAllocationSettings": {
                          "HA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "RAIDType": "<string>",
                          "deviceSpeed": {
                            "text": "<string>",
                            "value": "<integer>"
                          },
                          "deviceType": "<string>",
                          "diskFilter": "<string>",
                          "requestedHA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "setSize": "<string>",
                          "stepSize": "<long>"
                        },
                        "snapshotCpgID": "<long>",
                        "snapshotCpgName": "<string>",
                        "snapshotSpace": {
                          "freeMiB": "<number>",
                          "grownMiB": "<number>",
                          "rawReservedMiB": "<number>",
                          "reclaimedMiB": "<number>",
                          "reservedMiB": "<number>",
                          "totalMiB": "<number>",
                          "usedMiB": "<number>"
                        },
                        "snapshotTdvvSize": {
                          "ddcSizeMiB": "<number>",
                          "ddsSizeMiB": "<number>",
                          "virtualSizeMiB": "<number>",
                          "writtenSizeMiB": "<number>"
                        },
                        "snapshotUsedToVirtualPercent": "<number>",
                        "spaceCalculationTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "started": "<boolean>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_UNKNOWN"
                        },
                        "storageTier": "<string>",
                        "systemId": "<string>",
                        "thinProvisioned": "<boolean>",
                        "thinSavings": "<string>",
                        "totalRawReservedMiB": "<number>",
                        "totalReservedMiB": "<number>",
                        "totalSpaceMiB": "<number>",
                        "type": "<string>",
                        "unrefSpaceFreedTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "usedCapacity": "<number>",
                        "usedSizeMiB": "<number>",
                        "userAllocLimit": "<long>",
                        "userAllocWarning": "<long>",
                        "userAllocationSettings": {
                          "HA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "RAIDType": "<string>",
                          "deviceSpeed": {
                            "text": "<string>",
                            "value": "<integer>"
                          },
                          "deviceType": "<string>",
                          "diskFilter": "<string>",
                          "requestedHA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "setSize": "<string>",
                          "stepSize": "<long>"
                        },
                        "userCpgID": "<long>",
                        "userCpgName": "<string>",
                        "userReservedToVirtualPercent": "<number>",
                        "userSpace": {
                          "freeMiB": "<number>",
                          "grownMiB": "<number>",
                          "rawReservedMiB": "<number>",
                          "reclaimedMiB": "<number>",
                          "reservedMiB": "<number>",
                          "totalMiB": "<number>",
                          "usedMiB": "<number>"
                        },
                        "userUsedToVirtualPercent": "<number>",
                        "vlunSectorSize": "<integer>",
                        "volumeId": "<long>",
                        "volumeType": "<string>",
                        "wwn": "<string>"
                      },
                      {
                        "adminAllocationSettings": {
                          "HA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "RAIDType": "<string>",
                          "deviceSpeed": {
                            "text": "<string>",
                            "value": "<integer>"
                          },
                          "deviceType": "<string>",
                          "diskFilter": "<string>",
                          "requestedHA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "setSize": "<string>",
                          "stepSize": "<long>"
                        },
                        "adminSpace": {
                          "freeMiB": "<number>",
                          "grownMiB": "<number>",
                          "rawReservedMiB": "<number>",
                          "reclaimedMiB": "<number>",
                          "reservedMiB": "<number>",
                          "totalMiB": "<number>",
                          "usedMiB": "<number>"
                        },
                        "associatedLinks": [
                          {
                            "resourceUri": "<string>",
                            "type": "<string>"
                          },
                          {
                            "resourceUri": "<string>",
                            "type": "<string>"
                          }
                        ],
                        "baseId": "<long>",
                        "comment": "<string>",
                        "compactEfficiency": "<number>",
                        "compressionEfficiency": "<number>",
                        "compressionPolicy": "<string>",
                        "conversionType": "CONVERSIONTYPE_DDS",
                        "copiedMB": "<number>",
                        "copiedPerc": "<integer>",
                        "copyOfID": "<long>",
                        "creationTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "customerId": "<string>",
                        "dataReduction": "<string>",
                        "ddcSize": "<number>",
                        "ddsSize": "<number>",
                        "dedup": "<string>",
                        "dedupSavingsSize": "<number>",
                        "dedupWrittenSize": "<number>",
                        "devType": "<string>",
                        "displayname": "<string>",
                        "domain": "<string>",
                        "efficiencyUpdateTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "expirationTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "fullyProvisioned": "<boolean>",
                        "generation": "<integer>",
                        "headsPerCylinder": "<integer>",
                        "healthState": "<long>",
                        "hidden": "<boolean>",
                        "hostWrittenMiB": "<number>",
                        "hostWrittenToVirtualPercent": "<number>",
                        "id": "<string>",
                        "initiators": [
                          {
                            "deviceDiscoveredName": "<string>",
                            "id": "<string>",
                            "resourceUri": "<string>",
                            "type": "<string>"
                          },
                          {
                            "deviceDiscoveredName": "<string>",
                            "id": "<string>",
                            "resourceUri": "<string>",
                            "type": "<string>"
                          }
                        ],
                        "name": "<string>",
                        "parentID": "<long>",
                        "physParentID": "<long>",
                        "physicalCopy": "<boolean>",
                        "policy": {
                          "fileService": "<boolean>",
                          "hostDif3par": "<boolean>",
                          "hostDifStd": "<boolean>",
                          "noCache": "<boolean>",
                          "oneHost": "<boolean>",
                          "staleSnapshot": "<boolean>",
                          "system": "<boolean>",
                          "zeroDetect": "<boolean>",
                          "zeroFill": "<boolean>"
                        },
                        "provType": "<string>",
                        "raid": "<string>",
                        "rcopyStatus": "<string>",
                        "readOnly": "<boolean>",
                        "resourceUri": "<string>",
                        "retentionTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "roChildID": "<long>",
                        "rwChildID": "<long>",
                        "sectorsPerTrack": "<integer>",
                        "sharedParentId": "<long>",
                        "sizeMiB": "<number>",
                        "snapShotTier": "<string>",
                        "snapshotAllocLimit": "<long>",
                        "snapshotAllocWarning": "<long>",
                        "snapshotAllocationSettings": {
                          "HA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "RAIDType": "<string>",
                          "deviceSpeed": {
                            "text": "<string>",
                            "value": "<integer>"
                          },
                          "deviceType": "<string>",
                          "diskFilter": "<string>",
                          "requestedHA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "setSize": "<string>",
                          "stepSize": "<long>"
                        },
                        "snapshotCpgID": "<long>",
                        "snapshotCpgName": "<string>",
                        "snapshotSpace": {
                          "freeMiB": "<number>",
                          "grownMiB": "<number>",
                          "rawReservedMiB": "<number>",
                          "reclaimedMiB": "<number>",
                          "reservedMiB": "<number>",
                          "totalMiB": "<number>",
                          "usedMiB": "<number>"
                        },
                        "snapshotTdvvSize": {
                          "ddcSizeMiB": "<number>",
                          "ddsSizeMiB": "<number>",
                          "virtualSizeMiB": "<number>",
                          "writtenSizeMiB": "<number>"
                        },
                        "snapshotUsedToVirtualPercent": "<number>",
                        "spaceCalculationTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "started": "<boolean>",
                        "state": {
                          "detailed": [
                            "<string>",
                            "<string>"
                          ],
                          "overall": "STATE_UNKNOWN"
                        },
                        "storageTier": "<string>",
                        "systemId": "<string>",
                        "thinProvisioned": "<boolean>",
                        "thinSavings": "<string>",
                        "totalRawReservedMiB": "<number>",
                        "totalReservedMiB": "<number>",
                        "totalSpaceMiB": "<number>",
                        "type": "<string>",
                        "unrefSpaceFreedTime": {
                          "ms": "<integer>",
                          "tz": "<string>"
                        },
                        "usedCapacity": "<number>",
                        "usedSizeMiB": "<number>",
                        "userAllocLimit": "<long>",
                        "userAllocWarning": "<long>",
                        "userAllocationSettings": {
                          "HA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "RAIDType": "<string>",
                          "deviceSpeed": {
                            "text": "<string>",
                            "value": "<integer>"
                          },
                          "deviceType": "<string>",
                          "diskFilter": "<string>",
                          "requestedHA": {
                            "default": "<string>",
                            "key": "<string>"
                          },
                          "setSize": "<string>",
                          "stepSize": "<long>"
                        },
                        "userCpgID": "<long>",
                        "userCpgName": "<string>",
                        "userReservedToVirtualPercent": "<number>",
                        "userSpace": {
                          "freeMiB": "<number>",
                          "grownMiB": "<number>",
                          "rawReservedMiB": "<number>",
                          "reclaimedMiB": "<number>",
                          "reservedMiB": "<number>",
                          "totalMiB": "<number>",
                          "usedMiB": "<number>"
                        },
                        "userUsedToVirtualPercent": "<number>",
                        "vlunSectorSize": "<integer>",
                        "volumeId": "<long>",
                        "volumeType": "<string>",
                        "wwn": "<string>"
                      }
                    ],
                    "pageLimit": "<integer>",
                    "pageOffset": "<integer>",
                    "requestUri": "<string>",
                    "total": "<long>"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/un-export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > un-export"
        ],
        "summary": "Unexport applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}",
        "description": "Unexport applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroupIds": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "appsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/snapsets/{snapsetId}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > snapsets > {snapsetId}"
        ],
        "summary": "Remove Primera / Alletra 9K snapset in system identified by {snapsetId}",
        "description": "Remove Primera / Alletra 9K snapset in system identified by {snapsetId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Make snapset offline and remove.",
            "example": "<boolean>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "appsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > snapsets > {snapsetId}"
        ],
        "summary": "Get details of snapsets identified by {snapsetId} for Applicationset identified by {appsetId} for Primera / Alletra 9K",
        "description": "Get details of snapset identified by {snapsetId} for Applicationset identified by {appsetId} for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "appsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "snapsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "appSetBusinessUnit": "<string>",
                  "appSetComments": "<string>",
                  "appSetImportance": "<string>",
                  "appSetName": "<string>",
                  "appSetType": "<string>",
                  "comment": "<string>",
                  "creationTime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "customerId": "<string>",
                  "displayName": "<string>",
                  "domain": "<string>",
                  "exportStatus": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "kvPairsPresent": "<boolean>",
                  "members": [
                    "<string>",
                    "<string>"
                  ],
                  "name": "<string>",
                  "requestUri": "<string>",
                  "serialNumber": "<string>",
                  "snapSetId": "<integer>",
                  "snapSetParentId": "<long>",
                  "snapSetParentName": "<string>",
                  "systemId": "<string>",
                  "type": "<string>",
                  "vvSetType": "<string>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/replication-partners/{replicationPartnerId}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > replication-partners > {replicationPartnerId} > volumes"
        ],
        "summary": "Get volume details of replication partners identified by {appsetId} and {replicationPartnerId} for Primera / Alletra 9K",
        "description": "Get volume details of replication partners identified by {appsetId} and {replicationPartnerId} for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "appsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "replicationPartnerId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "groupObjectId": "<long>",
                      "id": "<string>",
                      "isRemoteArraySupportReplication": "<boolean>",
                      "localVolumeId": "<long>",
                      "localVolumeName": "<string>",
                      "remoteVolume": {
                        "asyncOutstanding": "<long>",
                        "remoteVolumeID": "<long>",
                        "remoteVolumeName": "<string>",
                        "resyncIteration": "<string>",
                        "resyncSnapshotName": "<string>",
                        "syncIteration": "<string>",
                        "syncPercentage": "<integer>",
                        "syncSnapshotName": "<string>",
                        "syncStatus": "<string>",
                        "targetName": "<string>",
                        "volumeIteration": "<string>",
                        "volumeLastSyncTime": {
                          "ms": "<long>",
                          "tz": "<string>"
                        },
                        "volumeSyncLength": "<long>",
                        "volumeSyncOffset": "<long>"
                      },
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "systemWWN": "<string>",
                      "type": "<string>"
                    },
                    {
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "groupObjectId": "<long>",
                      "id": "<string>",
                      "isRemoteArraySupportReplication": "<boolean>",
                      "localVolumeId": "<long>",
                      "localVolumeName": "<string>",
                      "remoteVolume": {
                        "asyncOutstanding": "<long>",
                        "remoteVolumeID": "<long>",
                        "remoteVolumeName": "<string>",
                        "resyncIteration": "<string>",
                        "resyncSnapshotName": "<string>",
                        "syncIteration": "<string>",
                        "syncPercentage": "<integer>",
                        "syncSnapshotName": "<string>",
                        "syncStatus": "<string>",
                        "targetName": "<string>",
                        "volumeIteration": "<string>",
                        "volumeLastSyncTime": {
                          "ms": "<long>",
                          "tz": "<string>"
                        },
                        "volumeSyncLength": "<long>",
                        "volumeSyncOffset": "<long>"
                      },
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "systemWWN": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/replication-partners": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > replication-partners"
        ],
        "summary": "Get details of Primera / Alletra 9K replication partners identified by {systemId} and {appsetId}",
        "description": "Get details of Primera / Alletra 9K replication partners identified by {systemId} and {appsetId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "appsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "groupId": "<string>",
                      "groupLastSyncTime": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "groupName": "<string>",
                      "groupObjectId": "<long>",
                      "id": "<string>",
                      "isProtectionPolicyConfigured": "<boolean>",
                      "isRemoteArraySupportReplication": "<boolean>",
                      "isSourceArraySupportReplication": "<boolean>",
                      "mode": "<string>",
                      "policies": {
                        "activeActive": "<boolean>",
                        "autoFailover": "<boolean>",
                        "autoRecover": "<boolean>",
                        "autoSynchronize": "<boolean>",
                        "multiTargetPeerPersistence": "<boolean>",
                        "overPeriodAlert": "<boolean>",
                        "pathManagement": "<boolean>"
                      },
                      "protectionType": "<string>",
                      "remoteSnpCPG": "<string>",
                      "remoteUsrCPG": "<string>",
                      "remoteVolumeSetName": "<string>",
                      "resourceUri": "<string>",
                      "roleReversed": "<boolean>",
                      "snapFrequencySecs": "<long>",
                      "state": "<string>",
                      "syncPeriod": "<long>",
                      "systemId": "<string>",
                      "systemName": "<string>",
                      "systemWWN": "<string>",
                      "targetName": "<string>",
                      "type": "<string>",
                      "volumeCount": "<integer>"
                    },
                    {
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "groupId": "<string>",
                      "groupLastSyncTime": {
                        "ms": "<long>",
                        "tz": "<string>"
                      },
                      "groupName": "<string>",
                      "groupObjectId": "<long>",
                      "id": "<string>",
                      "isProtectionPolicyConfigured": "<boolean>",
                      "isRemoteArraySupportReplication": "<boolean>",
                      "isSourceArraySupportReplication": "<boolean>",
                      "mode": "<string>",
                      "policies": {
                        "activeActive": "<boolean>",
                        "autoFailover": "<boolean>",
                        "autoRecover": "<boolean>",
                        "autoSynchronize": "<boolean>",
                        "multiTargetPeerPersistence": "<boolean>",
                        "overPeriodAlert": "<boolean>",
                        "pathManagement": "<boolean>"
                      },
                      "protectionType": "<string>",
                      "remoteSnpCPG": "<string>",
                      "remoteUsrCPG": "<string>",
                      "remoteVolumeSetName": "<string>",
                      "resourceUri": "<string>",
                      "roleReversed": "<boolean>",
                      "snapFrequencySecs": "<long>",
                      "state": "<string>",
                      "syncPeriod": "<long>",
                      "systemId": "<string>",
                      "systemName": "<string>",
                      "systemWWN": "<string>",
                      "targetName": "<string>",
                      "type": "<string>",
                      "volumeCount": "<integer>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets/{appsetId}/export": {
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets > {appsetId} > export"
        ],
        "summary": "Export applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}",
        "description": "Export applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostGroupIds": [
                    "<string>",
                    "<string>"
                  ],
                  "proximity": "ALL"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "appsetId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/applicationsets": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets"
        ],
        "summary": "Get all applicationset details for Primera / Alletra 9K",
        "description": "Get all applicationset details for Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to filter application-sets by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lucene query to sort application-sets by Key.",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "appSetBusinessUnit": "<string>",
                      "appSetComments": "<string>",
                      "appSetExcludeAIQoS": "<string>",
                      "appSetId": "<integer>",
                      "appSetImportance": "<string>",
                      "appSetName": "<string>",
                      "appSetType": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "comment": "<string>",
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "exportStatus": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "kvPairsPresent": "<boolean>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "serialNumber": "<string>",
                      "sizeMiB": "<number>",
                      "snapSetParentId": "<long>",
                      "snapSetParentName": "<string>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "vvSetType": "<string>"
                    },
                    {
                      "appSetBusinessUnit": "<string>",
                      "appSetComments": "<string>",
                      "appSetExcludeAIQoS": "<string>",
                      "appSetId": "<integer>",
                      "appSetImportance": "<string>",
                      "appSetName": "<string>",
                      "appSetType": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "comment": "<string>",
                      "customerId": "<string>",
                      "displayName": "<string>",
                      "domain": "<string>",
                      "exportStatus": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "initiators": [
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "deviceDiscoveredName": "<string>",
                          "id": "<string>",
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "kvPairsPresent": "<boolean>",
                      "members": [
                        "<string>",
                        "<string>"
                      ],
                      "name": "<string>",
                      "serialNumber": "<string>",
                      "sizeMiB": "<number>",
                      "snapSetParentId": "<long>",
                      "snapSetParentName": "<string>",
                      "systemId": "<string>",
                      "type": "<string>",
                      "vvSetType": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > applicationsets"
        ],
        "summary": "Create Application Set for a storage system Primera / Alletra 9K",
        "description": "Create Application Set for a storage system Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "appSetName": "<string>",
                  "appSetType": "<string>",
                  "appSetBusinessUnit": "<string>",
                  "appSetComments": "<string>",
                  "appSetImportance": "<string>",
                  "customAppType": "<string>",
                  "members": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/application-summary": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > application-summary"
        ],
        "summary": "Get Application Summary for a storage system Primera / Alletra 9K",
        "description": "Get Application Summary for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "customerId": "<string>",
                  "items": [
                    {
                      "applicationSetType": "<string>",
                      "totalSizeMiB": "<number>",
                      "totalUsedSizeMiB": "<number>",
                      "volumesCount": "<integer>"
                    },
                    {
                      "applicationSetType": "<string>",
                      "totalSizeMiB": "<number>",
                      "totalUsedSizeMiB": "<number>",
                      "volumesCount": "<integer>"
                    }
                  ],
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/alert-contacts/{id}": {
      "delete": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > alert-contacts > {id}"
        ],
        "summary": "Delete Alert/Email contact of storage system Primera / Alletra 9K identified by {id}",
        "description": "Delete Alert/Email contact of storage system Primera / Alletra 9K identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > alert-contacts > {id}"
        ],
        "summary": "Get alert-contact details for a storage system Primera / Alletra 9K identified by {id}",
        "description": "Get alert-contact details for a storage system Primera / Alletra 9K identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "company": "<string>",
                  "companyCode": "<string>",
                  "consoleUri": "<string>",
                  "country": "<string>",
                  "customerId": "<string>",
                  "fax": "<string>",
                  "firstName": "<string>",
                  "generation": "<long>",
                  "id": "<string>",
                  "includeSvcAlerts": "<boolean>",
                  "lastName": "<string>",
                  "notificationSeverities": [
                    "<integer>",
                    "<integer>"
                  ],
                  "preferredLanguage": "<string>",
                  "primaryEmail": "<string>",
                  "primaryPhone": "<string>",
                  "receiveEmail": "<boolean>",
                  "receiveGrouped": "<boolean>",
                  "requestUri": "<string>",
                  "secondaryEmail": "<string>",
                  "secondaryPhone": "<string>",
                  "systemId": "<string>",
                  "systemSupportContact": "<boolean>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > alert-contacts > {id}"
        ],
        "summary": "Edit Alert/Email contact details of storage system Primera / Alletra 9K identified by {id}",
        "description": "Edit Alert/Email contact details of storage system Primera / Alletra 9K identified by {id}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "company": "<string>",
                  "companyCode": "<string>",
                  "country": "<string>",
                  "fax": "<string>",
                  "firstName": "<string>",
                  "includeSvcAlerts": "<boolean>",
                  "lastName": "<string>",
                  "notificationSeverities": [
                    "<integer>",
                    "<integer>"
                  ],
                  "preferredLanguage": "<string>",
                  "primaryEmail": "<string>",
                  "primaryPhone": "<string>",
                  "receiveEmail": "<boolean>",
                  "receiveGrouped": "<boolean>",
                  "secondaryEmail": "<string>",
                  "secondaryPhone": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{systemId}/alert-contacts": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > alert-contacts"
        ],
        "summary": "Get alert-contact details for a storage system Primera / Alletra 9K",
        "description": "Get alert-contact details for a storage system Primera / Alletra 9K",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "items": [
                    {
                      "company": "<string>",
                      "companyCode": "<string>",
                      "consoleUri": "<string>",
                      "country": "<string>",
                      "customerId": "<string>",
                      "fax": "<string>",
                      "firstName": "<string>",
                      "generation": "<long>",
                      "id": "<string>",
                      "includeSvcAlerts": "<boolean>",
                      "lastName": "<string>",
                      "notificationSeverities": [
                        "<integer>",
                        "<integer>"
                      ],
                      "preferredLanguage": "<string>",
                      "primaryEmail": "<string>",
                      "primaryPhone": "<string>",
                      "receiveEmail": "<boolean>",
                      "receiveGrouped": "<boolean>",
                      "secondaryEmail": "<string>",
                      "secondaryPhone": "<string>",
                      "systemId": "<string>",
                      "systemSupportContact": "<boolean>",
                      "type": "<string>"
                    },
                    {
                      "company": "<string>",
                      "companyCode": "<string>",
                      "consoleUri": "<string>",
                      "country": "<string>",
                      "customerId": "<string>",
                      "fax": "<string>",
                      "firstName": "<string>",
                      "generation": "<long>",
                      "id": "<string>",
                      "includeSvcAlerts": "<boolean>",
                      "lastName": "<string>",
                      "notificationSeverities": [
                        "<integer>",
                        "<integer>"
                      ],
                      "preferredLanguage": "<string>",
                      "primaryEmail": "<string>",
                      "primaryPhone": "<string>",
                      "receiveEmail": "<boolean>",
                      "receiveGrouped": "<boolean>",
                      "secondaryEmail": "<string>",
                      "secondaryPhone": "<string>",
                      "systemId": "<string>",
                      "systemSupportContact": "<boolean>",
                      "type": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "systemId": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {systemId} > alert-contacts"
        ],
        "summary": "Add Alert/Mail contact details",
        "description": "Add Alert/Mail contact details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "company": "<string>",
                  "companyCode": "<string>",
                  "country": "<string>",
                  "fax": "<string>",
                  "firstName": "<string>",
                  "includeSvcAlerts": "<boolean>",
                  "lastName": "<string>",
                  "notificationSeverities": [
                    "<integer>",
                    "<integer>"
                  ],
                  "preferredLanguage": "<string>",
                  "primaryEmail": "<string>",
                  "primaryPhone": "<string>",
                  "receiveEmail": "<boolean>",
                  "receiveGrouped": "<boolean>",
                  "secondaryEmail": "<string>",
                  "secondaryPhone": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "systemId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1/{id}": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {id}"
        ],
        "summary": "Get Primera / Alletra 9K object identified by {id}",
        "description": "Get Primera / Alletra 9K object identified by {id}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "centerplaneType": "<string>",
                  "chunkletSizeMiB": "<integer>",
                  "clusterLED": "LED_OFF",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "descriptors": {
                    "comment": "<string>",
                    "contact": "<string>",
                    "location": "<string>",
                    "owner": "<string>"
                  },
                  "deviceId": "<integer>",
                  "deviceType": {
                    "default": "<string>",
                    "key": "<string>"
                  },
                  "displayname": "<string>",
                  "domain": "<string>",
                  "fqdn": "<string>",
                  "generation": "<integer>",
                  "id": "<string>",
                  "inClusterNodes": [
                    "<integer>",
                    "<integer>"
                  ],
                  "isFIPSEnabled": "<boolean>",
                  "locateEnabled": "<boolean>",
                  "maintenanceMode": [
                    {
                      "comment": "<string>",
                      "endTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "instances": "<integer>",
                      "reasonCode": "<string>",
                      "startTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "user": "<string>"
                    },
                    {
                      "comment": "<string>",
                      "endTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "instances": "<integer>",
                      "reasonCode": "<string>",
                      "startTime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "user": "<string>"
                    }
                  ],
                  "manufacturing": {
                    "assemblyRev": "<string>",
                    "checkSum": "<string>",
                    "hpeModelName": "<string>",
                    "manufacturer": "<string>",
                    "model": "<string>",
                    "saleablePartNumber": "<string>",
                    "saleableSerialNumber": "<string>",
                    "serialNumber": "<string>",
                    "sparePartNumber": "<string>"
                  },
                  "masterNode": "<integer>",
                  "minimumPasswordLength": "<long>",
                  "name": "<string>",
                  "networkMasterNode": "<integer>",
                  "nodeMemory": "<string>",
                  "nodesCount": "<integer>",
                  "nodesPresent": [
                    "<integer>",
                    "<integer>"
                  ],
                  "onlineNodes": [
                    "<integer>",
                    "<integer>"
                  ],
                  "parameters": {
                    "ServiceProcessorCookie": "<string>",
                    "allowDomainUsersAffectNoDomain": "<boolean>",
                    "allowSSZ": "<boolean>",
                    "allowWrtbackSingleNode": "<integer>",
                    "allowWrtbackUpgrade": "<integer>",
                    "autoAdmitTune": "<boolean>",
                    "autoExportAfterReboot": "<boolean>",
                    "complianceOfficerApproval": "<boolean>",
                    "disableChunkletInitUNMAP": "<boolean>",
                    "enableAIQoS": "<string>",
                    "eventLogNum": "<integer>",
                    "eventLogSize": "<string>",
                    "failoverMatchedSet": "<boolean>",
                    "fcRawSpaceAlert": "<integer>",
                    "hostDIF": "<string>",
                    "hostDIFTemplate": "HBA_HOST_DIF",
                    "maxVolumeRetention": "<integer>",
                    "nlRawSpaceAlert": "<integer>",
                    "overprovRatioLimit": "<number>",
                    "overprovRatioWarning": "<number>",
                    "personaProfile": "<string>",
                    "portFailoverEnabled": "<boolean>",
                    "r6LayoutVersion": "<string>",
                    "remoteCopyHostThrottling": "<boolean>",
                    "remoteSysLog": "<long>",
                    "remoteSysLogHost": "<string>",
                    "remoteSysLogSecurityHost": "<string>",
                    "sessionTimeout": "<integer>",
                    "singleLunHost": "<boolean>",
                    "ssdRawSpaceAlert": "<integer>",
                    "thermalShutdown": "<boolean>"
                  },
                  "requestUri": "<string>",
                  "resourceUri": "<string>",
                  "safeToRemove": "<boolean>",
                  "softwareVersions": {
                    "baseVersion": "<string>",
                    "components": [
                      {
                        "baseVersion": "<string>",
                        "fullVersion": "<string>",
                        "name": "<string>",
                        "release": "<string>"
                      },
                      {
                        "baseVersion": "<string>",
                        "fullVersion": "<string>",
                        "name": "<string>",
                        "release": "<string>"
                      }
                    ],
                    "fullVersion": "<string>",
                    "patches": "<string>",
                    "release": "<string>"
                  },
                  "state": {
                    "detailed": [
                      "<string>",
                      "<string>"
                    ],
                    "overall": null
                  },
                  "sysLogStatus": {
                    "general": "<string>",
                    "security": "<string>"
                  },
                  "systemDate": "<integer>",
                  "systemHeadroom": {
                    "performance": {
                      "availableHeadroom": "<string>",
                      "utilization": "<number>"
                    }
                  },
                  "systemWWN": "<string>",
                  "timezone": "<string>",
                  "type": "<string>",
                  "uptime": {
                    "ms": "<integer>",
                    "tz": "<string>"
                  },
                  "version": {
                    "base": "<string>",
                    "display": "<string>",
                    "full": "<string>",
                    "fullWithoutPatches": "<string>"
                  }
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > storage-systems > device-type1 > {id}"
        ],
        "summary": "Locate system of Primera / Alletra 9K",
        "description": "Locate system of Primera / Alletra 9K",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "locateEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems/device-type1": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems > device-type1"
        ],
        "summary": "Get all Primera / Alletra 9K storage systems",
        "description": "Get all Primera / Alletra 9K storage systems",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter systems by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to sort the response with specified key and order",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "centerplaneType": "<string>",
                      "chunkletSizeMiB": "<integer>",
                      "clusterLED": "LED_AMBER",
                      "customerId": "<string>",
                      "descriptors": {
                        "comment": "<string>",
                        "contact": "<string>",
                        "location": "<string>",
                        "owner": "<string>"
                      },
                      "deviceId": "<integer>",
                      "deviceType": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "inClusterNodes": [
                        "<integer>",
                        "<integer>"
                      ],
                      "isFIPSEnabled": "<boolean>",
                      "locateEnabled": "<boolean>",
                      "maintenanceMode": [
                        {
                          "comment": "<string>",
                          "endTime": {
                            "ms": "<integer>",
                            "tz": "<string>"
                          },
                          "instances": "<integer>",
                          "reasonCode": "<string>",
                          "startTime": {
                            "ms": "<integer>",
                            "tz": "<string>"
                          },
                          "user": "<string>"
                        },
                        {
                          "comment": "<string>",
                          "endTime": {
                            "ms": "<integer>",
                            "tz": "<string>"
                          },
                          "instances": "<integer>",
                          "reasonCode": "<string>",
                          "startTime": {
                            "ms": "<integer>",
                            "tz": "<string>"
                          },
                          "user": "<string>"
                        }
                      ],
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "masterNode": "<integer>",
                      "minimumPasswordLength": "<long>",
                      "name": "<string>",
                      "networkMasterNode": "<integer>",
                      "nodeMemory": "<string>",
                      "nodesCount": "<integer>",
                      "nodesPresent": [
                        "<integer>",
                        "<integer>"
                      ],
                      "onlineNodes": [
                        "<integer>",
                        "<integer>"
                      ],
                      "overallState": "NORMAL",
                      "parameters": {
                        "ServiceProcessorCookie": "<string>",
                        "allowDomainUsersAffectNoDomain": "<boolean>",
                        "allowSSZ": "<boolean>",
                        "allowWrtbackSingleNode": "<integer>",
                        "allowWrtbackUpgrade": "<integer>",
                        "autoAdmitTune": "<boolean>",
                        "autoExportAfterReboot": "<boolean>",
                        "complianceOfficerApproval": "<boolean>",
                        "disableChunkletInitUNMAP": "<boolean>",
                        "enableAIQoS": "<string>",
                        "eventLogNum": "<integer>",
                        "eventLogSize": "<string>",
                        "failoverMatchedSet": "<boolean>",
                        "fcRawSpaceAlert": "<integer>",
                        "hostDIF": "<string>",
                        "hostDIFTemplate": "NO_HOST_DIF",
                        "maxVolumeRetention": "<integer>",
                        "nlRawSpaceAlert": "<integer>",
                        "overprovRatioLimit": "<number>",
                        "overprovRatioWarning": "<number>",
                        "personaProfile": "<string>",
                        "portFailoverEnabled": "<boolean>",
                        "r6LayoutVersion": "<string>",
                        "remoteCopyHostThrottling": "<boolean>",
                        "remoteSysLog": "<long>",
                        "remoteSysLogHost": "<string>",
                        "remoteSysLogSecurityHost": "<string>",
                        "sessionTimeout": "<integer>",
                        "singleLunHost": "<boolean>",
                        "ssdRawSpaceAlert": "<integer>",
                        "thermalShutdown": "<boolean>"
                      },
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "softwareVersions": {
                        "baseVersion": "<string>",
                        "components": [
                          {
                            "baseVersion": "<string>",
                            "fullVersion": "<string>",
                            "name": "<string>",
                            "release": "<string>"
                          },
                          {
                            "baseVersion": "<string>",
                            "fullVersion": "<string>",
                            "name": "<string>",
                            "release": "<string>"
                          }
                        ],
                        "fullVersion": "<string>",
                        "patches": "<string>",
                        "release": "<string>"
                      },
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_NEW"
                      },
                      "sysLogStatus": {
                        "general": "<string>",
                        "security": "<string>"
                      },
                      "systemDate": "<integer>",
                      "systemHeadroom": {
                        "performance": {
                          "availableHeadroom": "<string>",
                          "utilization": "<number>"
                        }
                      },
                      "systemWWN": "<string>",
                      "timezone": "<string>",
                      "type": "<string>",
                      "uptime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "version": {
                        "base": "<string>",
                        "display": "<string>",
                        "full": "<string>",
                        "fullWithoutPatches": "<string>"
                      }
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "centerplaneType": "<string>",
                      "chunkletSizeMiB": "<integer>",
                      "clusterLED": "LED_BLUE",
                      "customerId": "<string>",
                      "descriptors": {
                        "comment": "<string>",
                        "contact": "<string>",
                        "location": "<string>",
                        "owner": "<string>"
                      },
                      "deviceId": "<integer>",
                      "deviceType": {
                        "default": "<string>",
                        "key": "<string>"
                      },
                      "displayname": "<string>",
                      "domain": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "inClusterNodes": [
                        "<integer>",
                        "<integer>"
                      ],
                      "isFIPSEnabled": "<boolean>",
                      "locateEnabled": "<boolean>",
                      "maintenanceMode": [
                        {
                          "comment": "<string>",
                          "endTime": {
                            "ms": "<integer>",
                            "tz": "<string>"
                          },
                          "instances": "<integer>",
                          "reasonCode": "<string>",
                          "startTime": {
                            "ms": "<integer>",
                            "tz": "<string>"
                          },
                          "user": "<string>"
                        },
                        {
                          "comment": "<string>",
                          "endTime": {
                            "ms": "<integer>",
                            "tz": "<string>"
                          },
                          "instances": "<integer>",
                          "reasonCode": "<string>",
                          "startTime": {
                            "ms": "<integer>",
                            "tz": "<string>"
                          },
                          "user": "<string>"
                        }
                      ],
                      "manufacturing": {
                        "assemblyRev": "<string>",
                        "checkSum": "<string>",
                        "hpeModelName": "<string>",
                        "manufacturer": "<string>",
                        "model": "<string>",
                        "saleablePartNumber": "<string>",
                        "saleableSerialNumber": "<string>",
                        "serialNumber": "<string>",
                        "sparePartNumber": "<string>"
                      },
                      "masterNode": "<integer>",
                      "minimumPasswordLength": "<long>",
                      "name": "<string>",
                      "networkMasterNode": "<integer>",
                      "nodeMemory": "<string>",
                      "nodesCount": "<integer>",
                      "nodesPresent": [
                        "<integer>",
                        "<integer>"
                      ],
                      "onlineNodes": [
                        "<integer>",
                        "<integer>"
                      ],
                      "overallState": "NORMAL",
                      "parameters": {
                        "ServiceProcessorCookie": "<string>",
                        "allowDomainUsersAffectNoDomain": "<boolean>",
                        "allowSSZ": "<boolean>",
                        "allowWrtbackSingleNode": "<integer>",
                        "allowWrtbackUpgrade": "<integer>",
                        "autoAdmitTune": "<boolean>",
                        "autoExportAfterReboot": "<boolean>",
                        "complianceOfficerApproval": "<boolean>",
                        "disableChunkletInitUNMAP": "<boolean>",
                        "enableAIQoS": "<string>",
                        "eventLogNum": "<integer>",
                        "eventLogSize": "<string>",
                        "failoverMatchedSet": "<boolean>",
                        "fcRawSpaceAlert": "<integer>",
                        "hostDIF": "<string>",
                        "hostDIFTemplate": "NO_HOST_DIF",
                        "maxVolumeRetention": "<integer>",
                        "nlRawSpaceAlert": "<integer>",
                        "overprovRatioLimit": "<number>",
                        "overprovRatioWarning": "<number>",
                        "personaProfile": "<string>",
                        "portFailoverEnabled": "<boolean>",
                        "r6LayoutVersion": "<string>",
                        "remoteCopyHostThrottling": "<boolean>",
                        "remoteSysLog": "<long>",
                        "remoteSysLogHost": "<string>",
                        "remoteSysLogSecurityHost": "<string>",
                        "sessionTimeout": "<integer>",
                        "singleLunHost": "<boolean>",
                        "ssdRawSpaceAlert": "<integer>",
                        "thermalShutdown": "<boolean>"
                      },
                      "resourceUri": "<string>",
                      "safeToRemove": "<boolean>",
                      "softwareVersions": {
                        "baseVersion": "<string>",
                        "components": [
                          {
                            "baseVersion": "<string>",
                            "fullVersion": "<string>",
                            "name": "<string>",
                            "release": "<string>"
                          },
                          {
                            "baseVersion": "<string>",
                            "fullVersion": "<string>",
                            "name": "<string>",
                            "release": "<string>"
                          }
                        ],
                        "fullVersion": "<string>",
                        "patches": "<string>",
                        "release": "<string>"
                      },
                      "state": {
                        "detailed": [
                          "<string>",
                          "<string>"
                        ],
                        "overall": "STATE_FAILED"
                      },
                      "sysLogStatus": {
                        "general": "<string>",
                        "security": "<string>"
                      },
                      "systemDate": "<integer>",
                      "systemHeadroom": {
                        "performance": {
                          "availableHeadroom": "<string>",
                          "utilization": "<number>"
                        }
                      },
                      "systemWWN": "<string>",
                      "timezone": "<string>",
                      "type": "<string>",
                      "uptime": {
                        "ms": "<integer>",
                        "tz": "<string>"
                      },
                      "version": {
                        "base": "<string>",
                        "display": "<string>",
                        "full": "<string>",
                        "fullWithoutPatches": "<string>"
                      }
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage-systems": {
      "get": {
        "tags": [
          "api > Storage API > storage-systems"
        ],
        "summary": "Get all storage systems",
        "description": "Get all storage systems",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter systems by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to sort the response with specified key and order",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "arrayList": [
                        {
                          "model": "<string>",
                          "name": "<string>"
                        },
                        {
                          "model": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "callhomeStatus": "ENABLED_DEGRADED",
                      "collectionStatus": {
                        "configStatus": {
                          "status": "NORMAL"
                        },
                        "metricStatus": {
                          "status": "UNKNOWN"
                        },
                        "overAllStatus": "UNKNOWN"
                      },
                      "connectionStatus": "CONNECTED",
                      "customerId": "<string>",
                      "description": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "lastConnectedTime": "<integer>",
                      "mgmtIp": "<ipv4>",
                      "model": "<string>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "softwareVersion": "<string>",
                      "state": "NORMAL",
                      "systemWWN": "<string>",
                      "tierType": "STORAGE_TIER_9000_NVME",
                      "type": "<string>",
                      "upSince": "<long>"
                    },
                    {
                      "arrayList": [
                        {
                          "model": "<string>",
                          "name": "<string>"
                        },
                        {
                          "model": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "callhomeStatus": "ENABLED_NORMAL",
                      "collectionStatus": {
                        "configStatus": {
                          "status": "UNKNOWN"
                        },
                        "metricStatus": {
                          "status": "UNKNOWN"
                        },
                        "overAllStatus": "DEGRADED"
                      },
                      "connectionStatus": "UNKNOWN",
                      "customerId": "<string>",
                      "description": "<string>",
                      "generation": "<integer>",
                      "id": "<string>",
                      "lastConnectedTime": "<integer>",
                      "mgmtIp": "<ipv4>",
                      "model": "<string>",
                      "name": "<string>",
                      "productFamily": "<string>",
                      "resourceUri": "<string>",
                      "softwareVersion": "<string>",
                      "state": "DEGRADED",
                      "systemWWN": "<string>",
                      "tierType": "STORAGE_TIER_BUSINESS_CRITICAL",
                      "type": "<string>",
                      "upSince": "<long>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/resource-types": {
      "get": {
        "tags": [
          "api > Storage API > resource-types"
        ],
        "summary": "Get resource types with read permissions",
        "description": "Return resource types on which the user has a read permission.  The returned list will be based upon the supplied filter.  If no filter was provided, all resource types for which the user has a read permission on will be returned",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/{id}": {
      "get": {
        "tags": [
          "api > Storage API > issues > {id}"
        ],
        "summary": "Returns the active issue with the given Id",
        "description": "Returns the active issue (state=\"CREATED\") associated with the account (retrieved from the request headers) and with given Id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The select query parameter is used to limit the properties returned with a resource or collection-level GET.\nMultiple properties can be listed to be returned. The server must only return the set of properties requested by the client.\nThe property “select” is the name of the select query parameter; its value is the list of properties to return separated by commas.\n",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<uuid>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "additionalDetails": {
                    "consoleUri": "<string>"
                  },
                  "body": "<string>",
                  "category": "<string>",
                  "clearedAt": "<dateTime>",
                  "createdAt": "<dateTime>",
                  "customerId": "<string>",
                  "generation": "<string>",
                  "issueType": "<string>",
                  "lastOccurredAt": "<dateTime>",
                  "name": "<string>",
                  "occurrenceCount": "<integer>",
                  "relatedResource": {
                    "type": "<string>",
                    "resourceUri": "<string>",
                    "name": "<string>"
                  },
                  "relatedResourceOwner": {
                    "type": "<string>",
                    "resourceUri": "<string>",
                    "name": "<string>"
                  },
                  "resourceUri": "<string>",
                  "ruleId": "<string>",
                  "severity": "<string>",
                  "state": "<string>",
                  "title": "<string>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues": {
      "get": {
        "tags": [
          "api > Storage API > issues"
        ],
        "summary": "Returns a list of active issues associated with the account, scoped by the user's permissions",
        "description": "Returns the active (state=\"CREATED\") issues for the account, which are associated with the resource-types for which the user has access. The user should also have the permission to view issues.\nEg: if there are issues associated with 50 resources (of different resource-types) for a customer (obtained from the request header),\nand the user (obtained from the request headers), who has correct permissions to view the issues but has acceess to only 20 of those resources (ie access to their resource types),\nthis API will return only the issues associated with those 20 resources. The grouped issues are places next to each other. The client will have to process them for any desired grouping\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of items to skip before starting to collect the result set",
            "example": "<{{DefaultOffset}}>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The numbers of items to return",
            "example": "<{{DefaultLimit}}>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "additionalDetails": {
                        "consoleUri": "<string>"
                      },
                      "body": "<string>",
                      "category": "<string>",
                      "clearedAt": "<dateTime>",
                      "createdAt": "<dateTime>",
                      "customerId": "<string>",
                      "generation": "<string>",
                      "issueType": "<string>",
                      "lastOccurredAt": "<dateTime>",
                      "name": "<string>",
                      "occurrenceCount": "<integer>",
                      "relatedResource": {
                        "type": "<string>",
                        "resourceUri": "<string>",
                        "name": "<string>"
                      },
                      "relatedResourceOwner": {
                        "type": "<string>",
                        "resourceUri": "<string>",
                        "name": "<string>"
                      },
                      "resourceUri": "<string>",
                      "ruleId": "<string>",
                      "severity": "<string>",
                      "state": "<string>",
                      "title": "<string>",
                      "type": "<string>"
                    },
                    {
                      "id": "<string>",
                      "additionalDetails": {
                        "consoleUri": "<string>"
                      },
                      "body": "<string>",
                      "category": "<string>",
                      "clearedAt": "<dateTime>",
                      "createdAt": "<dateTime>",
                      "customerId": "<string>",
                      "generation": "<string>",
                      "issueType": "<string>",
                      "lastOccurredAt": "<dateTime>",
                      "name": "<string>",
                      "occurrenceCount": "<integer>",
                      "relatedResource": {
                        "type": "<string>",
                        "resourceUri": "<string>",
                        "name": "<string>"
                      },
                      "relatedResourceOwner": {
                        "type": "<string>",
                        "resourceUri": "<string>",
                        "name": "<string>"
                      },
                      "resourceUri": "<string>",
                      "ruleId": "<string>",
                      "severity": "<string>",
                      "state": "<string>",
                      "title": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "pageOffset": "<integer>",
                  "pageLimit": "<integer>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/initiators/{initiatorId}": {
      "delete": {
        "tags": [
          "api > Storage API > initiators > {initiatorId}"
        ],
        "summary": "Delete initiator by {initiatorId}",
        "description": "Delete initiator by {initiatorId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "initiatorId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deleteInitiator": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > initiators > {initiatorId}"
        ],
        "summary": "Get the initiator details by {initiatorId}",
        "description": "Get the initiator details by {initiatorId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "initiatorId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "address": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "customerId": "<string>",
                  "driverVersion": "<string>",
                  "firmwareVersion": "<string>",
                  "generation": "<long>",
                  "hbaModel": "<string>",
                  "hostSpeed": "<long>",
                  "hosts": [
                    {
                      "hostGroups": [
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    },
                    {
                      "hostGroups": [
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    }
                  ],
                  "id": "<string>",
                  "ipAddress": "<string>",
                  "name": "<string>",
                  "protocol": "<string>",
                  "requestUri": "<string>",
                  "systems": [
                    "<string>",
                    "<string>"
                  ],
                  "type": "<string>",
                  "vendor": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/initiators": {
      "get": {
        "tags": [
          "api > Storage API > initiators"
        ],
        "summary": "Get the list of initiators",
        "description": "Get the list of initiators",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter hostservice by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort hostservice by Key.",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "address": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "generation": "<long>",
                      "hbaModel": "<string>",
                      "hostSpeed": "<long>",
                      "hosts": [
                        {
                          "hostGroups": [
                            {
                              "id": "<string>",
                              "markedForDelete": "<boolean>",
                              "name": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ],
                              "userCreated": "<boolean>"
                            },
                            {
                              "id": "<string>",
                              "markedForDelete": "<boolean>",
                              "name": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ],
                              "userCreated": "<boolean>"
                            }
                          ],
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "hostGroups": [
                            {
                              "id": "<string>",
                              "markedForDelete": "<boolean>",
                              "name": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ],
                              "userCreated": "<boolean>"
                            },
                            {
                              "id": "<string>",
                              "markedForDelete": "<boolean>",
                              "name": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ],
                              "userCreated": "<boolean>"
                            }
                          ],
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "protocol": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "type": "<string>",
                      "vendor": "<string>"
                    },
                    {
                      "address": "<string>",
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "customerId": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "generation": "<long>",
                      "hbaModel": "<string>",
                      "hostSpeed": "<long>",
                      "hosts": [
                        {
                          "hostGroups": [
                            {
                              "id": "<string>",
                              "markedForDelete": "<boolean>",
                              "name": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ],
                              "userCreated": "<boolean>"
                            },
                            {
                              "id": "<string>",
                              "markedForDelete": "<boolean>",
                              "name": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ],
                              "userCreated": "<boolean>"
                            }
                          ],
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "hostGroups": [
                            {
                              "id": "<string>",
                              "markedForDelete": "<boolean>",
                              "name": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ],
                              "userCreated": "<boolean>"
                            },
                            {
                              "id": "<string>",
                              "markedForDelete": "<boolean>",
                              "name": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ],
                              "userCreated": "<boolean>"
                            }
                          ],
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "protocol": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "type": "<string>",
                      "vendor": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > initiators"
        ],
        "summary": "Create initiator",
        "description": "Create initiator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "address": "<string>",
                  "protocol": "<string>",
                  "driverVersion": "<string>",
                  "firmwareVersion": "<string>",
                  "hbaModel": "<string>",
                  "hostSpeed": "<long>",
                  "ipAddress": "<string>",
                  "name": "<string>",
                  "vendor": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "address": "<string>",
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "customerId": "<string>",
                  "driverVersion": "<string>",
                  "firmwareVersion": "<string>",
                  "generation": "<long>",
                  "hbaModel": "<string>",
                  "hostSpeed": "<long>",
                  "hosts": [
                    {
                      "hostGroups": [
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    },
                    {
                      "hostGroups": [
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    }
                  ],
                  "id": "<string>",
                  "ipAddress": "<string>",
                  "name": "<string>",
                  "protocol": "<string>",
                  "systems": [
                    "<string>",
                    "<string>"
                  ],
                  "type": "<string>",
                  "vendor": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/host-initiators/{hostId}/volumes": {
      "get": {
        "tags": [
          "api > Storage API > host-initiators > {hostId} > volumes"
        ],
        "summary": "Get details of volumes associated with a host identified by {uid}",
        "description": "Get details of volumes associated with a host identified by {uid}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "hostId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "iops": "<number>",
                      "latencyMs": "<number>",
                      "pathCount": "<integer>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "throughputKbps": "<number>",
                      "volumeName": "<string>"
                    },
                    {
                      "iops": "<number>",
                      "latencyMs": "<number>",
                      "pathCount": "<integer>",
                      "resourceUri": "<string>",
                      "systemId": "<string>",
                      "throughputKbps": "<number>",
                      "volumeName": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/host-initiators/{hostId}/storage-performance-history": {
      "get": {
        "tags": [
          "api > Storage API > host-initiators > {hostId} > storage-performance-history"
        ],
        "summary": "Get the volume performance history data associated with a host identified by {uid}",
        "description": "Get the volume performance history data associated with a host identified by {uid}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query to select only the required parameters, separated by . if nested",
            "example": "<string>"
          },
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "range will define start and end time in which query has to be made.",
            "example": "<string>"
          },
          {
            "name": "timeIntervalMin",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "It defines granularity in minutes.",
            "example": "1440"
          },
          {
            "name": "topVolumesCount",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of top volumes to be returned, by default it will be 5",
            "example": "<integer>"
          },
          {
            "name": "hostId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "customerId": "<string>",
                  "hostVolumePerfTrendData": {
                    "iopsMetricsData": [
                      {
                        "historicalData": {
                          "count": "<integer>",
                          "seriesData": [
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            },
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            }
                          ]
                        },
                        "id": "<string>",
                        "systemId": "<string>",
                        "volumeName": "<string>"
                      },
                      {
                        "historicalData": {
                          "count": "<integer>",
                          "seriesData": [
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            },
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            }
                          ]
                        },
                        "id": "<string>",
                        "systemId": "<string>",
                        "volumeName": "<string>"
                      }
                    ],
                    "latencyMetricsDataMs": [
                      {
                        "historicalData": {
                          "count": "<integer>",
                          "seriesData": [
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            },
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            }
                          ]
                        },
                        "id": "<string>",
                        "systemId": "<string>",
                        "volumeName": "<string>"
                      },
                      {
                        "historicalData": {
                          "count": "<integer>",
                          "seriesData": [
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            },
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            }
                          ]
                        },
                        "id": "<string>",
                        "systemId": "<string>",
                        "volumeName": "<string>"
                      }
                    ],
                    "throughputMetricsDataKbps": [
                      {
                        "historicalData": {
                          "count": "<integer>",
                          "seriesData": [
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            },
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            }
                          ]
                        },
                        "id": "<string>",
                        "systemId": "<string>",
                        "volumeName": "<string>"
                      },
                      {
                        "historicalData": {
                          "count": "<integer>",
                          "seriesData": [
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            },
                            {
                              "timestampMs": "<long>",
                              "value": "<number>"
                            }
                          ]
                        },
                        "id": "<string>",
                        "systemId": "<string>",
                        "volumeName": "<string>"
                      }
                    ]
                  },
                  "requestURI": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/host-initiators/{hostId}": {
      "delete": {
        "tags": [
          "api > Storage API > host-initiators > {hostId}"
        ],
        "summary": "Delete a host by {hostId}",
        "description": "Delete a host by {hostId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Forceful delete option",
            "example": "<boolean>"
          },
          {
            "name": "hostId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > host-initiators > {hostId}"
        ],
        "summary": "Get the host details by {hostId}",
        "description": "Get the host details by {hostId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "hostId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "associatedSystems": [
                    "<string>",
                    "<string>"
                  ],
                  "comment": "<string>",
                  "consoleUri": "<string>",
                  "contact": "<string>",
                  "customerId": "<string>",
                  "editStatus": "<string>",
                  "fqdn": "<string>",
                  "generation": "<long>",
                  "hostGroups": [
                    {
                      "id": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    }
                  ],
                  "id": "<string>",
                  "initiators": [
                    {
                      "address": "<string>",
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "protocol": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    {
                      "address": "<string>",
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "protocol": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  ],
                  "ipAddress": "<string>",
                  "location": "<string>",
                  "markedForDelete": "<boolean>",
                  "model": "<string>",
                  "name": "<string>",
                  "operatingSystem": "<string>",
                  "persona": "<string>",
                  "protocol": "<string>",
                  "requestUri": "<string>",
                  "subnet": "<string>",
                  "systems": [
                    "<string>",
                    "<string>"
                  ],
                  "type": "<string>",
                  "userCreated": "<boolean>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > host-initiators > {hostId}"
        ],
        "summary": "Update Host by {hostId}",
        "description": "Update host details by {hostId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "initiatorsToCreate": [
                    {
                      "address": "<string>",
                      "protocol": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "hbaModel": "<string>",
                      "hostSpeed": "<long>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "vendor": "<string>"
                    },
                    {
                      "address": "<string>",
                      "protocol": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "hbaModel": "<string>",
                      "hostSpeed": "<long>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "vendor": "<string>"
                    }
                  ],
                  "name": "<string>",
                  "updatedInitiators": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "hostId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/host-initiators": {
      "get": {
        "tags": [
          "api > Storage API > host-initiators"
        ],
        "summary": "Get the list of hosts",
        "description": "Get the list of hosts",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter hostservice by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort hostservice by Key.",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "associatedSystems": [
                        "<string>",
                        "<string>"
                      ],
                      "comment": "<string>",
                      "consoleUri": "<string>",
                      "contact": "<string>",
                      "customerId": "<string>",
                      "editStatus": "<string>",
                      "fqdn": "<string>",
                      "generation": "<long>",
                      "hostGroups": [
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "initiators": [
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        },
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        }
                      ],
                      "ipAddress": "<string>",
                      "location": "<string>",
                      "markedForDelete": "<boolean>",
                      "model": "<string>",
                      "name": "<string>",
                      "operatingSystem": "<string>",
                      "persona": "<string>",
                      "protocol": "<string>",
                      "subnet": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "type": "<string>",
                      "userCreated": "<boolean>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "associatedSystems": [
                        "<string>",
                        "<string>"
                      ],
                      "comment": "<string>",
                      "consoleUri": "<string>",
                      "contact": "<string>",
                      "customerId": "<string>",
                      "editStatus": "<string>",
                      "fqdn": "<string>",
                      "generation": "<long>",
                      "hostGroups": [
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "id": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "initiators": [
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        },
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        }
                      ],
                      "ipAddress": "<string>",
                      "location": "<string>",
                      "markedForDelete": "<boolean>",
                      "model": "<string>",
                      "name": "<string>",
                      "operatingSystem": "<string>",
                      "persona": "<string>",
                      "protocol": "<string>",
                      "subnet": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "type": "<string>",
                      "userCreated": "<boolean>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > host-initiators"
        ],
        "summary": "Create a host",
        "description": "Create a host",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "operatingSystem": "<string>",
                  "userCreated": "<boolean>",
                  "comment": "<string>",
                  "contact": "<string>",
                  "fqdn": "<string>",
                  "hostGroupIds": [
                    "<string>",
                    "<string>"
                  ],
                  "initiatorIds": [
                    "<string>",
                    "<string>"
                  ],
                  "initiatorsToCreate": [
                    {
                      "address": "<string>",
                      "protocol": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "hbaModel": "<string>",
                      "hostSpeed": "<long>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "vendor": "<string>"
                    },
                    {
                      "address": "<string>",
                      "protocol": "<string>",
                      "driverVersion": "<string>",
                      "firmwareVersion": "<string>",
                      "hbaModel": "<string>",
                      "hostSpeed": "<long>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "vendor": "<string>"
                    }
                  ],
                  "ipAddress": "<string>",
                  "location": "<string>",
                  "model": "<string>",
                  "persona": "<string>",
                  "protocol": "<string>",
                  "subnet": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "associatedSystems": [
                    "<string>",
                    "<string>"
                  ],
                  "comment": "<string>",
                  "consoleUri": "<string>",
                  "contact": "<string>",
                  "customerId": "<string>",
                  "editStatus": "<string>",
                  "fqdn": "<string>",
                  "generation": "<long>",
                  "hostGroups": [
                    {
                      "id": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    }
                  ],
                  "id": "<string>",
                  "initiators": [
                    {
                      "address": "<string>",
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "protocol": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    {
                      "address": "<string>",
                      "id": "<string>",
                      "ipAddress": "<string>",
                      "name": "<string>",
                      "protocol": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  ],
                  "ipAddress": "<string>",
                  "location": "<string>",
                  "markedForDelete": "<boolean>",
                  "model": "<string>",
                  "name": "<string>",
                  "operatingSystem": "<string>",
                  "persona": "<string>",
                  "protocol": "<string>",
                  "subnet": "<string>",
                  "systems": [
                    "<string>",
                    "<string>"
                  ],
                  "type": "<string>",
                  "userCreated": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/host-initiator-groups/{hostGroupId}": {
      "delete": {
        "tags": [
          "api > Storage API > host-initiator-groups > {hostGroupId}"
        ],
        "summary": "Delete a host group by {hostGroupId}",
        "description": "Delete a host group by {hostGroupId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Forceful delete option",
            "example": "<boolean>"
          },
          {
            "name": "hostGroupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > Storage API > host-initiator-groups > {hostGroupId}"
        ],
        "summary": "Get the host group details by {hostGroupId}",
        "description": "Get the host group details by {hostGroupId}",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "hostGroupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "associatedSystems": [
                    "<string>",
                    "<string>"
                  ],
                  "comment": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "editStatus": "<string>",
                  "generation": "<long>",
                  "hosts": [
                    {
                      "id": "<string>",
                      "initiators": [
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        },
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        }
                      ],
                      "ipAddress": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "initiators": [
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        },
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        }
                      ],
                      "ipAddress": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    }
                  ],
                  "id": "<string>",
                  "markedForDelete": "<boolean>",
                  "name": "<string>",
                  "requestUri": "<string>",
                  "systems": [
                    "<string>",
                    "<string>"
                  ],
                  "type": "<string>",
                  "userCreated": "<boolean>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > Storage API > host-initiator-groups > {hostGroupId}"
        ],
        "summary": "Update host group by {hostGroupId}",
        "description": "Update host group details by {hostGroupId}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "hostProximityValues": [
                    {
                      "groupName": "<string>",
                      "groupUid": "<string>",
                      "hostId": "<string>",
                      "hostName": "<string>",
                      "proximitySystemName": "<string>",
                      "systemName": "<string>",
                      "systemUid": "<string>",
                      "targetName": "<string>",
                      "targetSystemId": "<string>"
                    },
                    {
                      "groupName": "<string>",
                      "groupUid": "<string>",
                      "hostId": "<string>",
                      "hostName": "<string>",
                      "proximitySystemName": "<string>",
                      "systemName": "<string>",
                      "systemUid": "<string>",
                      "targetName": "<string>",
                      "targetSystemId": "<string>"
                    }
                  ],
                  "hostsToCreate": [
                    {
                      "name": "<string>",
                      "operatingSystem": "<string>",
                      "userCreated": "<boolean>",
                      "comment": "<string>",
                      "contact": "<string>",
                      "fqdn": "<string>",
                      "hostGroupIds": [
                        "<string>",
                        "<string>"
                      ],
                      "initiatorIds": [
                        "<string>",
                        "<string>"
                      ],
                      "initiatorsToCreate": [
                        {
                          "address": "<string>",
                          "protocol": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "hbaModel": "<string>",
                          "hostSpeed": "<long>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "vendor": "<string>"
                        },
                        {
                          "address": "<string>",
                          "protocol": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "hbaModel": "<string>",
                          "hostSpeed": "<long>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "vendor": "<string>"
                        }
                      ],
                      "ipAddress": "<string>",
                      "location": "<string>",
                      "model": "<string>",
                      "persona": "<string>",
                      "protocol": "<string>",
                      "subnet": "<string>"
                    },
                    {
                      "name": "<string>",
                      "operatingSystem": "<string>",
                      "userCreated": "<boolean>",
                      "comment": "<string>",
                      "contact": "<string>",
                      "fqdn": "<string>",
                      "hostGroupIds": [
                        "<string>",
                        "<string>"
                      ],
                      "initiatorIds": [
                        "<string>",
                        "<string>"
                      ],
                      "initiatorsToCreate": [
                        {
                          "address": "<string>",
                          "protocol": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "hbaModel": "<string>",
                          "hostSpeed": "<long>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "vendor": "<string>"
                        },
                        {
                          "address": "<string>",
                          "protocol": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "hbaModel": "<string>",
                          "hostSpeed": "<long>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "vendor": "<string>"
                        }
                      ],
                      "ipAddress": "<string>",
                      "location": "<string>",
                      "model": "<string>",
                      "persona": "<string>",
                      "protocol": "<string>",
                      "subnet": "<string>"
                    }
                  ],
                  "name": "<string>",
                  "removedHosts": [
                    "<string>",
                    "<string>"
                  ],
                  "updatedHosts": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "hostGroupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "taskUri": "<string>",
                  "message": "<string>",
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/host-initiator-groups": {
      "get": {
        "tags": [
          "api > Storage API > host-initiator-groups"
        ],
        "summary": "Get the list of host groups",
        "description": "Get the list of host groups",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to filter hostservice by Key.",
            "example": "<string>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "oData query to sort hostservice by Key.",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Number of items to return at a time",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The offset of the first item in the collection to return",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "associatedSystems": [
                        "<string>",
                        "<string>"
                      ],
                      "comment": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "editStatus": "<string>",
                      "generation": "<long>",
                      "hosts": [
                        {
                          "id": "<string>",
                          "initiators": [
                            {
                              "address": "<string>",
                              "id": "<string>",
                              "ipAddress": "<string>",
                              "name": "<string>",
                              "protocol": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ]
                            },
                            {
                              "address": "<string>",
                              "id": "<string>",
                              "ipAddress": "<string>",
                              "name": "<string>",
                              "protocol": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ]
                            }
                          ],
                          "ipAddress": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "id": "<string>",
                          "initiators": [
                            {
                              "address": "<string>",
                              "id": "<string>",
                              "ipAddress": "<string>",
                              "name": "<string>",
                              "protocol": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ]
                            },
                            {
                              "address": "<string>",
                              "id": "<string>",
                              "ipAddress": "<string>",
                              "name": "<string>",
                              "protocol": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ]
                            }
                          ],
                          "ipAddress": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "type": "<string>",
                      "userCreated": "<boolean>"
                    },
                    {
                      "associatedLinks": [
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        },
                        {
                          "resourceUri": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "associatedSystems": [
                        "<string>",
                        "<string>"
                      ],
                      "comment": "<string>",
                      "consoleUri": "<string>",
                      "customerId": "<string>",
                      "editStatus": "<string>",
                      "generation": "<long>",
                      "hosts": [
                        {
                          "id": "<string>",
                          "initiators": [
                            {
                              "address": "<string>",
                              "id": "<string>",
                              "ipAddress": "<string>",
                              "name": "<string>",
                              "protocol": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ]
                            },
                            {
                              "address": "<string>",
                              "id": "<string>",
                              "ipAddress": "<string>",
                              "name": "<string>",
                              "protocol": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ]
                            }
                          ],
                          "ipAddress": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        },
                        {
                          "id": "<string>",
                          "initiators": [
                            {
                              "address": "<string>",
                              "id": "<string>",
                              "ipAddress": "<string>",
                              "name": "<string>",
                              "protocol": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ]
                            },
                            {
                              "address": "<string>",
                              "id": "<string>",
                              "ipAddress": "<string>",
                              "name": "<string>",
                              "protocol": "<string>",
                              "systems": [
                                "<string>",
                                "<string>"
                              ]
                            }
                          ],
                          "ipAddress": "<string>",
                          "markedForDelete": "<boolean>",
                          "name": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ],
                          "userCreated": "<boolean>"
                        }
                      ],
                      "id": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "type": "<string>",
                      "userCreated": "<boolean>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "requestUri": "<string>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api > Storage API > host-initiator-groups"
        ],
        "summary": "Create a host group",
        "description": "Create a host group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "userCreated": "<boolean>",
                  "comment": "<string>",
                  "hostIds": [
                    "<string>",
                    "<string>"
                  ],
                  "hostsToCreate": [
                    {
                      "name": "<string>",
                      "operatingSystem": "<string>",
                      "userCreated": "<boolean>",
                      "comment": "<string>",
                      "contact": "<string>",
                      "fqdn": "<string>",
                      "hostGroupIds": [
                        "<string>",
                        "<string>"
                      ],
                      "initiatorIds": [
                        "<string>",
                        "<string>"
                      ],
                      "initiatorsToCreate": [
                        {
                          "address": "<string>",
                          "protocol": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "hbaModel": "<string>",
                          "hostSpeed": "<long>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "vendor": "<string>"
                        },
                        {
                          "address": "<string>",
                          "protocol": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "hbaModel": "<string>",
                          "hostSpeed": "<long>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "vendor": "<string>"
                        }
                      ],
                      "ipAddress": "<string>",
                      "location": "<string>",
                      "model": "<string>",
                      "persona": "<string>",
                      "protocol": "<string>",
                      "subnet": "<string>"
                    },
                    {
                      "name": "<string>",
                      "operatingSystem": "<string>",
                      "userCreated": "<boolean>",
                      "comment": "<string>",
                      "contact": "<string>",
                      "fqdn": "<string>",
                      "hostGroupIds": [
                        "<string>",
                        "<string>"
                      ],
                      "initiatorIds": [
                        "<string>",
                        "<string>"
                      ],
                      "initiatorsToCreate": [
                        {
                          "address": "<string>",
                          "protocol": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "hbaModel": "<string>",
                          "hostSpeed": "<long>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "vendor": "<string>"
                        },
                        {
                          "address": "<string>",
                          "protocol": "<string>",
                          "driverVersion": "<string>",
                          "firmwareVersion": "<string>",
                          "hbaModel": "<string>",
                          "hostSpeed": "<long>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "vendor": "<string>"
                        }
                      ],
                      "ipAddress": "<string>",
                      "location": "<string>",
                      "model": "<string>",
                      "persona": "<string>",
                      "protocol": "<string>",
                      "subnet": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "associatedLinks": [
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    },
                    {
                      "resourceUri": "<string>",
                      "type": "<string>"
                    }
                  ],
                  "associatedSystems": [
                    "<string>",
                    "<string>"
                  ],
                  "comment": "<string>",
                  "consoleUri": "<string>",
                  "customerId": "<string>",
                  "editStatus": "<string>",
                  "generation": "<long>",
                  "hosts": [
                    {
                      "id": "<string>",
                      "initiators": [
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        },
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        }
                      ],
                      "ipAddress": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "initiators": [
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        },
                        {
                          "address": "<string>",
                          "id": "<string>",
                          "ipAddress": "<string>",
                          "name": "<string>",
                          "protocol": "<string>",
                          "systems": [
                            "<string>",
                            "<string>"
                          ]
                        }
                      ],
                      "ipAddress": "<string>",
                      "markedForDelete": "<boolean>",
                      "name": "<string>",
                      "systems": [
                        "<string>",
                        "<string>"
                      ],
                      "userCreated": "<boolean>"
                    }
                  ],
                  "id": "<string>",
                  "markedForDelete": "<boolean>",
                  "name": "<string>",
                  "systems": [
                    "<string>",
                    "<string>"
                  ],
                  "type": "<string>",
                  "userCreated": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Internal / unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  },
                  "example-1": {
                    "summary": "unexpected error",
                    "value": {
                      "error": "<string>",
                      "errorCode": "<string>"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit-events": {
      "get": {
        "tags": [
          "api > Storage API > audit-events"
        ],
        "summary": "GET audit-events",
        "description": "returns the audit events",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter criteria - e.g. state eq Failure and occurredAt gt 2020-09-08T16:51:33Z",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results to return",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results to skip",
            "example": "<integer>"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "A comma separated list of properties to sort by, followed by a direction \nindicator (\"asc\" or \"desc\"). If no direction indicator is specified the \ndefault order is ascending. - e.g. state,version desc. Currently only support\nsorting by 1 property per request",
            "example": "<string>"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "A list of properties to include in the response. Currently only support\nreturning of all fields.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    {
                      "id": "<string>",
                      "message": "<string>",
                      "occurredAt": "<string>",
                      "state": "<string>",
                      "version": "<integer>",
                      "associatedResource": {
                        "id": "<string>",
                        "name": "<string>",
                        "type": "<string>"
                      },
                      "code": "<string>",
                      "contextId": "<string>",
                      "customerId": "<string>",
                      "permission": "<string>",
                      "scope": "<string>",
                      "source": "<string>",
                      "sourceIpAddress": "<string>",
                      "taskId": "<string>",
                      "uniqueId": "<string>",
                      "userEmail": "<string>"
                    },
                    {
                      "id": "<string>",
                      "message": "<string>",
                      "occurredAt": "<string>",
                      "state": "<string>",
                      "version": "<integer>",
                      "associatedResource": {
                        "id": "<string>",
                        "name": "<string>",
                        "type": "<string>"
                      },
                      "code": "<string>",
                      "contextId": "<string>",
                      "customerId": "<string>",
                      "permission": "<string>",
                      "scope": "<string>",
                      "source": "<string>",
                      "sourceIpAddress": "<string>",
                      "taskId": "<string>",
                      "uniqueId": "<string>",
                      "userEmail": "<string>"
                    }
                  ],
                  "pageLimit": "<integer>",
                  "pageOffset": "<integer>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-controls": {
      "get": {
        "tags": [
          "api > Storage API > access-controls"
        ],
        "summary": "Get User Accessible Resources",
        "description": "Retun a list of user permissions.  The returned list of permissions will be based upon the supplied filter.  If no filter was supplied, all user permissions will be returned. It is also possible to request all resource type with certain permission type (ex. ALL.read)",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "permission",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "List of permissions, each of which, has the form \"resource type.permission\" (ex. volume.read,volume.write). The word \"ANY\" can be used as a wild card for the resource type (ex. ANY.read). Omitting the permission parameters is equivalent to asking for all user permissions.",
            "example": "<string>"
          },
          {
            "name": "permission",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "List of permissions, each of which, has the form \"resource type.permission\" (ex. volume.read,volume.write). The word \"ANY\" can be used as a wild card for the resource type (ex. ANY.read). Omitting the permission parameters is equivalent to asking for all user permissions.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "items": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": "<string>",
                  "errorCode": "<string>",
                  "traceId": "<string>"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dual-auth-operations": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Dual Authorization Status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/dual-auth-operations/{dualAuthId}": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Dual Authorization Status given ID",
        "parameters": [
          {
            "name": "dualAuthId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "patch": {
        "tags": [
          "api"
        ],
        "summary": "Change Dual Auth approval for Id",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "dualAuthId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  }
}